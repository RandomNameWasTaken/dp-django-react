[{"/home/xkruzel/Desktop/todo/reactapp/src/index.js":"1","/home/xkruzel/Desktop/todo/reactapp/src/App.js":"2","/home/xkruzel/Desktop/todo/reactapp/src/reportWebVitals.js":"3","/home/xkruzel/Desktop/todo/reactapp/src/StateApp.ts":"4","/home/xkruzel/Desktop/todo/reactapp/src/LoadJson.jsx":"5","/home/xkruzel/Desktop/todo/reactapp/src/Visualise.jsx":"6","/home/xkruzel/Desktop/todo/reactapp/src/LoadAeon.jsx":"7","/home/xkruzel/Desktop/todo/reactapp/src/rendering.js":"8","/home/xkruzel/Desktop/todo/reactapp/src/Point.js":"9","/home/xkruzel/Desktop/todo/reactapp/src/ChooseConfig.jsx":"10","/home/xkruzel/Desktop/todo/reactapp/src/Icons/AeonFileIcon.jsx":"11","/home/xkruzel/Desktop/todo/reactapp/src/Icons/ServerIcon.jsx":"12","/home/xkruzel/Desktop/todo/reactapp/src/Icons/JsonIcon.jsx":"13","/home/xkruzel/Desktop/todo/reactapp/src/Icons/CloseIcon.jsx":"14","/home/xkruzel/Desktop/todo/reactapp/src/Icons/InfoIcon.jsx":"15","/home/xkruzel/Desktop/todo/reactapp/src/Icons/ExclaimIcon.jsx":"16","/home/xkruzel/Desktop/todo/reactapp/src/Icons/CoffeeIcon.jsx":"17","/home/xkruzel/Desktop/todo/reactapp/src/Icons/DownloadIcon.jsx":"18","/home/xkruzel/Desktop/todo/reactapp/src/Icons/PlusIcon.jsx":"19","/home/xkruzel/Desktop/todo/reactapp/src/Icons/OnlyVisualiseIcon.jsx":"20","/home/xkruzel/Desktop/todo/reactapp/src/Icons/MinusIcon.jsx":"21","/home/xkruzel/Desktop/todo/reactapp/src/Icons/SendIcon.jsx":"22","/home/xkruzel/Desktop/todo/reactapp/src/utils.js":"23","/home/xkruzel/Desktop/todo/reactapp/src/WrongFile.jsx":"24"},{"size":535,"mtime":1662399185904,"results":"25","hashOfConfig":"26"},{"size":2428,"mtime":1668204355206,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":1662399185904,"results":"28","hashOfConfig":"26"},{"size":153,"mtime":1669629143316,"results":"29","hashOfConfig":"26"},{"size":2826,"mtime":1669629615180,"results":"30","hashOfConfig":"26"},{"size":10117,"mtime":1669631658586,"results":"31","hashOfConfig":"26"},{"size":5551,"mtime":1669629528007,"results":"32","hashOfConfig":"26"},{"size":15067,"mtime":1669641552398,"results":"33","hashOfConfig":"26"},{"size":111,"mtime":1669388111914,"results":"34","hashOfConfig":"26"},{"size":15428,"mtime":1669583193693,"results":"35","hashOfConfig":"26"},{"size":568,"mtime":1668153098085,"results":"36","hashOfConfig":"26"},{"size":880,"mtime":1667751780313,"results":"37","hashOfConfig":"26"},{"size":2318,"mtime":1667751781757,"results":"38","hashOfConfig":"26"},{"size":575,"mtime":1668152755788,"results":"39","hashOfConfig":"26"},{"size":751,"mtime":1667894717071,"results":"40","hashOfConfig":"26"},{"size":444,"mtime":1668152848686,"results":"41","hashOfConfig":"26"},{"size":2551,"mtime":1667751676431,"results":"42","hashOfConfig":"26"},{"size":628,"mtime":1667895265452,"results":"43","hashOfConfig":"26"},{"size":491,"mtime":1668153313933,"results":"44","hashOfConfig":"26"},{"size":639,"mtime":1667751744893,"results":"45","hashOfConfig":"26"},{"size":559,"mtime":1668153354557,"results":"46","hashOfConfig":"26"},{"size":578,"mtime":1668203403524,"results":"47","hashOfConfig":"26"},{"size":391,"mtime":1669451592329,"results":"48","hashOfConfig":"26"},{"size":1205,"mtime":1669629686473,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hunrvr",{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124"},"/home/xkruzel/Desktop/todo/reactapp/src/index.js",[],[],"/home/xkruzel/Desktop/todo/reactapp/src/App.js",[],[],"/home/xkruzel/Desktop/todo/reactapp/src/reportWebVitals.js",[],[],"/home/xkruzel/Desktop/todo/reactapp/src/StateApp.ts",[],[],"/home/xkruzel/Desktop/todo/reactapp/src/LoadJson.jsx",[],[],"/home/xkruzel/Desktop/todo/reactapp/src/Visualise.jsx",[],[],"/home/xkruzel/Desktop/todo/reactapp/src/LoadAeon.jsx",["125"],[],"import React from 'react';\nimport App from './App';\nimport WrongFile from './WrongFile';\nimport { StateApp } from './StateApp.ts';\nimport ChooseConfig from './ChooseConfig';\nimport axios from \"axios\";\nimport CloseIcon from './Icons/CloseIcon';\nimport ExclaimIcon from './Icons/ExclaimIcon';\n\nexport default class LoadAeon extends React.Component {\n    state = {\n        value : this.props.value || StateApp.LoadAeon,\n        selectedFile: this.props.selectedFile || null,\n        isOpen: false,\n        sync: false,\n        async: false,\n    };\n  //  const [param_arguments, set_param_arguments] = useState();\n\n    onFileChange = event => {\n      // Update the state\n      this.setState({ selectedFile: event.target.files[0] });\n    };\n\n    // On file upload (click the upload button)\n    onFileUpload = () => {\n\n      if ((!this.state.sync && !this.state.async) || !this.state.selectedFile) {\n        this.openModal();\n        return;\n      }\n      \n      const file = this.state.selectedFile;\n\n      const re_file_ending = /\\.aeon$/;\n      if (!file.name.match( re_file_ending )) {\n        this.setState({ wrong_file : true });\n        return;\n      }\n\n      var reader = new FileReader();\n      reader.readAsText(file,'UTF-8');\n    \n      reader.addEventListener(\"load\", () => {\n          var r = reader.result;\n\n          var r_lines = r.split(\"\\n\");\n          const regex_comment = /^\\s*#/;\n          var result_data = [];\n          for (let i = 0; i < r_lines.length; i++) {\n            if (r_lines[i].match(regex_comment)) {\n              continue;\n            }\n            result_data.push(r_lines[i]);\n          }\n\n          this.setState({ file_read : result_data });\n          const result_data_joined = result_data.join(\" %% \");\n          document.cookie=\"resultData=\" + result_data_joined + \"; SameSite=None; Secure\";\n      });\n\n      this.setState({ value : StateApp.ChooseConfig });\n    };\n  \n    fileData = () => {    \n        if (this.state.selectedFile) {\n           \n          return (\n            <div>\n              <h2>File Details:</h2>\n               \n                <p>File Name: {this.state.selectedFile.name}</p>   \n            </div>\n          );\n        } else {\n          return (\n            <div>\n              <br />\n              <h6>Choose before Pressing the Process button</h6>\n            </div>\n          );\n        }\n    };\n\n    handleBackButton = event => {\n      this.setState({ value : StateApp.MainApp });\n    };\n\n    openModal = (event) => {\n      this.setState({ isOpen : true });\n    }\n\n    closeModal = (event) => {\n      this.setState({ isOpen : false });\n    }\n\n    render() {\n        if (this.state.value === StateApp.MainApp) {\n          return <App />;\n        }\n\n        if (this.state.wrong_file) {\n          return <WrongFile expected=\".aeon\"/>;\n        }\n        \n        if (this.state.value === StateApp.ChooseConfig) {\n          return <ChooseConfig file_read={this.state.file_read} async={this.state.async} sync={this.state.sync} selectedFile={this.state.selectedFile}/>;\n        }\n\n        return (\n          <div class=\"row loadAEONwrapper\">\n            {this.state.isOpen &&\n                  <div>\n                    <div class=\"overlay_styles\"/>\n                    <div class=\"modal_styles\">\n                      <div class=\"row centeredTopRight\" onClick={this.closeModal}>\n                        <CloseIcon />\n                      </div>\n\n                      <div class=\"row\">\n                        <div class=\"col-3\">\n                          <ExclaimIcon />\n                        </div>\n                        <div class=\"col-6\">\n                          File and at least one type is mandatory.\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n              }\n            <div class=\"col\">\n              <div class=\"row\" className=\"App\">\n                <h3 class=\"wrapperh3\">\n                Type of Boolean network\n                </h3>\n                <form>\n                <div class=\"form-check form-check-inline\">\n                  <input type=\"checkbox\" class=\"cblack\" id=\"async\" name=\"semantics\" value=\"1\" onChange={event => this.setState({async : !this.state.async})}/>\n                  <label for=\"async\" class=\"form-check-label\">Asynchronous</label>\n                </div>\n                <div class=\"form-check form-check-inline\">\n                  <input type=\"checkbox\" class=\"cblack\" id=\"sync\" name=\"semantics\" value=\"2\" onChange={event => this.setState({sync : !this.state.sync})}/>\n                  <label class=\"form-check-label\" for=\"sync\">Synchronous</label>\n                </div>\n                </form>\n              </div>\n\n              <br/>\n              <br/>\n\n              <div class=\"row\" className=\"App\">\n                <h3 class=\"wrapperh3\">\n                  File Upload\n                </h3>\n\n                <div class=\"col-lg-4 center\">\n                    <input type=\"file\" class=\"form-control center\" onChange={this.onFileChange} accept=\".aeon\"/>\n                    <button onClick={this.onFileUpload} class=\"btn-dark wrapperh3 btn-md btn\">\n                      Process\n                    </button>\n                </div>\n\n              {this.fileData()}\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-lg-2\">\n                <input type=\"submit\" value=\"Back\" class=\"btn-dark btn-md btn\" onClick={this.handleBackButton} />\n              </div>\n            </div>\n          </div>\n          );\n    }\n}\n","/home/xkruzel/Desktop/todo/reactapp/src/rendering.js",["126","127","128","129","130"],[],"/home/xkruzel/Desktop/todo/reactapp/src/Point.js",[],[],"/home/xkruzel/Desktop/todo/reactapp/src/ChooseConfig.jsx",["131"],[],"import './App.css';\nimport React from 'react';\nimport Visualise from './Visualise';\nimport App from './App';\nimport LoadAeon from './LoadAeon';\nimport { StateApp } from './StateApp.ts';\nimport axios from \"axios\";\n\nimport CoffeeIcon from './Icons/CoffeeIcon';\nimport DownloadIcon from './Icons/DownloadIcon';\nimport OnlyVisualiseIcon from './Icons/OnlyVisualiseIcon';\nimport CloseIcon from './Icons/CloseIcon';\nimport ExclaimIcon from './Icons/ExclaimIcon';\nimport PlusIcon from './Icons/PlusIcon';\nimport MinusIcon from './Icons/MinusIcon';\nimport SendIcon from './Icons/SendIcon';\n\n\nlet param_arguments = {};\nlet param_lines = {};\n\nclass ChooseConfig extends React.Component {\n  state = {\n    value : this.props.value || StateApp.ChooseConfig,\n    checked_nodes : [],\n    compute: false,\n    asked : false,\n    param_arguments: {},\n    param_count : 1,\n    isOpen: false,\n    shouldHide: [],\n  };\n\n   handleCheckSyntax = (event) => {\n      const name = event.currentTarget.id;\n      const element = event.target;\n      const parent_id = element.closest(\"ul\").getAttribute(\"id\").split('_');\n      param_arguments[parent_id[1]][name] = event.target.value; // TODO syntax check\n      \n      if (this.state.number_of_nodes === undefined) {\n        this.setState({ number_of_nodes : Object.keys(this.state.nodes).length });\n      }\n\n      const line = param_arguments[parent_id[1]][name];\n\n      if (line.length === 0) {\n        element.classList = [];\n      } else {\n        axios\n          .get(\"https://bool-net-state-space-vis.herokuapp.com/check_syntax\", { params:\n              {\n                line : line,\n                nodes: this.state.nodes,\n                n : this.state.number_of_nodes,\n                } })\n          .then(response => {\n            if (response.data === true) {\n              element.classList = ['greenshadow'];\n            } else {\n              element.classList = ['redshadow'];\n            }\n        });\n      }\n    };\n\n    handleBackButton = event => {\n      this.setState({ value : StateApp.LoadAeon });\n    };\n\n    handleNodesButton = event => {\n\n      const greens = document.getElementsByClassName('greenshadow');\n      if (this.state.params !== undefined && greens.length !== this.state.param_count * this.state.params.size) {\n        this.openModal();\n        return;\n      }\n\n      event.preventDefault();\n      this.setState({ compute : true });\n\n      if (this.state.params !== undefined) {\n        for (let c = 0; c < this.state.param_count; ++c) {\n          this.state.params.forEach((value, key) => {\n            \n            const expresion_arr = value[\"expr\"].split(\"___parametrization___\");\n            var expr_snd = '';\n            if (expresion_arr.length > 1) {\n              expr_snd = expresion_arr[1];\n            }\n\n            if (param_lines[c] === undefined) {\n              param_lines[c] = []\n            }\n\n            param_lines[c].push( \"$\" + key + \" : \" + expresion_arr[0] + \" \" + param_arguments[c][key] + \" \" + expr_snd );\n          });\n        }\n      }\n    };\n\n     handleOnChange = (event, name) => {\n      var checked = this.state.checked_nodes;\n\n      if (event.target.checked) {\n        checked.push(name);\n      } else {\n        checked = checked.filter(function(value) {\n          return value != name;\n        });\n      }\n      this.setState({ checked_nodes: checked });\n    };\n\n    handleNoSave = () => {\n      this.setState({ asked : true });\n    }\n\n    handleSave = () => {\n      const element = document.createElement(\"a\");\n\n      const file = new Blob([this.state.clusters],\n        {\n          type:\"text/plain;charset=utf-8\"\n        });\n\n      element.href = URL.createObjectURL(file);\n      element.download = \"data.json\";\n      document.body.appendChild(element);\n      element.click();\n\n      this.setState({ asked : true });\n    }\n\n    addParam = (event) => {\n      event.preventDefault();\n      this.setState({ param_count : this.state.param_count + 1 });\n    }\n\n    hideParam = (event, c) => {\n      event.preventDefault();\n      var shouldHide = this.state.shouldHide;\n      shouldHide[c] = true;\n      this.setState({ shouldHide: shouldHide, param_count : this.state.param_count - 1 });\n    }\n\n    openModal = (event) => {\n      this.setState({ isOpen : true });\n    }\n\n    closeModal = (event) => {\n      this.setState({ isOpen : false });\n    }\n\n  render() {\n\n    if (this.state.value === StateApp.MainApp) {\n      return <App />\n    }\n\n    if (this.state.value === StateApp.LoadAeon) {\n      return <LoadAeon />\n    }\n\n    if (this.state.error) {\n      return   <div class=\"row\">\n                <div class=\"col-4-lg btn wrapper\"></div>\n                <div class=\"col-4-lg btn wrapper\">\n                    <ExclaimIcon />\n                    <h3 class=\"wrapperh3\">Error</h3>\n                    <p>Please check your input file and try again.</p>\n                </div>\n                <div class=\"col-4-lg btn wrapper\"></div>\n              </div>\n    }\n\n    if (this.state.value === StateApp.Visualise) {\n\n          // Ask to save data\n          const clusters_parsed = JSON.parse(this.state.clusters);\n\n          if (this.state.asked === true) {\n            return <Visualise fileData={clusters_parsed} />;\n          }\n          return (\n            <div>\n              <div class=\"row height-100\"></div>\n              <div class=\"row height-200 \">\n                <form onSubmit={this.handleSubmit}> \n\n                <div class=\"col-lg-6 btn wrapper\" onClick={this.handleSave} >\n                  <DownloadIcon />\n                  <br/>\n                  <h3 class=\"wrapperh3\">Download</h3>\n                  <p>Download precomputed clusters as JSON file.</p>\n                </div>\n\n                <div class=\"col-lg-6 btn wrapper\" onClick={this.handleNoSave} >\n                  <OnlyVisualiseIcon />\n                  <br/>\n                  <h3 class=\"wrapperh3\">Only visualize</h3>\n                  <p>Only visualise without saving precomputed data.</p>\n                </div>\n\n                </form>\n              </div>\n            </div>\n                      \n          );\n    }  \n\n    if (!this.state.nodes && this.props.file_read) {\n        const data_params = {\n          file_data : this.props.file_read.join(\" %% \"),\n        };\n\n        axios\n            .get(\"https://bool-net-state-space-vis.herokuapp.com/get_nodes\", { params: data_params })\n            .then(response => {\n                if (response.data === \"\" || !response.data) {\n                  this.setState({ error : true });\n                  return;\n                }\n                const result = JSON.parse(response.data);\n                this.setState({ nodes : result[\"nodes\"] });\n\n                if (result[\"parametrization\"] !== undefined) {\n                    this.setState({ params : new Map(Object.entries(result[\"parametrization\"]))});\n                }\n\n            });\n        return (\n              <div class=\"row\">\n                <div class=\"col-4-lg btn wrapper\"></div>\n                <div class=\"col-4-lg btn wrapper\">\n                    <CoffeeIcon />\n                    <h3 class=\"wrapperh3\">Loading nodes</h3>\n                </div>\n                <div class=\"col-4-lg btn wrapper\"></div>\n              </div>\n        );\n    }\n\n    if (this.state.nodes && this.state.compute === false) {\n\n        var parametrization_selection;\n        const counts = Array.from(Array(this.state.param_count).keys());\n\n        if (this.state.params !== undefined) {\n\n          counts.forEach((c) => {\n            if (param_arguments[c] === undefined) {\n              param_arguments[c] = {};\n            }\n          });\n\n          if (this.state.shouldHide === undefined) {\n            this.setState({ shouldHide : counts.map( x => false ) });\n          }\n\n          if (this.state.shouldHide.length < counts.length) {\n            for (let i = 0; i < counts.length - this.state.shouldHide.length; i++) {\n                this.state.shouldHide.push(false);\n            }\n          }\n\n          var lis = [];\n          this.state.params.forEach((value, name) => {\n            lis.push(\n                <li key={name}>\n                  <b>{name}</b>:\n                  <br/>\n                  <i>expression</i>: {value[\"expr\"]}\n                  <br/>\n                  <i>can be parametrized by:</i> {value[\"args\"]}\n                  <br/>\n                  <input type=\"text\" name={name} id={name} onChange={this.handleCheckSyntax}/>\n                </li>);\n          });\n\n            parametrization_selection = <div className=\"App\">\n                                            <h3>Add parametrization</h3>\n                                            <p>\n                                              Your expression will be added instead of '___parametrization___'.\n                                            </p>\n                                            <div class=\"row back\">\n                                            {\n                                              counts.map(c => {\n                                                var minus;\n                                                if (c === counts.length - 1 && c !== 0) {\n                                                  minus = (\n                                                    <span class=\"col-lg-1\" title=\"Delete parametrization\" onClick={(e) => this.hideParam(e, c)} >\n                                                      <MinusIcon />\n                                                    </span>\n                                                  );\n                                                }\n\n                                                return (\n                                                <div class=\"col back\" className={this.state.shouldHide[c] === true ? 'hidden' : undefined}>\n                                                  <h5>\n                                                    No. {c + 1} &nbsp; {minus}\n                                                  </h5>\n                                                  <ul id={'param_' + c}>\n                                                    {\n                                                      lis.map(li => {\n                                                        return li;\n                                                      }, this)\n                                                    }\n                                                  </ul>\n                                                </div>);\n                                              }, this)\n                                            }\n                                              <div class=\"col-lg-1\" onClick={this.addParam} title=\"Add parametrization\" >\n                                                <PlusIcon />\n                                              </div>\n                                            </div>\n                                          </div>\n            }\n    }\n\n    if (this.state.nodes && (!this.state.parsed_nodes_keys || this.state.parsed_nodes_keys === null)) {\n        const nodes_keys = Object.keys(this.state.nodes);\n        this.setState({parsed_nodes_keys : nodes_keys});\n    }\n\n    if (this.state.parsed_nodes_keys && this.state.compute === false) {\n\n        const nodes_selection = <div className=\"App\">\n                                <h3>Select nodes</h3>\n                                {this.state.parsed_nodes_keys.map(name => {\n                                    return (\n                                    <div>\n                                        <input\n                                        type=\"checkbox\"\n                                        id={`custom-checkbox-${name}`}\n                                        name={name}\n                                        value={name}\n                                        onChange={ (event) => { this.handleOnChange(event, name) }}\n                                        class=\"cblack\"\n                                        />\n                                        <label htmlFor={`custom-checkbox-${name}`}>&nbsp;{name}</label>\n                                    </div>\n                                    );\n                                })}\n                            </div>;\n    \n\n        return (\n            <div class=\"back\">\n\n              {this.state.isOpen &&\n                  <div>\n                    <div class=\"overlay_styles\"/>\n                    <div class=\"modal_styles\">\n                      <div class=\"row centeredTopRight\" onClick={this.closeModal}>\n                        <CloseIcon />\n                      </div>\n\n                      <div class=\"row\">\n                        <div class=\"col-3\">\n                          <ExclaimIcon />\n                        </div>\n                        <div class=\"col-6\">\n                          Some parametrizations are not written correctly.\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n              }\n              <form>\n                  {nodes_selection}\n                  {parametrization_selection}\n\n              </form>\n              <br/>\n                <div class=\"row\">\n                  <div className=\"App\">\n                    <button type=\"submit\" value=\"Send\" class=\"btn-dark wrapperh3 btn-md btn \" onClick={this.handleNodesButton} >\n                      <SendIcon />&nbsp;Send\n                    </button>\n                  </div>\n                  </div>\n              <div class=\"row back\">\n                <div class=\"col-lg-2\">\n                  <input type=\"submit\" value=\"Back\" class=\"btn-dark btn-md btn\" onClick={this.handleBackButton} />\n                </div>\n              </div>\n            </div>\n        );                      \n    }\n\n    if (this.state.compute) {\n        const result_data_joined = this.props.file_read.join(\" %% \");\n\n        const nodes = this.state.checked_nodes.join(',');\n        var data_params = {\n            file_data: result_data_joined,\n            semantics: (this.props.async ? (this.props.sync ? \"async,sync\" : \"async\") : \"sync\"),\n            nodes: nodes\n        }\n        \n        if (param_lines !== {}) {\n            const param_lines_json = JSON.stringify(param_lines);\n            data_params['params'] = param_lines_json;              \n        }\n\n        axios\n            .get(\"https://bool-net-state-space-vis.herokuapp.com/get_data/\", { params: data_params })\n            .then(response => {\n              if (response.data === \"\" || !response.data) {\n                this.setState({ error : true });\n                return;\n              }\n              \n              this.setState({ clusters : response.data });\n              this.setState({ value : StateApp.Visualise });\n            });\n\n        return (\n        <div class=\"row\">\n          <div class=\"col-4-lg btn wrapper\"></div>\n          <div class=\"col-4-lg btn wrapper\">\n              <CoffeeIcon />\n              <h3 class=\"wrapperh3\">Sending request</h3>\n          </div>\n          <div class=\"col-4-lg btn wrapper\"></div>\n        </div>\n        );\n    }        \n          \n    return (\n    <div class=\"row\">\n      <div class=\"col-4-lg btn wrapper\"></div>\n      <div class=\"col-4-lg btn wrapper\">\n          <CoffeeIcon />\n          <h3 class=\"wrapperh3\">Waiting for computation</h3>\n      </div>\n      <div class=\"col-4-lg btn wrapper\"></div>\n    </div>\n    );\n\n\n  }\n}\n \nexport default ChooseConfig;\n\n","/home/xkruzel/Desktop/todo/reactapp/src/Icons/AeonFileIcon.jsx",[],[],"/home/xkruzel/Desktop/todo/reactapp/src/Icons/ServerIcon.jsx",[],[],"/home/xkruzel/Desktop/todo/reactapp/src/Icons/JsonIcon.jsx",[],[],"/home/xkruzel/Desktop/todo/reactapp/src/Icons/CloseIcon.jsx",[],[],"/home/xkruzel/Desktop/todo/reactapp/src/Icons/InfoIcon.jsx",[],[],"/home/xkruzel/Desktop/todo/reactapp/src/Icons/ExclaimIcon.jsx",[],[],"/home/xkruzel/Desktop/todo/reactapp/src/Icons/CoffeeIcon.jsx",[],[],"/home/xkruzel/Desktop/todo/reactapp/src/Icons/DownloadIcon.jsx",[],[],"/home/xkruzel/Desktop/todo/reactapp/src/Icons/PlusIcon.jsx",[],[],"/home/xkruzel/Desktop/todo/reactapp/src/Icons/OnlyVisualiseIcon.jsx",[],[],"/home/xkruzel/Desktop/todo/reactapp/src/Icons/MinusIcon.jsx",[],[],"/home/xkruzel/Desktop/todo/reactapp/src/Icons/SendIcon.jsx",[],[],"/home/xkruzel/Desktop/todo/reactapp/src/utils.js",[],[],"/home/xkruzel/Desktop/todo/reactapp/src/WrongFile.jsx",["132","133","134"],[],"import './App.css';\n\nimport React from 'react';\nimport LoadAeon from './LoadAeon';\nimport LoadJson from './LoadJson';\nimport Visualise from './Visualise';\n\nimport { StateApp } from './StateApp.ts';\nimport ExclaimIcon from './Icons/ExclaimIcon';\nimport App from './App';\n\n\nclass WrongFile extends React.Component {\n    state = {\n        value : this.props.value || StateApp.Wrong_file\n    };\n\n    handleBackButton = event => {\n        this.setState({ value : StateApp.MainApp });\n    };\n\n\n    render() { \n\n        if (this.state.value === StateApp.MainApp) {\n            return <App />;\n        }\n\n        return <div class=\"row\">\n        <div class=\"col-4-lg btn wrapper\"></div>\n        <div class=\"col-4-lg btn wrapper\">\n            <ExclaimIcon />\n            <h3 class=\"wrapperh3\">Wrong file format</h3>\n            <p>Expected file format: <b>{this.props.expected}</b></p>\n        </div>\n        <div class=\"row\">\n              <div class=\"col-lg-2\">\n                <input type=\"submit\" value=\"Back\" class=\"btn-dark btn-md btn\" onClick={this.handleBackButton} />\n              </div>\n            </div>\n        <div class=\"col-4-lg btn wrapper\"></div>\n    </div>\n    }\n}\n \nexport default WrongFile;\n\n",{"ruleId":"135","severity":1,"message":"136","line":6,"column":8,"nodeType":"137","messageId":"138","endLine":6,"endColumn":13},{"ruleId":"135","severity":1,"message":"139","line":4,"column":17,"nodeType":"137","messageId":"138","endLine":4,"endColumn":28},{"ruleId":"135","severity":1,"message":"140","line":6,"column":19,"nodeType":"137","messageId":"138","endLine":6,"endColumn":30},{"ruleId":"135","severity":1,"message":"141","line":170,"column":13,"nodeType":"137","messageId":"138","endLine":170,"endColumn":22},{"ruleId":"135","severity":1,"message":"142","line":274,"column":12,"nodeType":"137","messageId":"138","endLine":274,"endColumn":22},{"ruleId":"135","severity":1,"message":"143","line":317,"column":11,"nodeType":"137","messageId":"138","endLine":317,"endColumn":18},{"ruleId":"144","severity":1,"message":"145","line":108,"column":24,"nodeType":"146","messageId":"147","endLine":108,"endColumn":26},{"ruleId":"135","severity":1,"message":"148","line":4,"column":8,"nodeType":"137","messageId":"138","endLine":4,"endColumn":16},{"ruleId":"135","severity":1,"message":"149","line":5,"column":8,"nodeType":"137","messageId":"138","endLine":5,"endColumn":16},{"ruleId":"135","severity":1,"message":"150","line":6,"column":8,"nodeType":"137","messageId":"138","endLine":6,"endColumn":17},"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'createPoint' is defined but never used.","'rad2degrees' is defined but never used.","'direction' is assigned a value but never used.","'createLine' is defined but never used.","'firstId' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'LoadAeon' is defined but never used.","'LoadJson' is defined but never used.","'Visualise' is defined but never used."]