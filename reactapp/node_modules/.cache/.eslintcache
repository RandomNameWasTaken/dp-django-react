[{"/home/xkruzel/Desktop/todo/reactapp/src/index.js":"1","/home/xkruzel/Desktop/todo/reactapp/src/App.js":"2","/home/xkruzel/Desktop/todo/reactapp/src/reportWebVitals.js":"3","/home/xkruzel/Desktop/todo/reactapp/src/StateApp.ts":"4","/home/xkruzel/Desktop/todo/reactapp/src/LoadJson.jsx":"5","/home/xkruzel/Desktop/todo/reactapp/src/Visualise.jsx":"6","/home/xkruzel/Desktop/todo/reactapp/src/LoadAeon.jsx":"7","/home/xkruzel/Desktop/todo/reactapp/src/rendering.js":"8","/home/xkruzel/Desktop/todo/reactapp/src/Point.js":"9","/home/xkruzel/Desktop/todo/reactapp/src/ChooseConfig.jsx":"10"},{"size":535,"mtime":1662399185904,"results":"11","hashOfConfig":"12"},{"size":5414,"mtime":1667548675641,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1662399185904,"results":"14","hashOfConfig":"12"},{"size":133,"mtime":1666511377116,"results":"15","hashOfConfig":"12"},{"size":2530,"mtime":1667548594386,"results":"16","hashOfConfig":"12"},{"size":6786,"mtime":1667548756511,"results":"17","hashOfConfig":"12"},{"size":5816,"mtime":1667342809402,"results":"18","hashOfConfig":"12"},{"size":12453,"mtime":1667554930529,"results":"19","hashOfConfig":"12"},{"size":111,"mtime":1661080761641,"results":"20","hashOfConfig":"12"},{"size":21699,"mtime":1667546309096,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hunrvr",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/xkruzel/Desktop/todo/reactapp/src/index.js",[],[],"/home/xkruzel/Desktop/todo/reactapp/src/App.js",[],[],"/home/xkruzel/Desktop/todo/reactapp/src/reportWebVitals.js",[],[],"/home/xkruzel/Desktop/todo/reactapp/src/StateApp.ts",[],[],"/home/xkruzel/Desktop/todo/reactapp/src/LoadJson.jsx",[],[],"/home/xkruzel/Desktop/todo/reactapp/src/Visualise.jsx",["54","55","56","57","58","59","60"],[],"import React from 'react';\nimport ReactDOM from 'react-dom'\nimport { init3Dgraphics } from './rendering.js';\nimport { StateApp } from './StateApp.ts'\n\nfunction getWindowSize() {\n    const main_div = document.getElementById('root');\n    const innerWidth = main_div.clientWidth;\n    const innerHeight = Math.max(main_div.clientHeight, 900);\n\n    return {innerWidth, innerHeight};\n}\n\n\nexport default class Visualise extends React.Component {\n    state = {\n        value : this.props.value || StateApp.Visualise,\n        number_of_nodes : 10,\n    };\n\n    handleBackButton = event => {\n        window.location.reload(false);\n    };\n\n\n    render() {\n        const fileData = this.props.fileData;\n\n        if (fileData === undefined || fileData.length === 0) {\n            return (\n                <div>\n                    <h3>There are no data available</h3>\n                    <p>Please got back to menu and try again</p>\n                    <input type=\"submit\" value=\"Back\" onClick={this.handleBackButton} />\n                </div>\n            );\n        }\n\n        if (!this.state.canvases_rendered) {\n\n            const window_sizes = getWindowSize();\n\n            var canvas_number = Object.keys(fileData).length;\n\n            var canvases = [];\n            var objects = [];\n\n            var index = 0;\n\n            var both_semantics = false;\n            if (fileData[0]['sync'] !== undefined && fileData[0]['async'] !== undefined) {\n                both_semantics = true;\n                canvas_number = canvas_number * 2;\n            }\n\n            var width_height = {};\n\n            if (both_semantics) {\n                for (var key in fileData) {\n\n                    for (var sem in fileData[key]) {\n                        if (sem === 'Lines' || sem === 'Nodes') {\n                            if (sem === 'NumberOfNodes') {\n                                this.setState({ number_of_nodes : fileData[key][sem] });\n                            }\n                            continue\n                        }\n\n                        var width = window_sizes.innerWidth;\n                        var height =  window_sizes.innerHeight;\n\n                        const division = Math.floor(canvas_number/2);\n                        if (division <= 1) {\n                            height = window_sizes.innerHeight;\n                        } else {\n                            height = Math.floor(window_sizes.innerHeight/2);\n                        }\n                        width = Math.floor(window_sizes.innerWidth / (division + 1));\n                        \n\n                        canvases.push(React.createElement('canvas', { id : \"canvas\" + index, width: width, height: height, class: \"col\" }));\n\n                        const quotient = Math.floor(index/2);\n                        const remain = index % 2;\n                        width_height[index] = { 'w' : remain * width, 'h': quotient * height };\n\n                        index += 1;\n                    }\n                    objects.push(React.createElement('div', { class: \"row\" }, canvases));\n                    canvases = [];\n                };\n                const div = React.createElement('div', { id : \"canvases_react\", class: \"col\" }, objects);\n                ReactDOM.render(\n                    div,\n                    document.getElementById('canvases')\n                );\n\n            } else {\n                for (var key in fileData) {\n\n                    for (var sem in fileData[key]) {\n                        if (sem === 'Lines' || sem === 'Nodes') {\n                            if (sem === 'NumberOfNodes') {\n                                this.setState({ number_of_nodes : fileData[key][sem] });\n                            }\n                            continue\n                        }\n\n                        var width = window_sizes.innerWidth;\n                        var height =  window_sizes.innerHeight;\n                        if (canvas_number > 1) {\n\n                            const division = Math.floor(canvas_number/2);\n                            if (division <= 1) {\n                                height = window_sizes.innerHeight;\n                            } else {\n                                height =  Math.floor(window_sizes.innerHeight/2);\n                            }\n                            width = Math.floor(window_sizes.innerWidth / (division + 1));\n                        }\n\n                        canvases.push(React.createElement('canvas', { id : \"canvas\" + index, width: width, height: height, class: \"col\" }));\n                        const quotient = Math.floor(index/2);\n                        const remain = index % 2;\n                        width_height[index] = { 'w' : remain * width, 'h': quotient * height };\n                        index += 1;\n                    }\n                };\n\n                const div = React.createElement('div', { id : \"canvases_react\", class: \"row\" }, canvases);\n                ReactDOM.render(\n                    div,\n                    document.getElementById('canvases')\n                );\n            }\n\n            this.setState({ canvases_rendered : true });\n            this.setState({ width_height : width_height });\n        }\n\n        if (this.state.width_height) {\n            const width_height = this.state.width_height;\n            try {\n\n                var index = 0;\n                for (var key in fileData) {\n                    for (var sem in fileData[key]) {\n                        if (sem === 'Lines' || sem === 'Nodes') {\n                            continue\n                        }\n                        const data = fileData[key][sem];\n                        const canvas = document.getElementById(\"canvas\" + index);\n\n                        init3Dgraphics(canvas, data, fileData[key]['Nodes'], width_height[index]['w'], width_height[index]['h']);\n\n                        index += 1;\n                    }\n                };\n            } catch (error) {\n                return (\n                    <div class=\"back\">\n                        <h3 class=\"wrapperh3\">Cannot visualize</h3>\n                        <div class=\"row back\">\n                            <div class=\"col-lg-2\">\n                                <input type=\"submit\" value=\"Back\" class=\"btn-dark btn-md btn\" onClick={this.handleBackButton} />\n                            </div>\n                        </div>\n                    </div>\n                );\n            }\n        }\n          \n\n        return (\n            <div class=\"row back\">\n                <div class=\"col-lg-2\">\n                  <input type=\"submit\" value=\"Back\" class=\"btn-dark btn-md btn\" onClick={this.handleBackButton} />\n                </div>\n            </div>\n        );\n    }\n}\n \n//export default Visualise;","/home/xkruzel/Desktop/todo/reactapp/src/LoadAeon.jsx",["61"],[],"import React from 'react';\nimport App from './App';\nimport { StateApp } from './StateApp.ts';\nimport ChooseConfig from './ChooseConfig';\nimport axios from \"axios\";\n\nexport default class LoadAeon extends React.Component {\n    state = {\n        value : this.props.value || StateApp.LoadAeon,\n        selectedFile: this.props.selectedFile || null,\n        isOpen: false,\n    };\n  //  const [param_arguments, set_param_arguments] = useState();\n\n    onFileChange = event => {\n      // Update the state\n      this.setState({ selectedFile: event.target.files[0] });\n    };\n\n    // On file upload (click the upload button)\n    onFileUpload = () => {\n\n      if ((!this.state.sync && !this.state.async) || !this.state.selectedFile) {\n        this.openModal();\n        return;\n      }\n      \n      const file = this.state.selectedFile;\n\n      var reader = new FileReader();\n      reader.readAsText(file,'UTF-8');\n    \n      reader.addEventListener(\"load\", () => {\n          var r = reader.result;\n\n          var r_lines = r.split(\"\\n\");\n          const regex_comment = /^\\s*#/;\n          var result_data = [];\n          for (let i = 0; i < r_lines.length; i++) {\n            if (r_lines[i].match(regex_comment)) {\n              continue;\n            }\n            result_data.push(r_lines[i]);\n          }\n\n          this.setState({ file_read : result_data });\n          const result_data_joined = result_data.join(\" %% \");\n          document.cookie=\"resultData=\" + result_data_joined + \"; SameSite=None; Secure\";\n      });\n\n      this.setState({ value : StateApp.ChooseConfig });\n    };\n  \n    fileData = () => {    \n        if (this.state.selectedFile) {\n           \n          return (\n            <div>\n              <h2>File Details:</h2>\n               \n                <p>File Name: {this.state.selectedFile.name}</p>   \n            </div>\n          );\n        } else {\n          return (\n            <div>\n              <br />\n              <h6>Choose before Pressing the Process button</h6>\n            </div>\n          );\n        }\n    };\n\n    handleBackButton = event => {\n      this.setState({ value : StateApp.MainApp });\n    };\n\n    openModal = (event) => {\n      this.setState({ isOpen : true });\n    }\n\n    closeModal = (event) => {\n      this.setState({ isOpen : false });\n    }\n\n    render() {\n        if (this.state.value === StateApp.MainApp) {\n          return <App />;\n        }\n\n        \n        if (this.state.value === StateApp.ChooseConfig) {\n          return <ChooseConfig file_read={this.state.file_read} async={this.state.async} sync={this.state.sync} selectedFile={this.state.selectedFile}/>;\n        }\n\n        return (\n          <div class=\"row loadAEONwrapper\">\n            {this.state.isOpen &&\n                  <div>\n                    <div class=\"overlay_styles\"/>\n                    <div class=\"modal_styles\">\n                      <div class=\"row centeredTopRight\" onClick={this.closeModal}>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" class=\"bi bi-x-square-fill\" viewBox=\"0 0 16 16\">\n                          <path d=\"M2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2zm3.354 4.646L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 1 1 .708-.708z\"/>\n                        </svg>\n                      </div>\n\n                      <div class=\"row\">\n                        <div class=\"col-3\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100\" height=\"100\" fill=\"currentColor\" class=\"bi bi-exclamation\" viewBox=\"0 0 16 16\">\n                          <path d=\"M7.002 11a1 1 0 1 1 2 0 1 1 0 0 1-2 0zM7.1 4.995a.905.905 0 1 1 1.8 0l-.35 3.507a.553.553 0 0 1-1.1 0L7.1 4.995z\"/>\n                        </svg>\n                        </div>\n                        <div class=\"col-6\">\n                          File and at least one type is mandatory.\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n              }\n            <div class=\"col\">\n              <div class=\"row\" className=\"App\">\n                <h3 class=\"wrapperh3\">\n                Type\n                </h3>\n                <form>\n                <div class=\"form-check form-check-inline\">\n                  <input type=\"checkbox\" class=\"cblack\" id=\"async\" name=\"semantics\" value=\"1\" onChange={event => this.setState({async : true})}/>\n                  <label for=\"async\" class=\"form-check-label\">Asynchroneous</label>\n                </div>\n                <div class=\"form-check form-check-inline\">\n                  <input type=\"checkbox\" class=\"cblack\" id=\"sync\" name=\"semantics\" value=\"2\" onChange={event => this.setState({sync : true})}/>\n                  <label class=\"form-check-label\" for=\"sync\">Synchroneous</label>\n                </div>\n                </form>\n              </div>\n\n              <br/>\n              <br/>\n\n              <div class=\"row\" className=\"App\">\n                <h3 class=\"wrapperh3\">\n                  File Upload\n                </h3>\n\n                <div class=\"col-lg-4 center\">\n                    <input type=\"file\" class=\"form-control center\" onChange={this.onFileChange} accept=\".aeon\"/>\n                    <button onClick={this.onFileUpload} class=\"btn-dark wrapperh3 btn-md btn\">\n                      Process\n                    </button>\n                </div>\n\n              {this.fileData()}\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-lg-2\">\n                <input type=\"submit\" value=\"Back\" class=\"btn-dark btn-md btn\" onClick={this.handleBackButton} />\n              </div>\n            </div>\n          </div>\n          );\n    }\n}\n","/home/xkruzel/Desktop/todo/reactapp/src/rendering.js",["62","63","64","65","66","67","68","69","70","71","72"],[],"/home/xkruzel/Desktop/todo/reactapp/src/Point.js",[],[],"/home/xkruzel/Desktop/todo/reactapp/src/ChooseConfig.jsx",[],[],{"ruleId":"73","severity":1,"message":"74","line":99,"column":26,"nodeType":"75","messageId":"76","endLine":99,"endColumn":29},{"ruleId":"73","severity":1,"message":"77","line":101,"column":30,"nodeType":"75","messageId":"76","endLine":101,"endColumn":33},{"ruleId":"73","severity":1,"message":"78","line":109,"column":29,"nodeType":"75","messageId":"76","endLine":109,"endColumn":34},{"ruleId":"73","severity":1,"message":"79","line":110,"column":29,"nodeType":"75","messageId":"76","endLine":110,"endColumn":35},{"ruleId":"73","severity":1,"message":"80","line":145,"column":21,"nodeType":"75","messageId":"76","endLine":145,"endColumn":26},{"ruleId":"73","severity":1,"message":"74","line":146,"column":26,"nodeType":"75","messageId":"76","endLine":146,"endColumn":29},{"ruleId":"73","severity":1,"message":"77","line":147,"column":30,"nodeType":"75","messageId":"76","endLine":147,"endColumn":33},{"ruleId":"81","severity":1,"message":"82","line":5,"column":8,"nodeType":"75","messageId":"83","endLine":5,"endColumn":13},{"ruleId":"81","severity":1,"message":"84","line":43,"column":9,"nodeType":"75","messageId":"83","endLine":43,"endColumn":20},{"ruleId":"81","severity":1,"message":"85","line":51,"column":12,"nodeType":"75","messageId":"83","endLine":51,"endColumn":23},{"ruleId":"81","severity":1,"message":"86","line":67,"column":9,"nodeType":"75","messageId":"83","endLine":67,"endColumn":19},{"ruleId":"81","severity":1,"message":"87","line":70,"column":9,"nodeType":"75","messageId":"83","endLine":70,"endColumn":12},{"ruleId":"81","severity":1,"message":"88","line":71,"column":9,"nodeType":"75","messageId":"83","endLine":71,"endColumn":16},{"ruleId":"81","severity":1,"message":"89","line":84,"column":9,"nodeType":"75","messageId":"83","endLine":84,"endColumn":20},{"ruleId":"81","severity":1,"message":"90","line":85,"column":9,"nodeType":"75","messageId":"83","endLine":85,"endColumn":19},{"ruleId":"81","severity":1,"message":"91","line":100,"column":12,"nodeType":"75","messageId":"83","endLine":100,"endColumn":26},{"ruleId":"92","severity":1,"message":"93","line":134,"column":5,"nodeType":"94","messageId":"95","endLine":138,"endColumn":22},{"ruleId":"81","severity":1,"message":"96","line":244,"column":9,"nodeType":"75","messageId":"83","endLine":244,"endColumn":14},{"ruleId":"81","severity":1,"message":"97","line":269,"column":17,"nodeType":"75","messageId":"83","endLine":269,"endColumn":23},"no-redeclare","'key' is already defined.","Identifier","redeclared","'sem' is already defined.","'width' is already defined.","'height' is already defined.","'index' is already defined.","no-unused-vars","'axios' is defined but never used.","unusedVar","'interaction' is assigned a value but never used.","'onMouseMove' is defined but never used.","'axesHelper' is assigned a value but never used.","'gui' is assigned a value but never used.","'options' is assigned a value but never used.","'lightHelper' is assigned a value but never used.","'gridHelper' is assigned a value but never used.","'resetMaterials' is defined but never used.","no-unreachable","Unreachable code.","VariableDeclaration","unreachableCode","'count' is assigned a value but never used.","'offset' is assigned a value but never used."]