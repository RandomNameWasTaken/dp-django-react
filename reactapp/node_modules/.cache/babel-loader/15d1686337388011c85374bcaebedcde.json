{"ast":null,"code":"import _slicedToArray from\"/home/xkruzel/Desktop/todo/reactapp/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import*as THREE from'three';import{OrbitControls}from'three/examples/jsm/controls/OrbitControls';import*as dat from'dat.gui';import{Point}from'./Point';export function init3Dgraphics(element,jsonData){if(jsonData===undefined){return false;}var scene=new THREE.Scene();scene.background=new THREE.Color(0xd3d3d3);var camera=new THREE.PerspectiveCamera(75,window.innerWidth/window.innerHeight,0.1,1000);var renderer=new THREE.WebGLRenderer({canvas:element});renderer.setPixelRatio(window.devicePixelRatio);renderer.setSize(window.innerWidth,window.innerHeight);// full size\ncamera.position.setZ(30);// for better perspective\nrenderer.sortObjects=false;renderer.render(scene,camera);var axesHelper=new THREE.AxesHelper(100);scene.add(axesHelper);var gui=new dat.GUI();var options={sphereColor:0xffea00,wireframe:false};var pointLight=new THREE.PointLight(0xffffff);pointLight.position.set(20,20,20);var ambientLight=new THREE.AmbientLight(0xffffff);ambientLight.position.set(20,20,20);scene.add(pointLight,ambientLight);var lightHelper=new THREE.PointLightHelper(pointLight);// shows position of lighsource\nvar gridHelper=new THREE.GridHelper(30,20);scene.add(lightHelper,gridHelper);window.addEventListener('resize',function(){camera.aspect=window.innerWidth/window.innerHeight;camera.updateProjectionMatrix();renderer.setSize(window.innerWidth);});var controls=new OrbitControls(camera,renderer.domElement);// Returns a random integer from 0 to 9:\nvar randomNum=Math.floor(Math.random()*8);processClusters(scene,jsonData);function animate(){setTimeout(function(){requestAnimationFrame(animate);},1000/30);controls.update();renderer.render(scene,camera);}renderer.setAnimationLoop(animate);window.addEventListener('resize',function(){camera.aspect=window.innerWidth/window.innerHeight;camera.updateProjectionMatrix();renderer.setSize(window.innerWidth,window.innerHeight);});/*\n  function readdatajson() {\n    var json = fetch(\"./data/data.json\")\n    .then(response => {\n      return response.json();\n    })\n    .then(jsondata => jsondata);\n\n    return json;\n  }\n  */function toRadians(degrees){return degrees*Math.PI/180;}function createLine(scene,id,startPoint,endPoint,currRadius,nextRadius){var start=new THREE.Vector3(startPoint.x,startPoint.y,startPoint.z);var end=new THREE.Vector3(endPoint.x,endPoint.y,endPoint.z);var color=new THREE.Color(0xffffff);color.setHex(Math.random()*0xffffff);var path=new THREE.LineCurve3(start,end);var geometry=new THREE.TubeGeometry(path,10,0.8,8);var material=new THREE.MeshBasicMaterial({color:color});var mesh=new THREE.Mesh(geometry,material);// scene.add( mesh );\nvar cylinderMesh=function cylinderMesh(startPoint,endPoint,midPoint,currRadius,nextRadius,color){/* edge from X to Y */var direction=new THREE.Vector3().subVectors(endPoint,startPoint);var orientation=new THREE.Matrix4();/* THREE.Object3D().up (=Y) default orientation for all objects */orientation.lookAt(startPoint,endPoint,new THREE.Object3D().up);/* rotation around axis X by -90 degrees \n      * matches the default orientation Y \n      * with the orientation of looking Z */var mat=new THREE.Matrix4();mat.set(1,0,0,0,0,0,1,0,0,-1,0,0,0,0,0,1);orientation.multiply(mat);/* cylinder: radiusAtTop, radiusAtBottom, \n          height, radiusSegments, heightSegments */var edgeGeometry=new THREE.CylinderGeometry(nextRadius,currRadius,direction.length(),8,1);var edge=new THREE.Mesh(edgeGeometry,new THREE.MeshBasicMaterial({color:color}));edge.applyMatrix4(orientation);edge.position.set(midPoint.x,midPoint.y,midPoint.z);return edge;};var midPoint=new Point((startPoint.x+endPoint.x)/2,(startPoint.y+endPoint.y)/2,(startPoint.z+endPoint.z)/2);//  const geometryCyl = new THREE.CylinderGeometry(currRadius, nextRadius, 10, 10);\nvar cylinder=cylinderMesh(startPoint,endPoint,midPoint,currRadius,nextRadius,color);//new THREE.Mesh(geometryCyl, material);\n//cylinder.position.copy(midPoint);\ncylinder.name=id;scene.add(cylinder);}// prevPoint, point - upper and downer middle points of cylinder\n// dirPoint - point to which direction of cylinder (dir vector) should go \nfunction dfsClustering(scene,data,id,max_branching,branch_count,prevPoint,point){if(id==undefined){return;}var cluster=data[id];var childCount=cluster[\"DescCount\"];var childsChildCount=0;for(var i=0;i<cluster[\"Desc\"].length;++i){childsChildCount+=data[cluster[\"Desc\"][i]][\"NodeCount\"];}createLine(scene,id,prevPoint,point,cluster.NodeCount,childsChildCount);var prevPointPointDist=Math.sqrt((point.x-prevPoint.x)*(point.x-prevPoint.x)+(point.y-prevPoint.y)*(point.y-prevPoint.y)+(point.z-prevPoint.z)*(point.z-prevPoint.z));for(var i=0;i<childCount;++i){if(childCount==1){var dirVector=new THREE.Vector3(point.x-prevPoint.x,point.y-prevPoint.y,point.z-prevPoint.z);var newPoint=new Point(dirVector.x+point.x,dirVector.y+point.y,dirVector.z+point.z);dfsClustering(scene,data,cluster[\"Desc\"][0],max_branching,branch_count,point,newPoint);continue;}// COMPUTE NEW COORDINATES around circle\nvar theta=2*Math.PI/childCount*i;var xPos=Math.cos(theta)*childsChildCount;var zPos=Math.sin(theta)*childsChildCount;// this point is not exactly matching with rotation line\n// it is used to compute vector and later in correct newStartPoint\nvar newStartPointHelper=new Point(point.x+xPos,point.y,point.z+zPos);var vector=new THREE.Vector3(newStartPointHelper.x-prevPoint.x,newStartPointHelper.y-prevPoint.y,newStartPointHelper.z-prevPoint.z).normalize();var distance=Math.sqrt(cluster.NodeCount*cluster.NodeCount+prevPointPointDist*prevPointPointDist);var newStartPoint=new Point(prevPoint.x+distance*vector.x,prevPoint.y+distance*vector.y,prevPoint.z+distance*vector.z);var newEndPoint=new Point(newStartPoint.x+10*vector.x,newStartPoint.y+10*vector.y,newStartPoint.z+10*vector.z);var branch_factor=2-1/max_branching*branch_count;xPos=Math.cos(theta)*childsChildCount*branch_factor;// TODO pronasobit constantov pro urceni mensiho/vetsiho uhlu - v ramci hlbky stromu? \nzPos=Math.sin(theta)*childsChildCount*branch_factor;// TODO\nnewEndPoint=new Point(newStartPoint.x+xPos,newStartPoint.y-10,newStartPoint.z+zPos);dfsClustering(scene,data,cluster[\"Desc\"][i],max_branching,branch_count+1,newStartPoint,newEndPoint);}}function dfsMaxBranching(data,key){var max=0;console.log(key);for(var i=0;i<data[key][\"DescCount\"];++i){max=Math.max(max,dfsMaxBranching(data,data[key][\"Desc\"][i]));}if(data[key][\"DescCount\"]>1){return max+1;}return max;}function processClusters(scene,data){console.log(data);var root_cluster_key=undefined;var maxCluster=1;var biggestRank=0;Object.entries(data).forEach(function(_ref){var _ref2=_slicedToArray(_ref,2),k=_ref2[0],v=_ref2[1];if(v[\"Rank\"]==0){root_cluster_key=k;}biggestRank=Math.max(v[\"Rank\"],biggestRank);maxCluster=Math.max(maxCluster,v.NodeCount);});console.log(\"first key\",root_cluster_key);var max_branching=dfsMaxBranching(data,root_cluster_key);var cylinders={};var firstHeight=biggestRank*10/2+10;var firstStartPoint=new Point(0,firstHeight,0);var firstEndPoint=new Point(0,firstHeight-10,0);dfsClustering(scene,data,root_cluster_key,max_branching,1,firstStartPoint,firstEndPoint);gui.addColor(options,'sphereColor').onChange(function(e){for(var _i=0,_Object$entries=Object.entries(cylinders);_i<_Object$entries.length;_i++){var _Object$entries$_i=_slicedToArray(_Object$entries[_i],2),key=_Object$entries$_i[0],cylinder=_Object$entries$_i[1];cylinder.material.color.set(e);}});/*\n      gui.add(options, 'wireframe').onChange(function(e) {\n        cylinders.forEach(function(cylinder) {\n          cylinder.material.wireframe = e;\n        });\n      });\n    */}}","map":{"version":3,"names":["THREE","OrbitControls","dat","Point","init3Dgraphics","element","jsonData","undefined","scene","Scene","background","Color","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","canvas","setPixelRatio","devicePixelRatio","setSize","position","setZ","sortObjects","render","axesHelper","AxesHelper","add","gui","GUI","options","sphereColor","wireframe","pointLight","PointLight","set","ambientLight","AmbientLight","lightHelper","PointLightHelper","gridHelper","GridHelper","addEventListener","aspect","updateProjectionMatrix","controls","domElement","randomNum","Math","floor","random","processClusters","animate","setTimeout","requestAnimationFrame","update","setAnimationLoop","toRadians","degrees","PI","createLine","id","startPoint","endPoint","currRadius","nextRadius","start","Vector3","x","y","z","end","color","setHex","path","LineCurve3","geometry","TubeGeometry","material","MeshBasicMaterial","mesh","Mesh","cylinderMesh","midPoint","direction","subVectors","orientation","Matrix4","lookAt","Object3D","up","mat","multiply","edgeGeometry","CylinderGeometry","length","edge","applyMatrix4","cylinder","name","dfsClustering","data","max_branching","branch_count","prevPoint","point","cluster","childCount","childsChildCount","i","NodeCount","prevPointPointDist","sqrt","dirVector","newPoint","theta","xPos","cos","zPos","sin","newStartPointHelper","vector","normalize","distance","newStartPoint","newEndPoint","branch_factor","dfsMaxBranching","key","max","console","log","root_cluster_key","maxCluster","biggestRank","Object","entries","forEach","k","v","cylinders","firstHeight","firstStartPoint","firstEndPoint","addColor","onChange","e"],"sources":["/home/xkruzel/Desktop/todo/reactapp/src/rendering.js"],"sourcesContent":["import * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport * as dat from 'dat.gui';\nimport { Point } from './Point';\n\n\nexport function init3Dgraphics(element, jsonData) {\n\n  if (jsonData === undefined) {\n    return false;\n  }\n\n  const scene = new THREE.Scene();\n  scene.background = new THREE.Color( 0xd3d3d3 );\n  const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000)\n  const renderer = new THREE.WebGLRenderer({\n    canvas: element,\n  });\n\n  renderer.setPixelRatio( window.devicePixelRatio );\n  renderer.setSize(window.innerWidth, window.innerHeight); // full size\n  camera.position.setZ(30); // for better perspective\n  renderer.sortObjects = false;\n  renderer.render(scene, camera);\n\n  const axesHelper = new THREE.AxesHelper(100);\n  scene.add(axesHelper);\n\n  const gui = new dat.GUI();\n  const options = {\n    sphereColor : 0xffea00,\n    wireframe: false,\n  };\n    \n  const pointLight = new THREE.PointLight(0xffffff)\n  pointLight.position.set(20, 20, 20);\n\n  const ambientLight = new THREE.AmbientLight(0xffffff)\n  ambientLight.position.set(20, 20, 20);\n\n  scene.add(pointLight, ambientLight);\n\n  const lightHelper = new THREE.PointLightHelper(pointLight);  // shows position of lighsource\n  const gridHelper = new THREE.GridHelper(30, 20);\n\n  scene.add(lightHelper, gridHelper);\n\n  window.addEventListener('resize', function() {\n    camera.aspect = window.innerWidth / window.innerHeight;\n    camera.updateProjectionMatrix();\n    renderer.setSize(window.innerWidth);\n  });\n\n  const controls = new OrbitControls(camera, renderer.domElement);\n\n  // Returns a random integer from 0 to 9:\n  const randomNum = Math.floor(Math.random() * 8); \n\n  processClusters(scene, jsonData);\n\n  function animate() {\n    setTimeout( function() {\n      requestAnimationFrame( animate );\n    }, 1000 / 30 );\n\n    controls.update();\n    renderer.render(scene, camera);\n  }\n\n  renderer.setAnimationLoop(animate);\n\n  window.addEventListener('resize', function() {\n    camera.aspect = window.innerWidth / window.innerHeight;\n    camera.updateProjectionMatrix();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n  });\n\n  /*\n  function readdatajson() {\n    var json = fetch(\"./data/data.json\")\n    .then(response => {\n      return response.json();\n    })\n    .then(jsondata => jsondata);\n\n    return json;\n  }\n  */\n\n  function toRadians(degrees) {\n    return degrees * Math.PI / 180;\n  }\n\n  function createLine(scene, id, startPoint, endPoint, currRadius, nextRadius) {\n\n    const start = new THREE.Vector3( startPoint.x, startPoint.y, startPoint.z );\n    const end = new THREE.Vector3( endPoint.x, endPoint.y, endPoint.z );\n\n\n    const color = new THREE.Color( 0xffffff );\n    color.setHex( Math.random() * 0xffffff );\n\n    const path = new THREE.LineCurve3(start, end);\n    const geometry = new THREE.TubeGeometry( path, 10, 0.8, 8 );\n    const material = new THREE.MeshBasicMaterial( { color: color } );\n    const mesh = new THREE.Mesh( geometry, material );\n  // scene.add( mesh );\n\n    var cylinderMesh = function( startPoint, endPoint, midPoint, currRadius, nextRadius, color ) {\n      /* edge from X to Y */\n      const direction = new THREE.Vector3().subVectors( endPoint, startPoint );\n\n      const orientation = new THREE.Matrix4();\n      /* THREE.Object3D().up (=Y) default orientation for all objects */\n      orientation.lookAt(startPoint, endPoint, new THREE.Object3D().up);\n\n      /* rotation around axis X by -90 degrees \n      * matches the default orientation Y \n      * with the orientation of looking Z */\n      const mat =  new THREE.Matrix4();\n      mat.set(\n        1,0,0,0,\n        0,0,1,0, \n        0,-1,0,0,\n        0,0,0,1\n      );\n      orientation.multiply(mat);\n\n      /* cylinder: radiusAtTop, radiusAtBottom, \n          height, radiusSegments, heightSegments */\n      const edgeGeometry = new THREE.CylinderGeometry( nextRadius, currRadius, direction.length(), 8, 1);\n      const edge = new THREE.Mesh( edgeGeometry, \n              new THREE.MeshBasicMaterial( { color: color } ) );\n\n      edge.applyMatrix4(orientation)\n      edge.position.set(midPoint.x, midPoint.y, midPoint.z);\n      return edge;\n    }\n\n    const midPoint = new Point((startPoint.x + endPoint.x) / 2, (startPoint.y + endPoint.y) / 2, (startPoint.z + endPoint.z) / 2);\n\n  //  const geometryCyl = new THREE.CylinderGeometry(currRadius, nextRadius, 10, 10);\n\n    const cylinder = cylinderMesh(startPoint, endPoint, midPoint, currRadius, nextRadius, color); //new THREE.Mesh(geometryCyl, material);\n\n    //cylinder.position.copy(midPoint);\n    \n\n    cylinder.name = id;\n\n    scene.add(cylinder);\n\n  }\n\n  // prevPoint, point - upper and downer middle points of cylinder\n  // dirPoint - point to which direction of cylinder (dir vector) should go \n  function dfsClustering(scene, data, id, max_branching, branch_count, prevPoint, point) {\n\n    if (id == undefined) {\n      return;\n    }\n\n    var cluster = data[id];\n    const childCount = cluster[\"DescCount\"];\n\n    var childsChildCount = 0;\n    for (var i = 0; i < cluster[\"Desc\"].length; ++i) {\n      childsChildCount += data[cluster[\"Desc\"][i]][\"NodeCount\"];\n    }\n\n    createLine(scene, id, prevPoint, point, cluster.NodeCount, childsChildCount);\n\n    const prevPointPointDist = Math.sqrt((point.x - prevPoint.x) * (point.x - prevPoint.x) + (point.y - prevPoint.y)\n                              * (point.y - prevPoint.y) + (point.z - prevPoint.z) * (point.z - prevPoint.z));\n\n    for (var i = 0; i < childCount; ++i) {\n\n      if (childCount == 1) {\n\n        const dirVector = new THREE.Vector3(point.x - prevPoint.x, point.y - prevPoint.y, point.z - prevPoint.z);\n        const newPoint = new Point(dirVector.x + point.x, dirVector.y + point.y, dirVector.z + point.z);\n\n        dfsClustering(scene, data, cluster[\"Desc\"][0], max_branching, branch_count, point, newPoint);\n        continue;\n      }\n\n      // COMPUTE NEW COORDINATES around circle\n      const theta = 2 * Math.PI / childCount * i;\n\n      var xPos = Math.cos(theta) * childsChildCount;\n      var zPos = Math.sin(theta) * childsChildCount;\n      // this point is not exactly matching with rotation line\n      // it is used to compute vector and later in correct newStartPoint\n      const newStartPointHelper = new Point(point.x + xPos, point.y, point.z + zPos);\n\n      const vector = new THREE.Vector3(newStartPointHelper.x - prevPoint.x, newStartPointHelper.y - prevPoint.y, newStartPointHelper.z - prevPoint.z).normalize();\n      const distance = Math.sqrt(cluster.NodeCount * cluster.NodeCount + prevPointPointDist * prevPointPointDist);\n      const newStartPoint = new Point(\n          prevPoint.x + distance * vector.x,\n          prevPoint.y + distance * vector.y,\n          prevPoint.z + distance * vector.z,\n      );\n        \n      var newEndPoint = new Point(\n        newStartPoint.x + 10 * vector.x,\n        newStartPoint.y + 10 * vector.y,\n        newStartPoint.z + 10 * vector.z,\n      );\n      \n      const branch_factor = 2 - (1/max_branching * branch_count);\n      xPos = Math.cos(theta) * childsChildCount * branch_factor; // TODO pronasobit constantov pro urceni mensiho/vetsiho uhlu - v ramci hlbky stromu? \n      zPos = Math.sin(theta) * childsChildCount * branch_factor; // TODO\n      newEndPoint = new Point(newStartPoint.x + xPos, newStartPoint.y - 10, newStartPoint.z + zPos);\n      \n      dfsClustering(scene, data, cluster[\"Desc\"][i], max_branching, branch_count + 1, newStartPoint, newEndPoint);\n    }\n  }\n\n  function dfsMaxBranching(data, key) {\n\n    var max = 0;\n    console.log(key);\n    for (var i = 0; i < data[key][\"DescCount\"]; ++i) {\n      max = Math.max(max, dfsMaxBranching(data, data[key][\"Desc\"][i]));\n    }\n\n    if (data[key][\"DescCount\"] > 1) {\n      return max + 1;\n    }\n\n    return max;\n  }\n\n  function processClusters(scene, data) {\n    console.log(data);\n      \n    var root_cluster_key = undefined;\n    var maxCluster = 1;\n    var biggestRank = 0;\n    Object.entries(data).forEach(([k,v]) => {\n      if (v[\"Rank\"] == 0) {\n        root_cluster_key = k;\n      }\n      biggestRank = Math.max(v[\"Rank\"], biggestRank);\n      maxCluster = Math.max(maxCluster, v.NodeCount);\n    });\n\n    console.log(\"first key\", root_cluster_key);\n    const max_branching = dfsMaxBranching(data, root_cluster_key);\n\n    var cylinders = {};\n\n    const firstHeight = biggestRank * 10 / 2 + 10;\n    const firstStartPoint = new Point(0, firstHeight, 0);\n    const firstEndPoint = new Point(0, firstHeight - 10, 0);\n\n    dfsClustering(scene, data, root_cluster_key, max_branching, 1, firstStartPoint, firstEndPoint);\n\n    gui.addColor(options, 'sphereColor').onChange(function(e) {\n\n      for (const [key, cylinder] of Object.entries(cylinders)) {\n        cylinder.material.color.set(e);\n      }\n    });\n    /*\n      gui.add(options, 'wireframe').onChange(function(e) {\n        cylinders.forEach(function(cylinder) {\n          cylinder.material.wireframe = e;\n        });\n      });\n    */\n    \n  }\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}