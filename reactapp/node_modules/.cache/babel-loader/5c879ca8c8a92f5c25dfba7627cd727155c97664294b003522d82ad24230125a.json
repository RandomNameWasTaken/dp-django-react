{"ast":null,"code":"import _slicedToArray from\"/home/xkruzel/Desktop/todo/reactapp/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import*as THREE from\"three\";import{OrbitControls}from\"three/examples/jsm/controls/OrbitControls\";import*as dat from\"dat.gui\";import{Point,createPoint}from\"./Point\";import{Interaction}from\"three.interaction-fixed\";import{dec2bin,rad2degrees}from\"./utils\";export function init3Dgraphics(canvas,div,data,nodes_ids,h,w){if(data===undefined){return false;}var CYLINDER_HEIGHT=8;var number_of_nodes=Object.keys(nodes_ids).length;var scene=new THREE.Scene();//scene.background = new THREE.Color( 0xd3d3d3 );\nscene.background=new THREE.Color(0xffffff);var camera=new THREE.PerspectiveCamera(75,canvas.width/canvas.height,0.1,1000);var renderer=new THREE.WebGLRenderer({canvas:canvas});renderer.setPixelRatio(window.devicePixelRatio);renderer.setSize(canvas.width,canvas.height);// full size\ncamera.position.setZ(30);// for better perspective\nrenderer.sortObjects=false;renderer.render(scene,camera);new Interaction(renderer,scene,camera);// For showing text information about clusters\nvar texts=[];var cylinders=[];//const axesHelper = new THREE.AxesHelper(100);\n//scene.add(axesHelper);\n/*\n  const gui = new dat.GUI();\n  const options = {\n    sphereColor : 0xffea00,\n    wireframe: false,\n  };\n*/var pointLight=new THREE.PointLight(0xffffff);pointLight.position.set(20,20,20);var ambientLight=new THREE.AmbientLight(0xffffff);ambientLight.position.set(20,20,20);scene.add(pointLight,ambientLight);//const lightHelper = new THREE.PointLightHelper(pointLight);  // shows position of lighsource\n//const gridHelper = new THREE.GridHelper(30, 20);\n//scene.add(lightHelper, gridHelper);\nwindow.addEventListener(\"resize\",function(){camera.aspect=canvas.width/canvas.height;camera.updateProjectionMatrix();renderer.setSize(canvas.width);});var controls=new OrbitControls(camera,renderer.domElement);processClusters(scene,data);data=null;function animate(){setTimeout(function(){requestAnimationFrame(animate);},1000/5);controls.update();renderer.render(scene,camera);pointLight.position.copy(camera.position);}renderer.setAnimationLoop(animate);window.addEventListener(\"resize\",function(){camera.aspect=canvas.width/canvas.width;camera.updateProjectionMatrix();renderer.setSize(canvas.width,canvas.width);});function calcColor(max,val){return\"hsla(255, 0%, 46%, 1)\";/*\n    const min = 0\n    var minHue = 240, maxHue=0;\n    var curPercent = (val - min) / (max-min);\n    var colString = \"hsl(\" + ((curPercent * (maxHue-minHue) ) + minHue) + \",65%,50%)\";\n    return colString;\n    */}function resetOpacity(){cylinders.forEach(function(cylinder){var newMaterial=cylinder.material.clone();newMaterial.transparent=false;newMaterial.opacity=1;cylinder.material=newMaterial;});}function crossProduct(a,b){return new THREE.Vector3(a.y*b.z-a.z*b.y,a.z*b.x-a.x*b.z,a.x*b.y-a.y*b.x);}function createCylinder(data,id,startPoint,endPoint,currRadius,nextRadius,rank,rank_max){console.log(id);var color=new THREE.Color(data[id][\"Color\"]===\"\"?calcColor(rank_max,rank):data[id][\"Color\"]);//color.setHex(rank/10 * 0xffffff );\n// color.setHex(rank/10 * 0xffffff );\nvar cylinderMesh=function cylinderMesh(startPoint,endPoint,midPoint,currRadius,nextRadius,color){/* edge from X to Y */var direction=new THREE.Vector3().subVectors(endPoint,startPoint);var orientation=new THREE.Matrix4();/* THREE.Object3D().up (=Y) default orientation for all objects */orientation.lookAt(startPoint,endPoint,new THREE.Object3D().up);/* rotation around axis X by -90 degrees\n       * matches the default orientation Y\n       * with the orientation of looking Z */var mat=new THREE.Matrix4();mat.set(1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,1);orientation.multiply(mat);/* cylinder: radiusAtTop, radiusAtBottom, \n          height, radiusSegments, heightSegments */var RADIAL_SEGMENTS=8;var HEIGHT_SEGMENTS=1;var edgeGeometry=new THREE.CylinderGeometry(currRadius,nextRadius,CYLINDER_HEIGHT,Math.max(100,nextRadius*RADIAL_SEGMENTS),HEIGHT_SEGMENTS);var material=new THREE.MeshPhongMaterial({color:color,flatShading:true});var cylinder=new THREE.Mesh(edgeGeometry,material);cylinder.applyMatrix4(orientation);cylinder.position.set(midPoint.x,midPoint.y,midPoint.z);cylinder.cursor=\"pointer\";cylinder.on(\"click\",function(ev){resetOpacity();var newMaterial=cylinder.material.clone();newMaterial.transparent=true;newMaterial.opacity=0.5;cylinder.material=newMaterial;texts.forEach(function(text){var selectedObject=scene.getObjectByName(text.name);scene.remove(selectedObject);});var text=\"\";data[id][\"Nodes\"].forEach(function(elem){if(text!==\"\"){text+=\",\";}text+=\" (\";var bin=dec2bin(elem,number_of_nodes);for(var i=0;i<bin.length;i++){if(bin[i]===\"1\"){text+=\" \"+nodes_ids[i];}}text+=\" )\";});div.innerHTML=\"<b>Rank</b>: \"+data[id][\"Rank\"]+\"<br><b>Nodes</b>: \"+text;});return cylinder;};var midPoint=new Point((startPoint.x+endPoint.x)/2,(startPoint.y+endPoint.y)/2,(startPoint.z+endPoint.z)/2);return cylinderMesh(startPoint,endPoint,midPoint,currRadius,nextRadius,color);//new THREE.Mesh(geometryCyl, material);\n}function getChildsChilds(data,cluster){var childsChildCount=0;for(var i=0;i<cluster[\"Desc\"].length;++i){childsChildCount+=data[cluster[\"Desc\"][i]].NodeCount;}if(cluster[\"Separate\"]!==undefined){childsChildCount=data[cluster[\"Separate\"]].NodeCount;}return childsChildCount;}function createLine(p1,p2,color){var material=new THREE.LineBasicMaterial({color:color});var geometry=new THREE.BufferGeometry().setFromPoints([p1,p2]);var line=new THREE.Line(geometry,material);scene.add(line);}function createCoordinatesForSingleSon(point,prevPoint,id){var dirVector=new THREE.Vector3(point.x-prevPoint.x,point.y-prevPoint.y,point.z-prevPoint.z);var newStartPoint=new Point(point.x,point.y,point.z);// to make copy\nvar newPoint=new Point(dirVector.x+point.x,dirVector.y+point.y,dirVector.z+point.z);return Object.freeze({id:id,//cluster[\"Desc\"][0],\nprevPoint:newStartPoint,point:newPoint});}// prevPoint, point - upper and downer middle points of cylinder\n// dirPoint - point to which direction of cylinder (dir vector) should go\nfunction clustering(scene,data,id,max_branching,prevPointFirst,pointFirst,biggestRank){if(id===undefined){console.log(\"Id is undefined in clustering\");return;}var firstId=id;var tuple=Object.freeze({id:id,prevPoint:prevPointFirst,point:pointFirst});var stack=[tuple];var yaxis=new Point(0,1,0);while(stack.length>0){var stackElement=stack.pop();var current=stackElement.id;var prevPoint=stackElement.prevPoint;var point=stackElement.point;var cluster=data[current];var childCount=cluster[\"Desc\"].length;console.log(current);var childsChildCount=getChildsChilds(data,cluster);var upperRadius=cluster.NodeCount;var lowerRadius=childCount===1?childsChildCount:childsChildCount+cluster[\"Desc\"].length+(cluster[\"Separate\"]!==undefined?1:0);var cylinder=createCylinder(data,current,prevPoint,point,upperRadius,lowerRadius,data[current][\"Rank\"],biggestRank);cylinders.push(cylinder);scene.add(cylinder);var dirVector=new THREE.Vector3(point.x-prevPoint.x,point.y-prevPoint.y,point.z-prevPoint.z);if(cluster[\"Separate\"]!==undefined){stack.push(createCoordinatesForSingleSon(point,prevPoint,cluster[\"Separate\"]));}for(var i=0;i<childCount;++i){if(childCount===1){stack.push(createCoordinatesForSingleSon(point,prevPoint,cluster[\"Desc\"][0]));continue;}var uVector=new THREE.Vector3(-1*dirVector.y,dirVector.x,0).normalize();var adota=uVector.dot(uVector);var crossProductVec=crossProduct(dirVector,uVector);var vVector=crossProductVec.divideScalar(adota).normalize();dirVector.normalize();// COMPUTE NEW COORDINATES around circle\nvar theta=2*Math.PI/childCount*i;var sin=Math.sin(theta);var cos=Math.cos(theta);var u=uVector.multiplyScalar(cos*lowerRadius);var v=vVector.multiplyScalar(sin*lowerRadius);var newStartPointHelper=u.add(v).add(new THREE.Vector3(point.x,point.y,point.z));// Vector which will be prolonged from prevPoint to newStartPointer -> to create newEndPoint\nvar vector=new THREE.Vector3(newStartPointHelper.x-prevPoint.x,newStartPointHelper.y-prevPoint.y,newStartPointHelper.z-prevPoint.z).normalize();var newEndPoint=new Point(newStartPointHelper.x+CYLINDER_HEIGHT*vector.x,newStartPointHelper.y+CYLINDER_HEIGHT*vector.y,newStartPointHelper.z+CYLINDER_HEIGHT*vector.z);tuple=Object.freeze({id:cluster[\"Desc\"][i],prevPoint:newStartPointHelper,point:newEndPoint});stack.push(tuple);}}}function compMaxBranching(data,key){var stack=[key];var maximums={};var colors={};while(stack.length>0){var current=stack.pop();colors[current]=\"G\";stack.push(current);if(maximums[current]===undefined){maximums[current]=0;}var count_black=0;var desc_count=data[current][\"Desc\"].length;for(var i=0;i<desc_count;++i){if(colors[data[current][\"Desc\"][i]]===undefined){stack.push(data[current][\"Desc\"][i]);}if(colors[data[current][\"Desc\"][i]]===\"B\"){count_black+=1;maximums[current]=Math.max(maximums[data[current][\"Desc\"][i]],maximums[current]);}}if(count_black===desc_count){colors[current]=\"B\";stack.pop();if(desc_count>1){maximums[current]+=1;}}}return maximums[key];}function processClusters(scene,data){var root_cluster_key=undefined;var biggestRank=0;Object.entries(data).forEach(function(_ref){var _ref2=_slicedToArray(_ref,2),k=_ref2[0],v=_ref2[1];if(v[\"Rank\"]===0){root_cluster_key=k;}biggestRank=Math.max(v[\"Rank\"],biggestRank);});var max_branching=compMaxBranching(data,root_cluster_key);var firstHeight=biggestRank*CYLINDER_HEIGHT/2+CYLINDER_HEIGHT;var firstStartPoint=new Point(0,firstHeight,0);var firstEndPoint=new Point(0,firstHeight-CYLINDER_HEIGHT,0);clustering(scene,data,root_cluster_key,max_branching,firstStartPoint,firstEndPoint,biggestRank);}}","map":{"version":3,"names":["THREE","OrbitControls","dat","Point","createPoint","Interaction","dec2bin","rad2degrees","init3Dgraphics","canvas","div","data","nodes_ids","h","w","undefined","CYLINDER_HEIGHT","number_of_nodes","Object","keys","length","scene","Scene","background","Color","camera","PerspectiveCamera","width","height","renderer","WebGLRenderer","setPixelRatio","window","devicePixelRatio","setSize","position","setZ","sortObjects","render","texts","cylinders","pointLight","PointLight","set","ambientLight","AmbientLight","add","addEventListener","aspect","updateProjectionMatrix","controls","domElement","processClusters","animate","setTimeout","requestAnimationFrame","update","copy","setAnimationLoop","calcColor","max","val","resetOpacity","forEach","cylinder","newMaterial","material","clone","transparent","opacity","crossProduct","a","b","Vector3","y","z","x","createCylinder","id","startPoint","endPoint","currRadius","nextRadius","rank","rank_max","console","log","color","cylinderMesh","midPoint","direction","subVectors","orientation","Matrix4","lookAt","Object3D","up","mat","multiply","RADIAL_SEGMENTS","HEIGHT_SEGMENTS","edgeGeometry","CylinderGeometry","Math","MeshPhongMaterial","flatShading","Mesh","applyMatrix4","cursor","on","ev","text","selectedObject","getObjectByName","name","remove","elem","bin","i","innerHTML","getChildsChilds","cluster","childsChildCount","NodeCount","createLine","p1","p2","LineBasicMaterial","geometry","BufferGeometry","setFromPoints","line","Line","createCoordinatesForSingleSon","point","prevPoint","dirVector","newStartPoint","newPoint","freeze","clustering","max_branching","prevPointFirst","pointFirst","biggestRank","firstId","tuple","stack","yaxis","stackElement","pop","current","childCount","upperRadius","lowerRadius","push","uVector","normalize","adota","dot","crossProductVec","vVector","divideScalar","theta","PI","sin","cos","u","multiplyScalar","v","newStartPointHelper","vector","newEndPoint","compMaxBranching","key","maximums","colors","count_black","desc_count","root_cluster_key","entries","k","firstHeight","firstStartPoint","firstEndPoint"],"sources":["/home/xkruzel/Desktop/todo/reactapp/src/rendering.js"],"sourcesContent":["import * as THREE from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport * as dat from \"dat.gui\";\nimport { Point, createPoint } from \"./Point\";\nimport { Interaction } from \"three.interaction-fixed\";\nimport { dec2bin, rad2degrees } from \"./utils\";\n\n\n\nexport function init3Dgraphics(canvas, div, data, nodes_ids, h, w) {\n  if (data === undefined) {\n    return false;\n  }\n\n  const CYLINDER_HEIGHT = 8;\n  const number_of_nodes = Object.keys(nodes_ids).length;\n\n  const scene = new THREE.Scene();\n  //scene.background = new THREE.Color( 0xd3d3d3 );\n  scene.background = new THREE.Color(0xffffff);\n  const camera = new THREE.PerspectiveCamera(\n    75,\n    canvas.width / canvas.height,\n    0.1,\n    1000\n  );\n  const renderer = new THREE.WebGLRenderer({\n    canvas: canvas,\n  });\n\n  renderer.setPixelRatio(window.devicePixelRatio);\n  renderer.setSize(canvas.width, canvas.height); // full size\n  camera.position.setZ(30); // for better perspective\n  renderer.sortObjects = false;\n  renderer.render(scene, camera);\n\n  new Interaction(renderer, scene, camera);\n\n  // For showing text information about clusters\n  var texts = [];\n  var cylinders = [];\n\n  //const axesHelper = new THREE.AxesHelper(100);\n  //scene.add(axesHelper);\n\n  /*\n  const gui = new dat.GUI();\n  const options = {\n    sphereColor : 0xffea00,\n    wireframe: false,\n  };\n*/\n  const pointLight = new THREE.PointLight(0xffffff);\n  pointLight.position.set(20, 20, 20);\n\n  const ambientLight = new THREE.AmbientLight(0xffffff);\n  ambientLight.position.set(20, 20, 20);\n\n  scene.add(pointLight, ambientLight);\n\n  //const lightHelper = new THREE.PointLightHelper(pointLight);  // shows position of lighsource\n  //const gridHelper = new THREE.GridHelper(30, 20);\n\n  //scene.add(lightHelper, gridHelper);\n\n  window.addEventListener(\"resize\", function () {\n    camera.aspect = canvas.width / canvas.height;\n    camera.updateProjectionMatrix();\n    renderer.setSize(canvas.width);\n  });\n\n  const controls = new OrbitControls(camera, renderer.domElement);\n\n  processClusters(scene, data);\n  data = null;\n\n  function animate() {\n    setTimeout(function () {\n      requestAnimationFrame(animate);\n    }, 1000 / 5);\n\n    controls.update();\n    renderer.render(scene, camera);\n    pointLight.position.copy(camera.position);\n  }\n\n  renderer.setAnimationLoop(animate);\n\n  window.addEventListener(\"resize\", function () {\n    camera.aspect = canvas.width / canvas.width;\n    camera.updateProjectionMatrix();\n    renderer.setSize(canvas.width, canvas.width);\n  });\n\n  function calcColor(max, val) {\n    return \"hsla(255, 0%, 46%, 1)\";\n    /*\n    const min = 0\n    var minHue = 240, maxHue=0;\n    var curPercent = (val - min) / (max-min);\n    var colString = \"hsl(\" + ((curPercent * (maxHue-minHue) ) + minHue) + \",65%,50%)\";\n    return colString;\n    */\n  }\n\n  function resetOpacity() {\n    cylinders.forEach(function (cylinder) {\n      const newMaterial = cylinder.material.clone();\n      newMaterial.transparent = false;\n      newMaterial.opacity = 1;\n      cylinder.material = newMaterial;\n    });\n  }\n\n  function crossProduct(a, b) {\n    return new THREE.Vector3(\n      a.y * b.z - a.z * b.y,\n      a.z * b.x - a.x * b.z,\n      a.x * b.y - a.y * b.x\n    );\n  }\n\n  function createCylinder(\n    data,\n    id,\n    startPoint,\n    endPoint,\n    currRadius,\n    nextRadius,\n    rank,\n    rank_max\n  ) {\n    console.log(id);\n    const color = new THREE.Color(\n      data[id][\"Color\"] === \"\" ? calcColor(rank_max, rank) : data[id][\"Color\"]\n    );\n    //color.setHex(rank/10 * 0xffffff );\n    // color.setHex(rank/10 * 0xffffff );\n\n    var cylinderMesh = function (\n      startPoint,\n      endPoint,\n      midPoint,\n      currRadius,\n      nextRadius,\n      color\n    ) {\n      /* edge from X to Y */\n      const direction = new THREE.Vector3().subVectors(endPoint, startPoint);\n\n      const orientation = new THREE.Matrix4();\n      /* THREE.Object3D().up (=Y) default orientation for all objects */\n      orientation.lookAt(startPoint, endPoint, new THREE.Object3D().up);\n\n      /* rotation around axis X by -90 degrees\n       * matches the default orientation Y\n       * with the orientation of looking Z */\n      const mat = new THREE.Matrix4();\n      mat.set(1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1);\n      orientation.multiply(mat);\n\n      /* cylinder: radiusAtTop, radiusAtBottom, \n          height, radiusSegments, heightSegments */\n      const RADIAL_SEGMENTS = 8;\n      const HEIGHT_SEGMENTS = 1;\n      const edgeGeometry = new THREE.CylinderGeometry(\n        currRadius,\n        nextRadius,\n        CYLINDER_HEIGHT,\n        Math.max(100, nextRadius * RADIAL_SEGMENTS),\n        HEIGHT_SEGMENTS\n      );\n\n      const material = new THREE.MeshPhongMaterial({ color: color, flatShading: true });\n      const cylinder = new THREE.Mesh(\n        edgeGeometry,\n        material\n      );\n\n      cylinder.applyMatrix4(orientation);\n      cylinder.position.set(midPoint.x, midPoint.y, midPoint.z);\n      cylinder.cursor = \"pointer\";\n      cylinder.on(\"click\", function (ev) {\n        resetOpacity();\n        const newMaterial = cylinder.material.clone();\n        newMaterial.transparent = true;\n        newMaterial.opacity = 0.5;\n        cylinder.material = newMaterial;\n\n        texts.forEach(function (text) {\n          var selectedObject = scene.getObjectByName(text.name);\n          scene.remove(selectedObject);\n        });\n\n        var text = \"\";\n        data[id][\"Nodes\"].forEach(function (elem) {\n          if (text !== \"\") {\n            text += \",\";\n          }\n          text += \" (\";\n          const bin = dec2bin(elem, number_of_nodes);\n\n          for (let i = 0; i < bin.length; i++) {\n            if (bin[i] === \"1\") {\n              text += \" \" + nodes_ids[i];\n            }\n          }\n          text += \" )\";\n        });\n\n        div.innerHTML =\n          \"<b>Rank</b>: \" + data[id][\"Rank\"] + \"<br><b>Nodes</b>: \" + text;\n      });\n\n      return cylinder;\n    };\n\n    const midPoint = new Point(\n      (startPoint.x + endPoint.x) / 2,\n      (startPoint.y + endPoint.y) / 2,\n      (startPoint.z + endPoint.z) / 2\n    );\n    return cylinderMesh(\n      startPoint,\n      endPoint,\n      midPoint,\n      currRadius,\n      nextRadius,\n      color\n    ); //new THREE.Mesh(geometryCyl, material);\n  }\n\n  function getChildsChilds(data, cluster) {\n    var childsChildCount = 0;\n    for (var i = 0; i < cluster[\"Desc\"].length; ++i) {\n      childsChildCount += data[cluster[\"Desc\"][i]].NodeCount;\n    }\n\n    if (cluster[\"Separate\"] !== undefined) {\n      childsChildCount = data[cluster[\"Separate\"]].NodeCount;\n    }\n\n    return childsChildCount;\n  }\n\n  function createLine(p1, p2, color) {\n    const material = new THREE.LineBasicMaterial( { color: color } );\n    const geometry = new THREE.BufferGeometry().setFromPoints( [p1, p2] );\n    const line = new THREE.Line( geometry, material );\n    scene.add( line );\n  }\n\n  function createCoordinatesForSingleSon(point, prevPoint, id) {\n    const dirVector = new THREE.Vector3(\n      point.x - prevPoint.x,\n      point.y - prevPoint.y,\n      point.z - prevPoint.z\n    );\n\n    var newStartPoint = new Point(point.x, point.y, point.z); // to make copy\n    const newPoint = new Point(\n      dirVector.x + point.x,\n      dirVector.y + point.y,\n      dirVector.z + point.z\n    );\n\n    return Object.freeze({\n      id: id, //cluster[\"Desc\"][0],\n      prevPoint: newStartPoint,\n      point: newPoint,\n    });\n  }\n\n  // prevPoint, point - upper and downer middle points of cylinder\n  // dirPoint - point to which direction of cylinder (dir vector) should go\n  function clustering(\n    scene,\n    data,\n    id,\n    max_branching,\n    prevPointFirst,\n    pointFirst,\n    biggestRank\n  ) {\n    if (id === undefined) {\n      console.log(\"Id is undefined in clustering\");\n      return;\n    }\n    const firstId = id;\n\n    var tuple = Object.freeze({\n      id: id,\n      prevPoint: prevPointFirst,\n      point: pointFirst,\n    });\n    var stack = [tuple];\n\n    const yaxis = new Point(0, 1, 0);\n\n    while (stack.length > 0) {\n      const stackElement = stack.pop();\n      const current = stackElement.id;\n      const prevPoint = stackElement.prevPoint;\n      const point = stackElement.point;\n\n      var cluster = data[current];\n      const childCount = cluster[\"Desc\"].length;\n\n      console.log(current);\n\n      var childsChildCount = getChildsChilds(data, cluster);\n\n      const upperRadius = cluster.NodeCount;\n      const lowerRadius =\n        childCount === 1\n          ? childsChildCount\n          : childsChildCount + cluster[\"Desc\"].length + (cluster[\"Separate\"] !== undefined ? 1 : 0);\n\n      var cylinder = createCylinder(\n        data,\n        current,\n        prevPoint,\n        point,\n        upperRadius,\n        lowerRadius,\n        data[current][\"Rank\"],\n        biggestRank\n      );\n\n      cylinders.push(cylinder);\n      scene.add(cylinder);\n\n      var dirVector = new THREE.Vector3(\n        point.x - prevPoint.x,\n        point.y - prevPoint.y,\n        point.z - prevPoint.z\n      );\n\n      if (cluster[\"Separate\"] !== undefined) {\n          stack.push( createCoordinatesForSingleSon(point, prevPoint, cluster[\"Separate\"]) );\n      }\n\n      for (var i = 0; i < childCount; ++i) {\n\n        if (childCount === 1) {\n          stack.push( createCoordinatesForSingleSon(point, prevPoint, cluster[\"Desc\"][0]) );\n          continue;\n        }\n\n        const uVector = new THREE.Vector3((-1) * dirVector.y, dirVector.x, 0).normalize();\n\n        const adota = uVector.dot(uVector);\n        const crossProductVec = crossProduct(dirVector, uVector);\n        const vVector = crossProductVec.divideScalar(adota).normalize();\n        dirVector.normalize();\n\n\n        // COMPUTE NEW COORDINATES around circle\n        const theta = (2*Math.PI / childCount) * i;\n        const sin = Math.sin(theta);\n        const cos = Math.cos(theta);\n\n        const u = uVector.multiplyScalar(cos * lowerRadius);\n        const v = vVector.multiplyScalar(sin * lowerRadius);\n\n        var newStartPointHelper = u\n          .add(v)\n          .add(new THREE.Vector3(point.x, point.y, point.z));\n\n\n        // Vector which will be prolonged from prevPoint to newStartPointer -> to create newEndPoint\n        const vector = new THREE.Vector3(\n          newStartPointHelper.x - prevPoint.x,\n          newStartPointHelper.y - prevPoint.y,\n          newStartPointHelper.z - prevPoint.z\n        ).normalize();\n\n        const newEndPoint = new Point(\n          newStartPointHelper.x + CYLINDER_HEIGHT * vector.x,\n          newStartPointHelper.y + CYLINDER_HEIGHT * vector.y,\n          newStartPointHelper.z + CYLINDER_HEIGHT * vector.z\n        );\n\n        tuple = Object.freeze({\n          id: cluster[\"Desc\"][i],\n          prevPoint: newStartPointHelper,\n          point: newEndPoint,\n        });\n        stack.push(tuple);\n      }\n    }\n  }\n\n  function compMaxBranching(data, key) {\n    let stack = [key];\n    var maximums = {};\n    var colors = {};\n\n    while (stack.length > 0) {\n      const current = stack.pop();\n      colors[current] = \"G\";\n      stack.push(current);\n\n      if (maximums[current] === undefined) {\n        maximums[current] = 0;\n      }\n\n      var count_black = 0;\n      const desc_count = data[current][\"Desc\"].length;\n      for (var i = 0; i < desc_count; ++i) {\n        if (colors[data[current][\"Desc\"][i]] === undefined) {\n          stack.push(data[current][\"Desc\"][i]);\n        }\n\n        if (colors[data[current][\"Desc\"][i]] === \"B\") {\n          count_black += 1;\n          maximums[current] = Math.max(\n            maximums[data[current][\"Desc\"][i]],\n            maximums[current]\n          );\n        }\n      }\n\n      if (count_black === desc_count) {\n        colors[current] = \"B\";\n        stack.pop();\n\n        if (desc_count > 1) {\n          maximums[current] += 1;\n        }\n      }\n    }\n\n    return maximums[key];\n  }\n\n  function processClusters(scene, data) {\n    var root_cluster_key = undefined;\n    var biggestRank = 0;\n    Object.entries(data).forEach(([k, v]) => {\n      if (v[\"Rank\"] === 0) {\n        root_cluster_key = k;\n      }\n      biggestRank = Math.max(v[\"Rank\"], biggestRank);\n    });\n\n    const max_branching = compMaxBranching(data, root_cluster_key);\n\n    const firstHeight = (biggestRank * CYLINDER_HEIGHT) / 2 + CYLINDER_HEIGHT;\n    const firstStartPoint = new Point(0, firstHeight, 0);\n    const firstEndPoint = new Point(0, firstHeight - CYLINDER_HEIGHT, 0);\n\n    clustering(\n      scene,\n      data,\n      root_cluster_key,\n      max_branching,\n      firstStartPoint,\n      firstEndPoint,\n      biggestRank\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}