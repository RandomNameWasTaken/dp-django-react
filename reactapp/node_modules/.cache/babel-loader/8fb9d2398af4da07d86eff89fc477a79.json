{"ast":null,"code":"import _slicedToArray from\"/home/xkruzel/Desktop/todo/reactapp/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import*as THREE from'three';import{OrbitControls}from'three/examples/jsm/controls/OrbitControls';import*as dat from'dat.gui';import{Point}from'./Point';import{Font}from'three/examples/jsm/loaders/FontLoader.js';import{TextGeometry}from'three/examples/jsm/geometries/TextGeometry.js';import{Interaction}from'three.interaction';function dec2bin(dec,n){var res=(dec>>>0).toString(2);if(res.length<n){for(var i=0;i<n-res.length;++i){res='0'+res;}}return res;}export function init3Dgraphics(element,data,nodes_ids,h,w){if(data===undefined){return false;}var CYLINDER_HEIGHT=5;var scene=new THREE.Scene();//scene.background = new THREE.Color( 0xd3d3d3 );\nscene.background=new THREE.Color(0xf8f2ea);var camera=new THREE.PerspectiveCamera(75,element.width/element.height,0.1,1000);var renderer=new THREE.WebGLRenderer({canvas:element});renderer.setPixelRatio(window.devicePixelRatio);renderer.setSize(element.width,element.height);// full size\ncamera.position.setZ(30);// for better perspective\nrenderer.sortObjects=false;renderer.render(scene,camera);// const interaction = new Interaction(renderer, scene, camera);\nvar fontJson=require(\"./fonts/Caviar_Dreams_Bold.json\");var font=new Font(fontJson);var texts=[];var axesHelper=new THREE.AxesHelper(100);//scene.add(axesHelper);\nvar gui=new dat.GUI();var options={sphereColor:0xffea00,wireframe:false};var pointLight=new THREE.PointLight(0xffffff);pointLight.position.set(20,20,20);var ambientLight=new THREE.AmbientLight(0xffffff);ambientLight.position.set(20,20,20);scene.add(pointLight,ambientLight);var lightHelper=new THREE.PointLightHelper(pointLight);// shows position of lighsource\nvar gridHelper=new THREE.GridHelper(30,20);//scene.add(lightHelper, gridHelper);\nwindow.addEventListener('resize',function(){camera.aspect=element.width/element.height;camera.updateProjectionMatrix();renderer.setSize(element.width);});var controls=new OrbitControls(camera,renderer.domElement);var nodes_to_id={};function resetMaterials(){for(var i=0;i<scene.children.length;i++){if(scene.children[i].material){scene.children[i].material.opacity=1.0;}}}/*\n  function hoverPieces() {\n    raycaster.setFromCamera(mouse, camera);\n    const intersects = raycaster.intersectObjects(scene.children);\n\n    for (let i = 0; i < intersects.length; i++) {\n      const newMaterial = intersects[i].object.material.clone();\n      newMaterial.transparent = true;\n      newMaterial.opacity = 0.5;\n      intersects[i].object.material = newMaterial;\n    }\n  }\n\n  function onClick() {\n    texts.forEach((text) => { removeObject3D(text) });\n\n    raycaster.setFromCamera(mouse, camera);\n    let intersects = raycaster.intersectObjects(scene.children);\n\n    if (intersects.length === 1) {\n      const obj = intersects[0].object;\n      var text = '';\n      nodes_to_id[obj.id].forEach(function (elem) {\n        if (text !== '') {\n          text += ',';\n        }\n        text += ' (';\n        const bin = dec2bin(elem, nodes_ids.length);\n\n        for (let i = 0; i < bin.length; i++) {\n          if (bin[i] === '1') {\n            text += ' ' + nodes_ids[i];\n          }\n        }\n        text += ')';\n      });\n\n      const geometry = new TextGeometry(text, {\n        font : font,\n        size : 1,\n        height : 1,\n      });\n\n      const textMesh = new THREE.Mesh(geometry, [\n        new THREE.MeshPhongMaterial( { color : 0x000000 } )\n      ]);\n\n      textMesh.position.x = obj.position.x;\n      textMesh.position.y = obj.position.y;\n      textMesh.position.z = obj.position.z + 10;\n\n      texts.push(textMesh);\n      scene.add(textMesh);      \n    }\n  }\n  \n\n  function removeObject3D(object3D) {\n    if (!(object3D instanceof THREE.Object3D)) return false;\n\n    // for better memory management and performance\n    if (object3D.geometry) object3D.geometry.dispose();\n\n    if (object3D.material) {\n        if (object3D.material instanceof Array) {\n            // for better memory management and performance\n            object3D.material.forEach(material => material.dispose());\n        } else {\n            // for better memory management and performance\n            object3D.material.dispose();\n        }\n    }\n    object3D.removeFromParent(); // the parent might be the scene or another Object3D, but it is sure to be removed this way\n    return true;\n}\n*/console.log('xxxxxxx');processClusters(scene,data);console.log('xxxxx');data=null;function animate(){setTimeout(function(){requestAnimationFrame(animate);},1000/5);controls.update();resetMaterials();renderer.render(scene,camera);}renderer.setAnimationLoop(animate);//  window.addEventListener( 'click', onClick );\n//  window.addEventListener( 'mousemove', onMouseMove );\nwindow.addEventListener('resize',function(){camera.aspect=element.width/element.width;camera.updateProjectionMatrix();renderer.setSize(element.width,element.width);});function calcColor(max,val){return\"hsla(147, 0%, 50%, 1)\";var min=0;var minHue=240,maxHue=0;var curPercent=(val-min)/(max-min);var colString=\"hsl(\"+(curPercent*(maxHue-minHue)+minHue)+\",65%,50%)\";return colString;}function createCylinder(data,id,startPoint,endPoint,currRadius,nextRadius,rank,rank_max){var color=new THREE.Color(data[id]['Color']===''?calcColor(rank_max,rank):data[id]['Color']);//color.setHex(rank/10 * 0xffffff );\n// color.setHex(rank/10 * 0xffffff );\nvar cylinderMesh=function cylinderMesh(startPoint,endPoint,midPoint,currRadius,nextRadius,color){/* edge from X to Y */var direction=new THREE.Vector3().subVectors(endPoint,startPoint);console.log('aaaaa');var orientation=new THREE.Matrix4();/* THREE.Object3D().up (=Y) default orientation for all objects */orientation.lookAt(startPoint,endPoint,new THREE.Object3D().up);console.log('aaaaa');/* rotation around axis X by -90 degrees \n      * matches the default orientation Y \n      * with the orientation of looking Z */var mat=new THREE.Matrix4();mat.set(1,0,0,0,0,0,1,0,0,-1,0,0,0,0,0,1);orientation.multiply(mat);console.log('aaaaa');/* cylinder: radiusAtTop, radiusAtBottom, \n          height, radiusSegments, heightSegments */var edgeGeometry=new THREE.CylinderGeometry(nextRadius,currRadius,direction.length,8,1);console.log('aaaaa');var cylinder=new THREE.Mesh(edgeGeometry,new THREE.MeshPhongMaterial({color:color,flatShading:true}));console.log(orientation);cylinder.applyMatrix4(orientation);console.log('aaaaa');cylinder.position.set(midPoint.x,midPoint.y,midPoint.z);console.log('aaaaa');// nodes_to_id[cylinder.id] = data[id][\"Nodes\"];\nreturn cylinder;};var midPoint=new Point((startPoint.x+endPoint.x)/2,(startPoint.y+endPoint.y)/2,(startPoint.z+endPoint.z)/2);return cylinderMesh(startPoint,endPoint,midPoint,currRadius,nextRadius,color);//new THREE.Mesh(geometryCyl, material);\n}// prevPoint, point - upper and downer middle points of cylinder\n// dirPoint - point to which direction of cylinder (dir vector) should go \nfunction clustering(scene,data,id,max_branching,branch_count,prevPointFirst,pointFirst,biggestRank){if(id===undefined){console.log(\"Id is undefined in clustering\");return;}var tuple=Object.freeze({id:id,prevPoint:prevPointFirst,point:pointFirst});var stack=[tuple];var count=0;while(stack.length>0){++count;var stackElement=stack.pop();var current=stackElement.id;var prevPoint=stackElement.prevPoint;var point=stackElement.point;console.log(current);var cluster=data[current];var childCount=cluster[\"Desc\"].length;var childsChildCount=0;for(var i=0;i<cluster[\"Desc\"].length;++i){childsChildCount+=data[cluster[\"Desc\"][i]][\"NodeCount\"];}var cylinder=createCylinder(data,current,prevPoint,point,cluster.NodeCount,childsChildCount,data[current][\"Rank\"],biggestRank);console.log(current);var prevPointPointDist=Math.sqrt((point.x-prevPoint.x)*(point.x-prevPoint.x)+(point.y-prevPoint.y)*(point.y-prevPoint.y)+(point.z-prevPoint.z)*(point.z-prevPoint.z));for(i=0;i<childCount;++i){if(childCount===1){var newStartPoint=new Point(point.x,point.y,point.z);// to make copy\nvar offset=0;if(childsChildCount===cluster[\"Desc\"].length&&childsChildCount!==0&&data[cluster[\"Desc\"][0]][\"Desc\"].length!==0){cylinder=undefined;// join same-like cluster to one - draw one cluster with bigger height\nnewStartPoint=new Point(prevPoint.x,prevPoint.y,prevPoint.z);// to make copy\n}var dirVector=new THREE.Vector3(point.x-prevPoint.x,point.y-prevPoint.y,point.z-prevPoint.z);var newPoint=new Point(dirVector.x+point.x,dirVector.y+point.y,dirVector.z+point.z);tuple=Object.freeze({id:cluster[\"Desc\"][0],prevPoint:newStartPoint,point:newPoint});stack.push(tuple);continue;}// COMPUTE NEW COORDINATES around circle\nvar theta=2*Math.PI/childCount*i;var xPos=Math.cos(theta)*childsChildCount;var zPos=Math.sin(theta)*childsChildCount;// this point is not exactly matching with rotation line\n// it is used to compute vector and later in correct newStartPoint\nvar newStartPointHelper=new Point(point.x+xPos,point.y,point.z+zPos);var vector=new THREE.Vector3(newStartPointHelper.x-prevPoint.x,newStartPointHelper.y-prevPoint.y,newStartPointHelper.z-prevPoint.z).normalize();var distance=Math.sqrt(cluster.NodeCount*cluster.NodeCount+prevPointPointDist*prevPointPointDist);newStartPoint=new Point(prevPoint.x+distance*vector.x,prevPoint.y+distance*vector.y,prevPoint.z+distance*vector.z);var branch_factor=2-1/max_branching*branch_count;xPos=Math.cos(theta)*childsChildCount*branch_factor;// TODO pronasobit constantov pro urceni mensiho/vetsiho uhlu - v ramci hlbky stromu? \nzPos=Math.sin(theta)*childsChildCount*branch_factor;// TODO\nvar newEndPoint=new Point(newStartPoint.x+xPos,newStartPoint.y-CYLINDER_HEIGHT,newStartPoint.z+zPos);tuple=Object.freeze({id:cluster[\"Desc\"][i],prevPoint:newStartPoint,point:newEndPoint});stack.push(tuple);}if(cylinder!==undefined){scene.add(cylinder);}}}function compMaxBranching(data,key){var stack=[key];var maximums={};var colors={};while(stack.length>0){var current=stack.pop();colors[current]='G';stack.push(current);if(maximums[current]===undefined){maximums[current]=0;}var count_black=0;var desc_count=data[current][\"Desc\"].length;for(var i=0;i<desc_count;++i){if(colors[data[current][\"Desc\"][i]]===undefined){stack.push(data[current][\"Desc\"][i]);}if(colors[data[current][\"Desc\"][i]]==='B'){count_black+=1;maximums[current]=Math.max(maximums[data[current][\"Desc\"][i]],maximums[current]);}}if(count_black===desc_count){colors[current]='B';stack.pop();if(desc_count>1){maximums[current]+=1;}}}return maximums[key];}function processClusters(scene,data){var root_cluster_key=undefined;var maxCluster=1;var biggestRank=0;Object.entries(data).forEach(function(_ref){var _ref2=_slicedToArray(_ref,2),k=_ref2[0],v=_ref2[1];if(v[\"Rank\"]===0){root_cluster_key=k;}biggestRank=Math.max(v[\"Rank\"],biggestRank);maxCluster=Math.max(maxCluster,v.NodeCount);});var max_branching=compMaxBranching(data,root_cluster_key);var firstHeight=biggestRank*CYLINDER_HEIGHT/2+CYLINDER_HEIGHT;var firstStartPoint=new Point(0,firstHeight,0);var firstEndPoint=new Point(0,firstHeight-CYLINDER_HEIGHT,0);clustering(scene,data,root_cluster_key,max_branching,1,firstStartPoint,firstEndPoint,biggestRank);}}","map":{"version":3,"names":["THREE","OrbitControls","dat","Point","Font","TextGeometry","Interaction","dec2bin","dec","n","res","toString","length","i","init3Dgraphics","element","data","nodes_ids","h","w","undefined","CYLINDER_HEIGHT","scene","Scene","background","Color","camera","PerspectiveCamera","width","height","renderer","WebGLRenderer","canvas","setPixelRatio","window","devicePixelRatio","setSize","position","setZ","sortObjects","render","fontJson","require","font","texts","axesHelper","AxesHelper","gui","GUI","options","sphereColor","wireframe","pointLight","PointLight","set","ambientLight","AmbientLight","add","lightHelper","PointLightHelper","gridHelper","GridHelper","addEventListener","aspect","updateProjectionMatrix","controls","domElement","nodes_to_id","resetMaterials","children","material","opacity","console","log","processClusters","animate","setTimeout","requestAnimationFrame","update","setAnimationLoop","calcColor","max","val","min","minHue","maxHue","curPercent","colString","createCylinder","id","startPoint","endPoint","currRadius","nextRadius","rank","rank_max","color","cylinderMesh","midPoint","direction","Vector3","subVectors","orientation","Matrix4","lookAt","Object3D","up","mat","multiply","edgeGeometry","CylinderGeometry","cylinder","Mesh","MeshPhongMaterial","flatShading","applyMatrix4","x","y","z","clustering","max_branching","branch_count","prevPointFirst","pointFirst","biggestRank","tuple","Object","freeze","prevPoint","point","stack","count","stackElement","pop","current","cluster","childCount","childsChildCount","NodeCount","prevPointPointDist","Math","sqrt","newStartPoint","offset","dirVector","newPoint","push","theta","PI","xPos","cos","zPos","sin","newStartPointHelper","vector","normalize","distance","branch_factor","newEndPoint","compMaxBranching","key","maximums","colors","count_black","desc_count","root_cluster_key","maxCluster","entries","forEach","k","v","firstHeight","firstStartPoint","firstEndPoint"],"sources":["/home/xkruzel/Desktop/todo/reactapp/src/rendering.js"],"sourcesContent":["import * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport * as dat from 'dat.gui';\nimport { Point } from './Point';\nimport { Font } from 'three/examples/jsm/loaders/FontLoader.js';\nimport { TextGeometry } from 'three/examples/jsm/geometries/TextGeometry.js';\nimport { Interaction } from 'three.interaction';\n\nfunction dec2bin(dec, n) {\n  var res = (dec >>> 0).toString(2);\n\n  if (res.length < n) {\n    for (let i = 0; i < (n - res.length); ++i) {\n      res = '0' + res;\n    }\n  }\n\n  return res;\n}\n\nexport function init3Dgraphics(element, data, nodes_ids, h, w) {\n\n  if (data === undefined) {\n    return false;\n  }\n\n  const CYLINDER_HEIGHT = 5;\n\n  const scene = new THREE.Scene();\n  //scene.background = new THREE.Color( 0xd3d3d3 );\n  scene.background = new THREE.Color( 0xf8f2ea);\n  const camera = new THREE.PerspectiveCamera(75, element.width / element.height, 0.1, 1000)\n  const renderer = new THREE.WebGLRenderer({\n    canvas: element,\n  });\n\n  renderer.setPixelRatio( window.devicePixelRatio );\n  renderer.setSize(element.width, element.height); // full size\n  camera.position.setZ(30); // for better perspective\n  renderer.sortObjects = false;\n  renderer.render(scene, camera);\n // const interaction = new Interaction(renderer, scene, camera);\n\n  const fontJson = require( \"./fonts/Caviar_Dreams_Bold.json\" );\n  const font = new Font( fontJson );\n  var texts = [];\n\n  const axesHelper = new THREE.AxesHelper(100);\n  //scene.add(axesHelper);\n\n  const gui = new dat.GUI();\n  const options = {\n    sphereColor : 0xffea00,\n    wireframe: false,\n  };\n    \n  const pointLight = new THREE.PointLight(0xffffff)\n  pointLight.position.set(20, 20, 20);\n\n  const ambientLight = new THREE.AmbientLight(0xffffff)\n  ambientLight.position.set(20, 20, 20);\n\n  scene.add(pointLight, ambientLight);\n\n  const lightHelper = new THREE.PointLightHelper(pointLight);  // shows position of lighsource\n  const gridHelper = new THREE.GridHelper(30, 20);\n\n  //scene.add(lightHelper, gridHelper);\n\n  window.addEventListener('resize', function() {\n    camera.aspect = element.width / element.height;\n    camera.updateProjectionMatrix();\n    renderer.setSize(element.width);\n  });\n\n  const controls = new OrbitControls(camera, renderer.domElement);\n\n  var nodes_to_id = {};\n\n\n  function resetMaterials() {\n    for (let i = 0; i < scene.children.length; i++) {\n      if (scene.children[i].material) {\n        scene.children[i].material.opacity = 1.0;\n      }\n    }\n  }\n\n/*\n  function hoverPieces() {\n    raycaster.setFromCamera(mouse, camera);\n    const intersects = raycaster.intersectObjects(scene.children);\n\n    for (let i = 0; i < intersects.length; i++) {\n      const newMaterial = intersects[i].object.material.clone();\n      newMaterial.transparent = true;\n      newMaterial.opacity = 0.5;\n      intersects[i].object.material = newMaterial;\n    }\n  }\n\n  function onClick() {\n    texts.forEach((text) => { removeObject3D(text) });\n\n    raycaster.setFromCamera(mouse, camera);\n    let intersects = raycaster.intersectObjects(scene.children);\n\n    if (intersects.length === 1) {\n      const obj = intersects[0].object;\n      var text = '';\n      nodes_to_id[obj.id].forEach(function (elem) {\n        if (text !== '') {\n          text += ',';\n        }\n        text += ' (';\n        const bin = dec2bin(elem, nodes_ids.length);\n\n        for (let i = 0; i < bin.length; i++) {\n          if (bin[i] === '1') {\n            text += ' ' + nodes_ids[i];\n          }\n        }\n        text += ')';\n      });\n\n      const geometry = new TextGeometry(text, {\n        font : font,\n        size : 1,\n        height : 1,\n      });\n\n      const textMesh = new THREE.Mesh(geometry, [\n        new THREE.MeshPhongMaterial( { color : 0x000000 } )\n      ]);\n\n      textMesh.position.x = obj.position.x;\n      textMesh.position.y = obj.position.y;\n      textMesh.position.z = obj.position.z + 10;\n\n      texts.push(textMesh);\n      scene.add(textMesh);      \n    }\n  }\n  \n\n  function removeObject3D(object3D) {\n    if (!(object3D instanceof THREE.Object3D)) return false;\n\n    // for better memory management and performance\n    if (object3D.geometry) object3D.geometry.dispose();\n\n    if (object3D.material) {\n        if (object3D.material instanceof Array) {\n            // for better memory management and performance\n            object3D.material.forEach(material => material.dispose());\n        } else {\n            // for better memory management and performance\n            object3D.material.dispose();\n        }\n    }\n    object3D.removeFromParent(); // the parent might be the scene or another Object3D, but it is sure to be removed this way\n    return true;\n}\n*/\n  console.log('xxxxxxx');\n  processClusters(scene, data);\n  console.log('xxxxx');\n\n  data = null;\n\n  function animate() {\n    setTimeout( function() {\n      requestAnimationFrame( animate );\n    }, 1000 / 5 );\n\n    controls.update();\n    resetMaterials();\n    renderer.render(scene, camera);\n  }\n\n  renderer.setAnimationLoop(animate);\n\n//  window.addEventListener( 'click', onClick );\n//  window.addEventListener( 'mousemove', onMouseMove );\n\n  window.addEventListener('resize', function() {\n    camera.aspect = element.width / element.width\n    camera.updateProjectionMatrix();\n    renderer.setSize(element.width, element.width);\n  });\n\n  function calcColor(max, val) {\n    return \"hsla(147, 0%, 50%, 1)\";\n    const min = 0\n    var minHue = 240, maxHue=0;\n    var curPercent = (val - min) / (max-min);\n    var colString = \"hsl(\" + ((curPercent * (maxHue-minHue) ) + minHue) + \",65%,50%)\";\n    return colString;\n  }\n\n  function createCylinder( data, id, startPoint, endPoint, currRadius, nextRadius, rank, rank_max) {\n    const color = new THREE.Color( data[id]['Color'] === '' ? calcColor(rank_max, rank) : data[id]['Color'] );\n    //color.setHex(rank/10 * 0xffffff );\n   // color.setHex(rank/10 * 0xffffff );\n\n\n    var cylinderMesh = function( startPoint, endPoint, midPoint, currRadius, nextRadius, color ) {\n      /* edge from X to Y */\n      const direction = new THREE.Vector3().subVectors( endPoint, startPoint );\n      console.log('aaaaa');\n\n      const orientation = new THREE.Matrix4();\n      /* THREE.Object3D().up (=Y) default orientation for all objects */\n      orientation.lookAt(startPoint, endPoint, new THREE.Object3D().up);\n            console.log('aaaaa');\n\n\n      /* rotation around axis X by -90 degrees \n      * matches the default orientation Y \n      * with the orientation of looking Z */\n      const mat =  new THREE.Matrix4();\n      mat.set(\n        1,0,0,0,\n        0,0,1,0, \n        0,-1,0,0,\n        0,0,0,1\n      );\n      orientation.multiply(mat);\n            console.log('aaaaa');\n\n\n      /* cylinder: radiusAtTop, radiusAtBottom, \n          height, radiusSegments, heightSegments */\n      const edgeGeometry = new THREE.CylinderGeometry( nextRadius, currRadius, direction.length, 8, 1);\n            console.log('aaaaa');\n\n      const cylinder = new THREE.Mesh( edgeGeometry, new THREE.MeshPhongMaterial( { color: color, flatShading : true } ) );\n            console.log(orientation);\n\n\n      cylinder.applyMatrix4(orientation);\n            console.log('aaaaa');\n\n      cylinder.position.set(midPoint.x, midPoint.y, midPoint.z);\n            console.log('aaaaa');\n\n     // nodes_to_id[cylinder.id] = data[id][\"Nodes\"];\n      return cylinder;\n    }\n\n    const midPoint = new Point((startPoint.x + endPoint.x) / 2, (startPoint.y + endPoint.y) / 2, (startPoint.z + endPoint.z) / 2);\n    return cylinderMesh(startPoint, endPoint, midPoint, currRadius, nextRadius, color); //new THREE.Mesh(geometryCyl, material);\n  }\n\n  // prevPoint, point - upper and downer middle points of cylinder\n  // dirPoint - point to which direction of cylinder (dir vector) should go \n  function clustering(scene, data, id, max_branching, branch_count, prevPointFirst, pointFirst, biggestRank) {\n\n    if (id === undefined) {\n      console.log(\"Id is undefined in clustering\");\n      return;\n    }\n\n    var tuple = Object.freeze({ id: id, prevPoint: prevPointFirst, point: pointFirst });\n    var stack = [ tuple ];\n \n    var count = 0\n\n    while (stack.length > 0) {\n      ++count;\n      const stackElement = stack.pop();\n      const current = stackElement.id;\n      const prevPoint = stackElement.prevPoint;\n      const point = stackElement.point;\n      console.log(current);\n\n      var cluster = data[current];\n      const childCount = cluster[\"Desc\"].length;\n\n      var childsChildCount = 0;\n      for (var i = 0; i < cluster[\"Desc\"].length; ++i) {\n        childsChildCount += data[cluster[\"Desc\"][i]][\"NodeCount\"];\n      }\n\n      var cylinder = createCylinder(data, current, prevPoint, point, cluster.NodeCount, childsChildCount, data[current][\"Rank\"], biggestRank);\n      console.log(current);\n\n      const prevPointPointDist = Math.sqrt((point.x - prevPoint.x) * (point.x - prevPoint.x) + (point.y - prevPoint.y)\n                              * (point.y - prevPoint.y) + (point.z - prevPoint.z) * (point.z - prevPoint.z));\n\n      for (i = 0; i < childCount; ++i) {\n\n        if (childCount === 1) {\n\n            var newStartPoint = new Point(point.x, point.y, point.z); // to make copy\n\n            var offset = 0;\n            if (childsChildCount === cluster[\"Desc\"].length && childsChildCount !== 0 && data[cluster[\"Desc\"][0]][\"Desc\"].length !== 0) {\n              cylinder = undefined; // join same-like cluster to one - draw one cluster with bigger height\n              newStartPoint = new Point(prevPoint.x, prevPoint.y, prevPoint.z); // to make copy\n            }\n\n            const dirVector = new THREE.Vector3(point.x - prevPoint.x, point.y - prevPoint.y, point.z - prevPoint.z);\n            const newPoint = new Point(dirVector.x + point.x, dirVector.y + point.y, dirVector.z + point.z);\n\n            tuple = Object.freeze({ id: cluster[\"Desc\"][0], prevPoint: newStartPoint, point: newPoint });\n            stack.push(tuple);\n          \n          continue;\n        }\n\n        // COMPUTE NEW COORDINATES around circle\n        const theta = 2 * Math.PI / childCount * i;\n\n        var xPos = Math.cos(theta) * childsChildCount;\n        var zPos = Math.sin(theta) * childsChildCount;\n        // this point is not exactly matching with rotation line\n        // it is used to compute vector and later in correct newStartPoint\n        const newStartPointHelper = new Point(point.x + xPos, point.y, point.z + zPos);\n\n        const vector = new THREE.Vector3(newStartPointHelper.x - prevPoint.x, newStartPointHelper.y - prevPoint.y, newStartPointHelper.z - prevPoint.z).normalize();\n        const distance = Math.sqrt(cluster.NodeCount * cluster.NodeCount + prevPointPointDist * prevPointPointDist);\n        newStartPoint = new Point(\n          prevPoint.x + distance * vector.x,\n          prevPoint.y + distance * vector.y,\n          prevPoint.z + distance * vector.z,\n        );\n      \n        const branch_factor = 2 - (1/max_branching * branch_count);\n        xPos = Math.cos(theta) * childsChildCount * branch_factor; // TODO pronasobit constantov pro urceni mensiho/vetsiho uhlu - v ramci hlbky stromu? \n        zPos = Math.sin(theta) * childsChildCount * branch_factor; // TODO\n        const newEndPoint = new Point(newStartPoint.x + xPos, newStartPoint.y - CYLINDER_HEIGHT, newStartPoint.z + zPos);\n      \n        tuple = Object.freeze({ id: cluster[\"Desc\"][i], prevPoint: newStartPoint, point: newEndPoint });\n        stack.push(tuple);\n      }\n\n      if (cylinder !== undefined) {\n        scene.add(cylinder);\n      }\n\n    }\n  }\n\n  function compMaxBranching(data, key) {\n\n    let stack = [ key ];\n    var maximums = {}\n    var colors = {}\n\n    while (stack.length > 0) {\n      const current = stack.pop();\n      colors[current] = 'G';\n      stack.push(current);\n      \n      if (maximums[current] === undefined) {\n        maximums[current] = 0\n      }\n\n      var count_black = 0;\n      const desc_count = data[current][\"Desc\"].length;\n      for (var i = 0; i < desc_count; ++i) {\n        if (colors[data[current][\"Desc\"][i]] === undefined) {\n          stack.push(data[current][\"Desc\"][i]);\n        } \n\n        if (colors[data[current][\"Desc\"][i]] === 'B') {\n          count_black += 1;\n          maximums[current] = Math.max(maximums[ data[current][\"Desc\"][i] ], maximums[current]);\n        }\n      }\n\n      if (count_black === desc_count) {\n        colors[current] = 'B';\n        stack.pop();\n\n        if (desc_count > 1) {\n          maximums[current] += 1;\n        }\n      }\n    }\n\n    return maximums[key];\n  }\n\n  function processClusters(scene, data) {\n\n    var root_cluster_key = undefined;\n    var maxCluster = 1;\n    var biggestRank = 0;\n    Object.entries(data).forEach(([k,v]) => {\n      if (v[\"Rank\"] === 0) {\n        root_cluster_key = k;\n      }\n      biggestRank = Math.max(v[\"Rank\"], biggestRank);\n      maxCluster = Math.max(maxCluster, v.NodeCount);\n    });\n\n    const max_branching = compMaxBranching(data, root_cluster_key);\n\n    const firstHeight = biggestRank * CYLINDER_HEIGHT / 2 + CYLINDER_HEIGHT;\n    const firstStartPoint = new Point(0, firstHeight, 0);\n    const firstEndPoint = new Point(0, firstHeight - CYLINDER_HEIGHT, 0);\n\n    clustering(scene, data, root_cluster_key, max_branching, 1, firstStartPoint, firstEndPoint, biggestRank);\n  }\n}\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}