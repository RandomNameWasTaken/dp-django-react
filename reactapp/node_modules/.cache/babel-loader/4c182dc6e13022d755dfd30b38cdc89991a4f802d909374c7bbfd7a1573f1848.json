{"ast":null,"code":"import _slicedToArray from\"/home/xkruzel/Desktop/todo/reactapp/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import*as THREE from'three';import{OrbitControls}from'three/examples/jsm/controls/OrbitControls';import*as dat from'dat.gui';import{Point}from'./Point';import{Font}from'three/examples/jsm/loaders/FontLoader.js';import{TextGeometry}from'three/examples/jsm/geometries/TextGeometry.js';import{Interaction}from'three.interaction-fixed';function dec2bin(dec,n){var res=(dec>>>0).toString(2);if(res.length<n){for(var i=0;i<n-res.length;++i){res='0'+res;}}return res;}export function init3Dgraphics(element,data,nodes_ids,h,w){if(data===undefined){return false;}var CYLINDER_HEIGHT=5;var scene=new THREE.Scene();//scene.background = new THREE.Color( 0xd3d3d3 );\nscene.background=new THREE.Color(0xf8f2ea);var camera=new THREE.PerspectiveCamera(75,element.width/element.height,0.1,1000);var renderer=new THREE.WebGLRenderer({canvas:element});renderer.setPixelRatio(window.devicePixelRatio);renderer.setSize(element.width,element.height);// full size\ncamera.position.setZ(30);// for better perspective\nrenderer.sortObjects=false;renderer.render(scene,camera);var interaction=new Interaction(renderer,scene,camera);// For showing text information about clusters\nvar fontJson=require(\"./fonts/Caviar_Dreams_Bold.json\");var font=new Font(fontJson);var texts=[];var axesHelper=new THREE.AxesHelper(100);//scene.add(axesHelper);\nvar gui=new dat.GUI();var options={sphereColor:0xffea00,wireframe:false};var pointLight=new THREE.PointLight(0xffffff);pointLight.position.set(20,20,20);var ambientLight=new THREE.AmbientLight(0xffffff);ambientLight.position.set(20,20,20);scene.add(pointLight,ambientLight);var lightHelper=new THREE.PointLightHelper(pointLight);// shows position of lighsource\nvar gridHelper=new THREE.GridHelper(30,20);//scene.add(lightHelper, gridHelper);\nwindow.addEventListener('resize',function(){camera.aspect=element.width/element.height;camera.updateProjectionMatrix();renderer.setSize(element.width);});var controls=new OrbitControls(camera,renderer.domElement);function resetMaterials(){for(var i=0;i<scene.children.length;i++){if(scene.children[i].material){scene.children[i].material.opacity=1.0;}}}processClusters(scene,data);data=null;function animate(){setTimeout(function(){requestAnimationFrame(animate);},1000/5);controls.update();renderer.render(scene,camera);}renderer.setAnimationLoop(animate);//window.addEventListener( 'click', onClick );\n//window.addEventListener( 'mousemove', onMouseMove );\nwindow.addEventListener('resize',function(){camera.aspect=element.width/element.width;camera.updateProjectionMatrix();renderer.setSize(element.width,element.width);});function calcColor(max,val){return\"hsla(147, 0%, 50%, 1)\";var min=0;var minHue=240,maxHue=0;var curPercent=(val-min)/(max-min);var colString=\"hsl(\"+(curPercent*(maxHue-minHue)+minHue)+\",65%,50%)\";return colString;}function createCylinder(data,id,startPoint,endPoint,currRadius,nextRadius,rank,rank_max){var color=new THREE.Color(data[id]['Color']===''?calcColor(rank_max,rank):data[id]['Color']);//color.setHex(rank/10 * 0xffffff );\n// color.setHex(rank/10 * 0xffffff );\nvar cylinderMesh=function cylinderMesh(startPoint,endPoint,midPoint,currRadius,nextRadius,color){/* edge from X to Y */var direction=new THREE.Vector3().subVectors(endPoint,startPoint);var orientation=new THREE.Matrix4();/* THREE.Object3D().up (=Y) default orientation for all objects */orientation.lookAt(startPoint,endPoint,new THREE.Object3D().up);/* rotation around axis X by -90 degrees \n      * matches the default orientation Y \n      * with the orientation of looking Z */var mat=new THREE.Matrix4();mat.set(1,0,0,0,0,0,1,0,0,-1,0,0,0,0,0,1);orientation.multiply(mat);/* cylinder: radiusAtTop, radiusAtBottom, \n          height, radiusSegments, heightSegments */var edgeGeometry=new THREE.CylinderGeometry(nextRadius/Math.PI,currRadius/Math.PI,direction.length(),8,1);var cylinder=new THREE.Mesh(edgeGeometry,new THREE.MeshPhongMaterial({color:color,flatShading:true}));cylinder.applyMatrix4(orientation);cylinder.position.set(midPoint.x,midPoint.y,midPoint.z);cylinder.cursor='pointer';cylinder.on('click',function(ev){texts.forEach(function(text){var selectedObject=scene.getObjectByName(text.name);scene.remove(selectedObject);});var text='';data[id][\"Nodes\"].forEach(function(elem){if(text!==''){text+=',';}text+=' (';var bin=dec2bin(elem,nodes_ids.length);for(var i=0;i<bin.length;i++){if(bin[i]==='1'){text+=' '+nodes_ids[i];}}text+=')';});var geometry=new TextGeometry(text,{font:font,size:1,height:1});var textMesh=new THREE.Mesh(geometry,[new THREE.MeshPhongMaterial({color:0x000000})]);textMesh.position.x=cylinder.position.x;textMesh.position.y=cylinder.position.y;textMesh.position.z=cylinder.position.z+10;textMesh.name=text;texts.push(textMesh);scene.add(textMesh);});return{cylinder:cylinder,orientation:orientation};};var midPoint=new Point((startPoint.x+endPoint.x)/2,(startPoint.y+endPoint.y)/2,(startPoint.z+endPoint.z)/2);return cylinderMesh(startPoint,endPoint,midPoint,currRadius,nextRadius,color);//new THREE.Mesh(geometryCyl, material);\n}// prevPoint, point - upper and downer middle points of cylinder\n// dirPoint - point to which direction of cylinder (dir vector) should go \nfunction clustering(scene,data,id,max_branching,branch_count,prevPointFirst,pointFirst,biggestRank){if(id===undefined){console.log(\"Id is undefined in clustering\");return;}var tuple=Object.freeze({id:id,prevPoint:prevPointFirst,point:pointFirst});var stack=[tuple];var count=0;while(stack.length>0){++count;var stackElement=stack.pop();var current=stackElement.id;var prevPoint=stackElement.prevPoint;var point=stackElement.point;var cluster=data[current];var childCount=cluster[\"Desc\"].length;var childsChildCount=0;for(var i=0;i<cluster[\"Desc\"].length;++i){childsChildCount+=data[cluster[\"Desc\"][i]][\"NodeCount\"];}var result=createCylinder(data,current,prevPoint,point,cluster.NodeCount,childsChildCount,data[current][\"Rank\"],biggestRank);var cylinder=result['cylinder'];var prevPointPointDist=Math.sqrt((point.x-prevPoint.x)*(point.x-prevPoint.x)+(point.y-prevPoint.y)*(point.y-prevPoint.y)+(point.z-prevPoint.z)*(point.z-prevPoint.z));for(i=0;i<childCount;++i){if(childCount===1){var newStartPoint=new Point(point.x,point.y,point.z);// to make copy\nvar offset=0;if(childsChildCount===cluster[\"Desc\"].length&&childsChildCount!==0&&data[cluster[\"Desc\"][0]][\"Desc\"].length!==0){cylinder=undefined;// join same-like cluster to one - draw one cluster with bigger height\nnewStartPoint=new Point(prevPoint.x,prevPoint.y,prevPoint.z);// to make copy\n}var dirVector=new THREE.Vector3(point.x-prevPoint.x,point.y-prevPoint.y,point.z-prevPoint.z);var newPoint=new Point(dirVector.x+point.x,dirVector.y+point.y,dirVector.z+point.z);tuple=Object.freeze({id:cluster[\"Desc\"][0],prevPoint:newStartPoint,point:newPoint});stack.push(tuple);continue;}// COMPUTE NEW COORDINATES around circle\nvar theta=2*Math.PI/childCount;var _h=childCount/2;var fi=i*theta;if(i<=_h&&i%2==1){fi=(Math.ceil(_h)-1+i)*theta;}else if(i>_h&&(childCount-1-i)%2==0){fi=(childCount-i)*theta;}if(i>_h&&(childCount-1-i)%2==1){fi=(Math.ceil(_h)-1+childCount-i)*theta;}var polarCoor=(fi,childsChildCount/Math.PI);var xPos=Math.cos(theta)*childsChildCount;var zPos=Math.sin(theta)*childsChildCount;// this point is not exactly matching with rotation line\n// it is used to compute vector and later in correct newStartPoint\nvar newStartPointHelper=new Point(point.x+xPos,point.y,point.z+zPos);var vector=new THREE.Vector3(newStartPointHelper.x-prevPoint.x,newStartPointHelper.y-prevPoint.y,newStartPointHelper.z-prevPoint.z).normalize();var distance=Math.sqrt(cluster.NodeCount*cluster.NodeCount+prevPointPointDist*prevPointPointDist);newStartPoint=new Point(prevPoint.x+distance*vector.x,prevPoint.y+distance*vector.y,prevPoint.z+distance*vector.z);var branch_factor=2-1/max_branching*branch_count;xPos=Math.cos(theta)*childsChildCount*branch_factor;// TODO pronasobit constantov pro urceni mensiho/vetsiho uhlu - v ramci hlbky stromu? \nzPos=Math.sin(theta)*childsChildCount*branch_factor;// TODO\nvar newEndPoint=new Point(newStartPoint.x+xPos,newStartPoint.y-CYLINDER_HEIGHT,newStartPoint.z+zPos);tuple=Object.freeze({id:cluster[\"Desc\"][i],prevPoint:newStartPoint,point:newEndPoint});stack.push(tuple);}if(cylinder!==undefined){scene.add(cylinder);}}}function compMaxBranching(data,key){var stack=[key];var maximums={};var colors={};while(stack.length>0){var current=stack.pop();colors[current]='G';stack.push(current);if(maximums[current]===undefined){maximums[current]=0;}var count_black=0;var desc_count=data[current][\"Desc\"].length;for(var i=0;i<desc_count;++i){if(colors[data[current][\"Desc\"][i]]===undefined){stack.push(data[current][\"Desc\"][i]);}if(colors[data[current][\"Desc\"][i]]==='B'){count_black+=1;maximums[current]=Math.max(maximums[data[current][\"Desc\"][i]],maximums[current]);}}if(count_black===desc_count){colors[current]='B';stack.pop();if(desc_count>1){maximums[current]+=1;}}}return maximums[key];}function processClusters(scene,data){var root_cluster_key=undefined;var maxCluster=1;var biggestRank=0;Object.entries(data).forEach(function(_ref){var _ref2=_slicedToArray(_ref,2),k=_ref2[0],v=_ref2[1];if(v[\"Rank\"]===0){root_cluster_key=k;}biggestRank=Math.max(v[\"Rank\"],biggestRank);maxCluster=Math.max(maxCluster,v.NodeCount);});var max_branching=compMaxBranching(data,root_cluster_key);var firstHeight=biggestRank*CYLINDER_HEIGHT/2+CYLINDER_HEIGHT;var firstStartPoint=new Point(0,firstHeight,0);var firstEndPoint=new Point(0,firstHeight-CYLINDER_HEIGHT,0);clustering(scene,data,root_cluster_key,max_branching,1,firstStartPoint,firstEndPoint,biggestRank);}}","map":{"version":3,"names":["THREE","OrbitControls","dat","Point","Font","TextGeometry","Interaction","dec2bin","dec","n","res","toString","length","i","init3Dgraphics","element","data","nodes_ids","h","w","undefined","CYLINDER_HEIGHT","scene","Scene","background","Color","camera","PerspectiveCamera","width","height","renderer","WebGLRenderer","canvas","setPixelRatio","window","devicePixelRatio","setSize","position","setZ","sortObjects","render","interaction","fontJson","require","font","texts","axesHelper","AxesHelper","gui","GUI","options","sphereColor","wireframe","pointLight","PointLight","set","ambientLight","AmbientLight","add","lightHelper","PointLightHelper","gridHelper","GridHelper","addEventListener","aspect","updateProjectionMatrix","controls","domElement","resetMaterials","children","material","opacity","processClusters","animate","setTimeout","requestAnimationFrame","update","setAnimationLoop","calcColor","max","val","min","minHue","maxHue","curPercent","colString","createCylinder","id","startPoint","endPoint","currRadius","nextRadius","rank","rank_max","color","cylinderMesh","midPoint","direction","Vector3","subVectors","orientation","Matrix4","lookAt","Object3D","up","mat","multiply","edgeGeometry","CylinderGeometry","Math","PI","cylinder","Mesh","MeshPhongMaterial","flatShading","applyMatrix4","x","y","z","cursor","on","ev","forEach","text","selectedObject","getObjectByName","name","remove","elem","bin","geometry","size","textMesh","push","clustering","max_branching","branch_count","prevPointFirst","pointFirst","biggestRank","console","log","tuple","Object","freeze","prevPoint","point","stack","count","stackElement","pop","current","cluster","childCount","childsChildCount","result","NodeCount","prevPointPointDist","sqrt","newStartPoint","offset","dirVector","newPoint","theta","fi","ceil","polarCoor","xPos","cos","zPos","sin","newStartPointHelper","vector","normalize","distance","branch_factor","newEndPoint","compMaxBranching","key","maximums","colors","count_black","desc_count","root_cluster_key","maxCluster","entries","k","v","firstHeight","firstStartPoint","firstEndPoint"],"sources":["/home/xkruzel/Desktop/todo/reactapp/src/rendering.js"],"sourcesContent":["import * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport * as dat from 'dat.gui';\nimport { Point } from './Point';\nimport { Font } from 'three/examples/jsm/loaders/FontLoader.js';\nimport { TextGeometry } from 'three/examples/jsm/geometries/TextGeometry.js';\nimport { Interaction } from 'three.interaction-fixed';\n\nfunction dec2bin(dec, n) {\n  var res = (dec >>> 0).toString(2);\n\n  if (res.length < n) {\n    for (let i = 0; i < (n - res.length); ++i) {\n      res = '0' + res;\n    }\n  }\n\n  return res;\n}\n\nexport function init3Dgraphics(element, data, nodes_ids, h, w) {\n\n  if (data === undefined) {\n    return false;\n  }\n\n  const CYLINDER_HEIGHT = 5;\n\n  const scene = new THREE.Scene();\n  //scene.background = new THREE.Color( 0xd3d3d3 );\n  scene.background = new THREE.Color( 0xf8f2ea);\n  const camera = new THREE.PerspectiveCamera(75, element.width / element.height, 0.1, 1000)\n  const renderer = new THREE.WebGLRenderer({\n    canvas: element,\n  });\n\n  renderer.setPixelRatio( window.devicePixelRatio );\n  renderer.setSize(element.width, element.height); // full size\n  camera.position.setZ(30); // for better perspective\n  renderer.sortObjects = false;\n  renderer.render(scene, camera);\n\n  const interaction = new Interaction(renderer, scene, camera);\n\n// For showing text information about clusters\n  const fontJson = require( \"./fonts/Caviar_Dreams_Bold.json\" );\n  const font = new Font( fontJson );\n  var texts = [];\n\n  const axesHelper = new THREE.AxesHelper(100);\n  //scene.add(axesHelper);\n\n  const gui = new dat.GUI();\n  const options = {\n    sphereColor : 0xffea00,\n    wireframe: false,\n  };\n    \n  const pointLight = new THREE.PointLight(0xffffff)\n  pointLight.position.set(20, 20, 20);\n\n  const ambientLight = new THREE.AmbientLight(0xffffff)\n  ambientLight.position.set(20, 20, 20);\n\n  scene.add(pointLight, ambientLight);\n\n  const lightHelper = new THREE.PointLightHelper(pointLight);  // shows position of lighsource\n  const gridHelper = new THREE.GridHelper(30, 20);\n\n  //scene.add(lightHelper, gridHelper);\n\n  window.addEventListener('resize', function() {\n    camera.aspect = element.width / element.height;\n    camera.updateProjectionMatrix();\n    renderer.setSize(element.width);\n  });\n\n  const controls = new OrbitControls(camera, renderer.domElement);\n\n  function resetMaterials() {\n    for (let i = 0; i < scene.children.length; i++) {\n      if (scene.children[i].material) {\n        scene.children[i].material.opacity = 1.0;\n      }\n    }\n  }\n\n\n  processClusters(scene, data);\n  data = null;\n\n  function animate() {\n    setTimeout( function() {\n      requestAnimationFrame( animate );\n    }, 1000 / 5 );\n\n    controls.update();\n    renderer.render(scene, camera);\n  }\n\n  renderer.setAnimationLoop(animate);\n\n  //window.addEventListener( 'click', onClick );\n  //window.addEventListener( 'mousemove', onMouseMove );\n\n  window.addEventListener('resize', function() {\n    camera.aspect = element.width / element.width\n    camera.updateProjectionMatrix();\n    renderer.setSize(element.width, element.width);\n  });\n\n  function calcColor(max, val) {\n    return \"hsla(147, 0%, 50%, 1)\";\n    const min = 0\n    var minHue = 240, maxHue=0;\n    var curPercent = (val - min) / (max-min);\n    var colString = \"hsl(\" + ((curPercent * (maxHue-minHue) ) + minHue) + \",65%,50%)\";\n    return colString;\n  }\n\n  function createCylinder( data, id, startPoint, endPoint, currRadius, nextRadius, rank, rank_max) {\n    const color = new THREE.Color( data[id]['Color'] === '' ? calcColor(rank_max, rank) : data[id]['Color'] );\n    //color.setHex(rank/10 * 0xffffff );\n   // color.setHex(rank/10 * 0xffffff );\n\n\n    var cylinderMesh = function( startPoint, endPoint, midPoint, currRadius, nextRadius, color ) {\n      /* edge from X to Y */\n      const direction = new THREE.Vector3().subVectors( endPoint, startPoint );\n\n      const orientation = new THREE.Matrix4();\n      /* THREE.Object3D().up (=Y) default orientation for all objects */\n      orientation.lookAt(startPoint, endPoint, new THREE.Object3D().up);\n\n      /* rotation around axis X by -90 degrees \n      * matches the default orientation Y \n      * with the orientation of looking Z */\n      const mat =  new THREE.Matrix4();\n      mat.set(\n        1,0,0,0,\n        0,0,1,0, \n        0,-1,0,0,\n        0,0,0,1\n      );\n      orientation.multiply(mat);\n\n      /* cylinder: radiusAtTop, radiusAtBottom, \n          height, radiusSegments, heightSegments */\n      const edgeGeometry = new THREE.CylinderGeometry( nextRadius / Math.PI, currRadius / Math.PI, direction.length(), 8, 1);\n      const cylinder = new THREE.Mesh( edgeGeometry, \n              new THREE.MeshPhongMaterial( { color: color, flatShading : true } ) );\n\n      cylinder.applyMatrix4(orientation)\n      cylinder.position.set(midPoint.x, midPoint.y, midPoint.z);\n      cylinder.cursor = 'pointer';\n      cylinder.on('click', function(ev) {\n\n        texts.forEach(function (text) {\n            var selectedObject = scene.getObjectByName(text.name);\n            scene.remove( selectedObject );\n        });\n\n        var text = '';\n        data[id][\"Nodes\"].forEach(function (elem) {\n          if (text !== '') {\n            text += ',';\n          }\n          text += ' (';\n          const bin = dec2bin(elem, nodes_ids.length);\n\n          for (let i = 0; i < bin.length; i++) {\n            if (bin[i] === '1') {\n              text += ' ' + nodes_ids[i];\n            }\n          }\n          text += ')';\n        });\n\n        const geometry = new TextGeometry(text, {\n          font : font,\n          size : 1,\n          height : 1,\n        });\n\n        const textMesh = new THREE.Mesh(geometry, [\n          new THREE.MeshPhongMaterial( { color : 0x000000 } )\n        ]);\n\n        textMesh.position.x = cylinder.position.x;\n        textMesh.position.y = cylinder.position.y;\n        textMesh.position.z = cylinder.position.z + 10;\n\n        textMesh.name = text;\n\n        texts.push(textMesh);\n        scene.add(textMesh);\n\n      });\n\n      return {cylinder : cylinder, orientation: orientation};\n    }\n\n    const midPoint = new Point((startPoint.x + endPoint.x) / 2, (startPoint.y + endPoint.y) / 2, (startPoint.z + endPoint.z) / 2);\n    return cylinderMesh(startPoint, endPoint, midPoint, currRadius, nextRadius, color); //new THREE.Mesh(geometryCyl, material);\n\n  }\n\n  // prevPoint, point - upper and downer middle points of cylinder\n  // dirPoint - point to which direction of cylinder (dir vector) should go \n  function clustering(scene, data, id, max_branching, branch_count, prevPointFirst, pointFirst, biggestRank) {\n\n    if (id === undefined) {\n      console.log(\"Id is undefined in clustering\");\n      return;\n    }\n\n    var tuple = Object.freeze({ id: id, prevPoint: prevPointFirst, point: pointFirst });\n    var stack = [ tuple ];\n \n    var count = 0\n\n    while (stack.length > 0) {\n      ++count;\n      const stackElement = stack.pop();\n      const current = stackElement.id;\n      const prevPoint = stackElement.prevPoint;\n      const point = stackElement.point;\n\n      var cluster = data[current];\n      const childCount = cluster[\"Desc\"].length;\n\n      var childsChildCount = 0;\n      for (var i = 0; i < cluster[\"Desc\"].length; ++i) {\n        childsChildCount += data[cluster[\"Desc\"][i]][\"NodeCount\"];\n      }\n\n      var result = createCylinder(data, current, prevPoint, point, cluster.NodeCount, childsChildCount, data[current][\"Rank\"], biggestRank);\n      var cylinder = result['cylinder'];\n\n      const prevPointPointDist = Math.sqrt((point.x - prevPoint.x) * (point.x - prevPoint.x) + (point.y - prevPoint.y)\n                              * (point.y - prevPoint.y) + (point.z - prevPoint.z) * (point.z - prevPoint.z));\n\n      for (i = 0; i < childCount; ++i) {\n\n        if (childCount === 1) {\n\n            var newStartPoint = new Point(point.x, point.y, point.z); // to make copy\n\n            var offset = 0;\n            if (childsChildCount === cluster[\"Desc\"].length && childsChildCount !== 0 && data[cluster[\"Desc\"][0]][\"Desc\"].length !== 0) {\n              cylinder = undefined; // join same-like cluster to one - draw one cluster with bigger height\n              newStartPoint = new Point(prevPoint.x, prevPoint.y, prevPoint.z); // to make copy\n            }\n\n            const dirVector = new THREE.Vector3(point.x - prevPoint.x, point.y - prevPoint.y, point.z - prevPoint.z);\n            const newPoint = new Point(dirVector.x + point.x, dirVector.y + point.y, dirVector.z + point.z);\n\n            tuple = Object.freeze({ id: cluster[\"Desc\"][0], prevPoint: newStartPoint, point: newPoint });\n            stack.push(tuple);\n          \n          continue;\n        }\n\n        // COMPUTE NEW COORDINATES around circle\n        const theta = 2 * Math.PI / childCount;\n        const h = childCount / 2;\n\n        var fi = i * theta;\n        if (i <= h && i % 2 == 1) {\n          fi = (Math.ceil(h) - 1 + i) * theta;\n        } else if (i > h && (childCount - 1 - i) % 2 == 0) {\n          fi = (childCount - i) * theta;\n        } if (i > h && (childCount - 1 - i) % 2 == 1) {\n          fi = (Math.ceil(h) - 1 + childCount - i) * theta;\n        }\n\n        var polarCoor = (fi, childsChildCount / Math.PI);\n\n        var xPos = Math.cos(theta) * childsChildCount;\n        var zPos = Math.sin(theta) * childsChildCount;\n        // this point is not exactly matching with rotation line\n        // it is used to compute vector and later in correct newStartPoint\n        const newStartPointHelper = new Point(point.x + xPos, point.y, point.z + zPos);\n\n        const vector = new THREE.Vector3(newStartPointHelper.x - prevPoint.x, newStartPointHelper.y - prevPoint.y, newStartPointHelper.z - prevPoint.z).normalize();\n        const distance = Math.sqrt(cluster.NodeCount * cluster.NodeCount + prevPointPointDist * prevPointPointDist);\n        newStartPoint = new Point(\n          prevPoint.x + distance * vector.x,\n          prevPoint.y + distance * vector.y,\n          prevPoint.z + distance * vector.z,\n        );\n      \n        const branch_factor = 2 - (1/max_branching * branch_count);\n        xPos = Math.cos(theta) * childsChildCount * branch_factor; // TODO pronasobit constantov pro urceni mensiho/vetsiho uhlu - v ramci hlbky stromu? \n        zPos = Math.sin(theta) * childsChildCount * branch_factor; // TODO\n        const newEndPoint = new Point(newStartPoint.x + xPos, newStartPoint.y - CYLINDER_HEIGHT, newStartPoint.z + zPos);\n      \n        tuple = Object.freeze({ id: cluster[\"Desc\"][i], prevPoint: newStartPoint, point: newEndPoint });\n        stack.push(tuple);\n      }\n\n      if (cylinder !== undefined) {\n        scene.add(cylinder);\n      }\n\n    }\n  }\n\n  function compMaxBranching(data, key) {\n\n    let stack = [ key ];\n    var maximums = {}\n    var colors = {}\n\n    while (stack.length > 0) {\n      const current = stack.pop();\n      colors[current] = 'G';\n      stack.push(current);\n      \n      if (maximums[current] === undefined) {\n        maximums[current] = 0\n      }\n\n      var count_black = 0;\n      const desc_count = data[current][\"Desc\"].length;\n      for (var i = 0; i < desc_count; ++i) {\n        if (colors[data[current][\"Desc\"][i]] === undefined) {\n          stack.push(data[current][\"Desc\"][i]);\n        } \n\n        if (colors[data[current][\"Desc\"][i]] === 'B') {\n          count_black += 1;\n          maximums[current] = Math.max(maximums[ data[current][\"Desc\"][i] ], maximums[current]);\n        }\n      }\n\n      if (count_black === desc_count) {\n        colors[current] = 'B';\n        stack.pop();\n\n        if (desc_count > 1) {\n          maximums[current] += 1;\n        }\n      }\n    }\n\n    return maximums[key];\n  }\n\n  function processClusters(scene, data) {\n\n    var root_cluster_key = undefined;\n    var maxCluster = 1;\n    var biggestRank = 0;\n    Object.entries(data).forEach(([k,v]) => {\n      if (v[\"Rank\"] === 0) {\n        root_cluster_key = k;\n      }\n      biggestRank = Math.max(v[\"Rank\"], biggestRank);\n      maxCluster = Math.max(maxCluster, v.NodeCount);\n    });\n\n    const max_branching = compMaxBranching(data, root_cluster_key);\n\n    const firstHeight = biggestRank * CYLINDER_HEIGHT / 2 + CYLINDER_HEIGHT;\n    const firstStartPoint = new Point(0, firstHeight, 0);\n    const firstEndPoint = new Point(0, firstHeight - CYLINDER_HEIGHT, 0);\n\n    clustering(scene, data, root_cluster_key, max_branching, 1, firstStartPoint, firstEndPoint, biggestRank);\n  }\n}\n\n\n\n"],"mappings":"yHAAA,MAAO,GAAKA,MAAK,KAAM,OAAO,CAC9B,OAASC,aAAa,KAAQ,2CAA2C,CACzE,MAAO,GAAKC,IAAG,KAAM,SAAS,CAC9B,OAASC,KAAK,KAAQ,SAAS,CAC/B,OAASC,IAAI,KAAQ,0CAA0C,CAC/D,OAASC,YAAY,KAAQ,+CAA+C,CAC5E,OAASC,WAAW,KAAQ,yBAAyB,CAErD,QAASC,QAAO,CAACC,GAAG,CAAEC,CAAC,CAAE,CACvB,GAAIC,IAAG,CAAG,CAACF,GAAG,GAAK,CAAC,EAAEG,QAAQ,CAAC,CAAC,CAAC,CAEjC,GAAID,GAAG,CAACE,MAAM,CAAGH,CAAC,CAAE,CAClB,IAAK,GAAII,EAAC,CAAG,CAAC,CAAEA,CAAC,CAAIJ,CAAC,CAAGC,GAAG,CAACE,MAAO,CAAE,EAAEC,CAAC,CAAE,CACzCH,GAAG,CAAG,GAAG,CAAGA,GAAG,CACjB,CACF,CAEA,MAAOA,IAAG,CACZ,CAEA,MAAO,SAASI,eAAc,CAACC,OAAO,CAAEC,IAAI,CAAEC,SAAS,CAAEC,CAAC,CAAEC,CAAC,CAAE,CAE7D,GAAIH,IAAI,GAAKI,SAAS,CAAE,CACtB,MAAO,MAAK,CACd,CAEA,GAAMC,gBAAe,CAAG,CAAC,CAEzB,GAAMC,MAAK,CAAG,GAAItB,MAAK,CAACuB,KAAK,EAAE,CAC/B;AACAD,KAAK,CAACE,UAAU,CAAG,GAAIxB,MAAK,CAACyB,KAAK,CAAE,QAAQ,CAAC,CAC7C,GAAMC,OAAM,CAAG,GAAI1B,MAAK,CAAC2B,iBAAiB,CAAC,EAAE,CAAEZ,OAAO,CAACa,KAAK,CAAGb,OAAO,CAACc,MAAM,CAAE,GAAG,CAAE,IAAI,CAAC,CACzF,GAAMC,SAAQ,CAAG,GAAI9B,MAAK,CAAC+B,aAAa,CAAC,CACvCC,MAAM,CAAEjB,OACV,CAAC,CAAC,CAEFe,QAAQ,CAACG,aAAa,CAAEC,MAAM,CAACC,gBAAgB,CAAE,CACjDL,QAAQ,CAACM,OAAO,CAACrB,OAAO,CAACa,KAAK,CAAEb,OAAO,CAACc,MAAM,CAAC,CAAE;AACjDH,MAAM,CAACW,QAAQ,CAACC,IAAI,CAAC,EAAE,CAAC,CAAE;AAC1BR,QAAQ,CAACS,WAAW,CAAG,KAAK,CAC5BT,QAAQ,CAACU,MAAM,CAAClB,KAAK,CAAEI,MAAM,CAAC,CAE9B,GAAMe,YAAW,CAAG,GAAInC,YAAW,CAACwB,QAAQ,CAAER,KAAK,CAAEI,MAAM,CAAC,CAE9D;AACE,GAAMgB,SAAQ,CAAGC,OAAO,CAAE,iCAAiC,CAAE,CAC7D,GAAMC,KAAI,CAAG,GAAIxC,KAAI,CAAEsC,QAAQ,CAAE,CACjC,GAAIG,MAAK,CAAG,EAAE,CAEd,GAAMC,WAAU,CAAG,GAAI9C,MAAK,CAAC+C,UAAU,CAAC,GAAG,CAAC,CAC5C;AAEA,GAAMC,IAAG,CAAG,GAAI9C,IAAG,CAAC+C,GAAG,EAAE,CACzB,GAAMC,QAAO,CAAG,CACdC,WAAW,CAAG,QAAQ,CACtBC,SAAS,CAAE,KACb,CAAC,CAED,GAAMC,WAAU,CAAG,GAAIrD,MAAK,CAACsD,UAAU,CAAC,QAAQ,CAAC,CACjDD,UAAU,CAAChB,QAAQ,CAACkB,GAAG,CAAC,EAAE,CAAE,EAAE,CAAE,EAAE,CAAC,CAEnC,GAAMC,aAAY,CAAG,GAAIxD,MAAK,CAACyD,YAAY,CAAC,QAAQ,CAAC,CACrDD,YAAY,CAACnB,QAAQ,CAACkB,GAAG,CAAC,EAAE,CAAE,EAAE,CAAE,EAAE,CAAC,CAErCjC,KAAK,CAACoC,GAAG,CAACL,UAAU,CAAEG,YAAY,CAAC,CAEnC,GAAMG,YAAW,CAAG,GAAI3D,MAAK,CAAC4D,gBAAgB,CAACP,UAAU,CAAC,CAAG;AAC7D,GAAMQ,WAAU,CAAG,GAAI7D,MAAK,CAAC8D,UAAU,CAAC,EAAE,CAAE,EAAE,CAAC,CAE/C;AAEA5B,MAAM,CAAC6B,gBAAgB,CAAC,QAAQ,CAAE,UAAW,CAC3CrC,MAAM,CAACsC,MAAM,CAAGjD,OAAO,CAACa,KAAK,CAAGb,OAAO,CAACc,MAAM,CAC9CH,MAAM,CAACuC,sBAAsB,EAAE,CAC/BnC,QAAQ,CAACM,OAAO,CAACrB,OAAO,CAACa,KAAK,CAAC,CACjC,CAAC,CAAC,CAEF,GAAMsC,SAAQ,CAAG,GAAIjE,cAAa,CAACyB,MAAM,CAAEI,QAAQ,CAACqC,UAAU,CAAC,CAE/D,QAASC,eAAc,EAAG,CACxB,IAAK,GAAIvD,EAAC,CAAG,CAAC,CAAEA,CAAC,CAAGS,KAAK,CAAC+C,QAAQ,CAACzD,MAAM,CAAEC,CAAC,EAAE,CAAE,CAC9C,GAAIS,KAAK,CAAC+C,QAAQ,CAACxD,CAAC,CAAC,CAACyD,QAAQ,CAAE,CAC9BhD,KAAK,CAAC+C,QAAQ,CAACxD,CAAC,CAAC,CAACyD,QAAQ,CAACC,OAAO,CAAG,GAAG,CAC1C,CACF,CACF,CAGAC,eAAe,CAAClD,KAAK,CAAEN,IAAI,CAAC,CAC5BA,IAAI,CAAG,IAAI,CAEX,QAASyD,QAAO,EAAG,CACjBC,UAAU,CAAE,UAAW,CACrBC,qBAAqB,CAAEF,OAAO,CAAE,CAClC,CAAC,CAAE,IAAI,CAAG,CAAC,CAAE,CAEbP,QAAQ,CAACU,MAAM,EAAE,CACjB9C,QAAQ,CAACU,MAAM,CAAClB,KAAK,CAAEI,MAAM,CAAC,CAChC,CAEAI,QAAQ,CAAC+C,gBAAgB,CAACJ,OAAO,CAAC,CAElC;AACA;AAEAvC,MAAM,CAAC6B,gBAAgB,CAAC,QAAQ,CAAE,UAAW,CAC3CrC,MAAM,CAACsC,MAAM,CAAGjD,OAAO,CAACa,KAAK,CAAGb,OAAO,CAACa,KAAK,CAC7CF,MAAM,CAACuC,sBAAsB,EAAE,CAC/BnC,QAAQ,CAACM,OAAO,CAACrB,OAAO,CAACa,KAAK,CAAEb,OAAO,CAACa,KAAK,CAAC,CAChD,CAAC,CAAC,CAEF,QAASkD,UAAS,CAACC,GAAG,CAAEC,GAAG,CAAE,CAC3B,MAAO,uBAAuB,CAC9B,GAAMC,IAAG,CAAG,CAAC,CACb,GAAIC,OAAM,CAAG,GAAG,CAAEC,MAAM,CAAC,CAAC,CAC1B,GAAIC,WAAU,CAAG,CAACJ,GAAG,CAAGC,GAAG,GAAKF,GAAG,CAACE,GAAG,CAAC,CACxC,GAAII,UAAS,CAAG,MAAM,EAAKD,UAAU,EAAID,MAAM,CAACD,MAAM,CAAC,CAAKA,MAAM,CAAC,CAAG,WAAW,CACjF,MAAOG,UAAS,CAClB,CAEA,QAASC,eAAc,CAAEtE,IAAI,CAAEuE,EAAE,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,UAAU,CAAEC,UAAU,CAAEC,IAAI,CAAEC,QAAQ,CAAE,CAC/F,GAAMC,MAAK,CAAG,GAAI9F,MAAK,CAACyB,KAAK,CAAET,IAAI,CAACuE,EAAE,CAAC,CAAC,OAAO,CAAC,GAAK,EAAE,CAAGT,SAAS,CAACe,QAAQ,CAAED,IAAI,CAAC,CAAG5E,IAAI,CAACuE,EAAE,CAAC,CAAC,OAAO,CAAC,CAAE,CACzG;AACD;AAGC,GAAIQ,aAAY,CAAG,QAAfA,aAAY,CAAaP,UAAU,CAAEC,QAAQ,CAAEO,QAAQ,CAAEN,UAAU,CAAEC,UAAU,CAAEG,KAAK,CAAG,CAC3F,sBACA,GAAMG,UAAS,CAAG,GAAIjG,MAAK,CAACkG,OAAO,EAAE,CAACC,UAAU,CAAEV,QAAQ,CAAED,UAAU,CAAE,CAExE,GAAMY,YAAW,CAAG,GAAIpG,MAAK,CAACqG,OAAO,EAAE,CACvC,kEACAD,WAAW,CAACE,MAAM,CAACd,UAAU,CAAEC,QAAQ,CAAE,GAAIzF,MAAK,CAACuG,QAAQ,EAAE,CAACC,EAAE,CAAC,CAEjE;AACN;AACA,4CACM,GAAMC,IAAG,CAAI,GAAIzG,MAAK,CAACqG,OAAO,EAAE,CAChCI,GAAG,CAAClD,GAAG,CACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACR,CACD6C,WAAW,CAACM,QAAQ,CAACD,GAAG,CAAC,CAEzB;AACN,mDACM,GAAME,aAAY,CAAG,GAAI3G,MAAK,CAAC4G,gBAAgB,CAAEjB,UAAU,CAAGkB,IAAI,CAACC,EAAE,CAAEpB,UAAU,CAAGmB,IAAI,CAACC,EAAE,CAAEb,SAAS,CAACrF,MAAM,EAAE,CAAE,CAAC,CAAE,CAAC,CAAC,CACtH,GAAMmG,SAAQ,CAAG,GAAI/G,MAAK,CAACgH,IAAI,CAAEL,YAAY,CACrC,GAAI3G,MAAK,CAACiH,iBAAiB,CAAE,CAAEnB,KAAK,CAAEA,KAAK,CAAEoB,WAAW,CAAG,IAAK,CAAC,CAAE,CAAE,CAE7EH,QAAQ,CAACI,YAAY,CAACf,WAAW,CAAC,CAClCW,QAAQ,CAAC1E,QAAQ,CAACkB,GAAG,CAACyC,QAAQ,CAACoB,CAAC,CAAEpB,QAAQ,CAACqB,CAAC,CAAErB,QAAQ,CAACsB,CAAC,CAAC,CACzDP,QAAQ,CAACQ,MAAM,CAAG,SAAS,CAC3BR,QAAQ,CAACS,EAAE,CAAC,OAAO,CAAE,SAASC,EAAE,CAAE,CAEhC5E,KAAK,CAAC6E,OAAO,CAAC,SAAUC,IAAI,CAAE,CAC1B,GAAIC,eAAc,CAAGtG,KAAK,CAACuG,eAAe,CAACF,IAAI,CAACG,IAAI,CAAC,CACrDxG,KAAK,CAACyG,MAAM,CAAEH,cAAc,CAAE,CAClC,CAAC,CAAC,CAEF,GAAID,KAAI,CAAG,EAAE,CACb3G,IAAI,CAACuE,EAAE,CAAC,CAAC,OAAO,CAAC,CAACmC,OAAO,CAAC,SAAUM,IAAI,CAAE,CACxC,GAAIL,IAAI,GAAK,EAAE,CAAE,CACfA,IAAI,EAAI,GAAG,CACb,CACAA,IAAI,EAAI,IAAI,CACZ,GAAMM,IAAG,CAAG1H,OAAO,CAACyH,IAAI,CAAE/G,SAAS,CAACL,MAAM,CAAC,CAE3C,IAAK,GAAIC,EAAC,CAAG,CAAC,CAAEA,CAAC,CAAGoH,GAAG,CAACrH,MAAM,CAAEC,CAAC,EAAE,CAAE,CACnC,GAAIoH,GAAG,CAACpH,CAAC,CAAC,GAAK,GAAG,CAAE,CAClB8G,IAAI,EAAI,GAAG,CAAG1G,SAAS,CAACJ,CAAC,CAAC,CAC5B,CACF,CACA8G,IAAI,EAAI,GAAG,CACb,CAAC,CAAC,CAEF,GAAMO,SAAQ,CAAG,GAAI7H,aAAY,CAACsH,IAAI,CAAE,CACtC/E,IAAI,CAAGA,IAAI,CACXuF,IAAI,CAAG,CAAC,CACRtG,MAAM,CAAG,CACX,CAAC,CAAC,CAEF,GAAMuG,SAAQ,CAAG,GAAIpI,MAAK,CAACgH,IAAI,CAACkB,QAAQ,CAAE,CACxC,GAAIlI,MAAK,CAACiH,iBAAiB,CAAE,CAAEnB,KAAK,CAAG,QAAS,CAAC,CAAE,CACpD,CAAC,CAEFsC,QAAQ,CAAC/F,QAAQ,CAAC+E,CAAC,CAAGL,QAAQ,CAAC1E,QAAQ,CAAC+E,CAAC,CACzCgB,QAAQ,CAAC/F,QAAQ,CAACgF,CAAC,CAAGN,QAAQ,CAAC1E,QAAQ,CAACgF,CAAC,CACzCe,QAAQ,CAAC/F,QAAQ,CAACiF,CAAC,CAAGP,QAAQ,CAAC1E,QAAQ,CAACiF,CAAC,CAAG,EAAE,CAE9Cc,QAAQ,CAACN,IAAI,CAAGH,IAAI,CAEpB9E,KAAK,CAACwF,IAAI,CAACD,QAAQ,CAAC,CACpB9G,KAAK,CAACoC,GAAG,CAAC0E,QAAQ,CAAC,CAErB,CAAC,CAAC,CAEF,MAAO,CAACrB,QAAQ,CAAGA,QAAQ,CAAEX,WAAW,CAAEA,WAAW,CAAC,CACxD,CAAC,CAED,GAAMJ,SAAQ,CAAG,GAAI7F,MAAK,CAAC,CAACqF,UAAU,CAAC4B,CAAC,CAAG3B,QAAQ,CAAC2B,CAAC,EAAI,CAAC,CAAE,CAAC5B,UAAU,CAAC6B,CAAC,CAAG5B,QAAQ,CAAC4B,CAAC,EAAI,CAAC,CAAE,CAAC7B,UAAU,CAAC8B,CAAC,CAAG7B,QAAQ,CAAC6B,CAAC,EAAI,CAAC,CAAC,CAC7H,MAAOvB,aAAY,CAACP,UAAU,CAAEC,QAAQ,CAAEO,QAAQ,CAAEN,UAAU,CAAEC,UAAU,CAAEG,KAAK,CAAC,CAAE;AAEtF,CAEA;AACA;AACA,QAASwC,WAAU,CAAChH,KAAK,CAAEN,IAAI,CAAEuE,EAAE,CAAEgD,aAAa,CAAEC,YAAY,CAAEC,cAAc,CAAEC,UAAU,CAAEC,WAAW,CAAE,CAEzG,GAAIpD,EAAE,GAAKnE,SAAS,CAAE,CACpBwH,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC,CAC5C,OACF,CAEA,GAAIC,MAAK,CAAGC,MAAM,CAACC,MAAM,CAAC,CAAEzD,EAAE,CAAEA,EAAE,CAAE0D,SAAS,CAAER,cAAc,CAAES,KAAK,CAAER,UAAW,CAAC,CAAC,CACnF,GAAIS,MAAK,CAAG,CAAEL,KAAK,CAAE,CAErB,GAAIM,MAAK,CAAG,CAAC,CAEb,MAAOD,KAAK,CAACvI,MAAM,CAAG,CAAC,CAAE,CACvB,EAAEwI,KAAK,CACP,GAAMC,aAAY,CAAGF,KAAK,CAACG,GAAG,EAAE,CAChC,GAAMC,QAAO,CAAGF,YAAY,CAAC9D,EAAE,CAC/B,GAAM0D,UAAS,CAAGI,YAAY,CAACJ,SAAS,CACxC,GAAMC,MAAK,CAAGG,YAAY,CAACH,KAAK,CAEhC,GAAIM,QAAO,CAAGxI,IAAI,CAACuI,OAAO,CAAC,CAC3B,GAAME,WAAU,CAAGD,OAAO,CAAC,MAAM,CAAC,CAAC5I,MAAM,CAEzC,GAAI8I,iBAAgB,CAAG,CAAC,CACxB,IAAK,GAAI7I,EAAC,CAAG,CAAC,CAAEA,CAAC,CAAG2I,OAAO,CAAC,MAAM,CAAC,CAAC5I,MAAM,CAAE,EAAEC,CAAC,CAAE,CAC/C6I,gBAAgB,EAAI1I,IAAI,CAACwI,OAAO,CAAC,MAAM,CAAC,CAAC3I,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAC3D,CAEA,GAAI8I,OAAM,CAAGrE,cAAc,CAACtE,IAAI,CAAEuI,OAAO,CAAEN,SAAS,CAAEC,KAAK,CAAEM,OAAO,CAACI,SAAS,CAAEF,gBAAgB,CAAE1I,IAAI,CAACuI,OAAO,CAAC,CAAC,MAAM,CAAC,CAAEZ,WAAW,CAAC,CACrI,GAAI5B,SAAQ,CAAG4C,MAAM,CAAC,UAAU,CAAC,CAEjC,GAAME,mBAAkB,CAAGhD,IAAI,CAACiD,IAAI,CAAC,CAACZ,KAAK,CAAC9B,CAAC,CAAG6B,SAAS,CAAC7B,CAAC,GAAK8B,KAAK,CAAC9B,CAAC,CAAG6B,SAAS,CAAC7B,CAAC,CAAC,CAAG,CAAC8B,KAAK,CAAC7B,CAAC,CAAG4B,SAAS,CAAC5B,CAAC,GACpF6B,KAAK,CAAC7B,CAAC,CAAG4B,SAAS,CAAC5B,CAAC,CAAC,CAAG,CAAC6B,KAAK,CAAC5B,CAAC,CAAG2B,SAAS,CAAC3B,CAAC,GAAK4B,KAAK,CAAC5B,CAAC,CAAG2B,SAAS,CAAC3B,CAAC,CAAC,CAAC,CAEtG,IAAKzG,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAG4I,UAAU,CAAE,EAAE5I,CAAC,CAAE,CAE/B,GAAI4I,UAAU,GAAK,CAAC,CAAE,CAElB,GAAIM,cAAa,CAAG,GAAI5J,MAAK,CAAC+I,KAAK,CAAC9B,CAAC,CAAE8B,KAAK,CAAC7B,CAAC,CAAE6B,KAAK,CAAC5B,CAAC,CAAC,CAAE;AAE1D,GAAI0C,OAAM,CAAG,CAAC,CACd,GAAIN,gBAAgB,GAAKF,OAAO,CAAC,MAAM,CAAC,CAAC5I,MAAM,EAAI8I,gBAAgB,GAAK,CAAC,EAAI1I,IAAI,CAACwI,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC5I,MAAM,GAAK,CAAC,CAAE,CAC1HmG,QAAQ,CAAG3F,SAAS,CAAE;AACtB2I,aAAa,CAAG,GAAI5J,MAAK,CAAC8I,SAAS,CAAC7B,CAAC,CAAE6B,SAAS,CAAC5B,CAAC,CAAE4B,SAAS,CAAC3B,CAAC,CAAC,CAAE;AACpE,CAEA,GAAM2C,UAAS,CAAG,GAAIjK,MAAK,CAACkG,OAAO,CAACgD,KAAK,CAAC9B,CAAC,CAAG6B,SAAS,CAAC7B,CAAC,CAAE8B,KAAK,CAAC7B,CAAC,CAAG4B,SAAS,CAAC5B,CAAC,CAAE6B,KAAK,CAAC5B,CAAC,CAAG2B,SAAS,CAAC3B,CAAC,CAAC,CACxG,GAAM4C,SAAQ,CAAG,GAAI/J,MAAK,CAAC8J,SAAS,CAAC7C,CAAC,CAAG8B,KAAK,CAAC9B,CAAC,CAAE6C,SAAS,CAAC5C,CAAC,CAAG6B,KAAK,CAAC7B,CAAC,CAAE4C,SAAS,CAAC3C,CAAC,CAAG4B,KAAK,CAAC5B,CAAC,CAAC,CAE/FwB,KAAK,CAAGC,MAAM,CAACC,MAAM,CAAC,CAAEzD,EAAE,CAAEiE,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAEP,SAAS,CAAEc,aAAa,CAAEb,KAAK,CAAEgB,QAAS,CAAC,CAAC,CAC5Ff,KAAK,CAACd,IAAI,CAACS,KAAK,CAAC,CAEnB,SACF,CAEA;AACA,GAAMqB,MAAK,CAAG,CAAC,CAAGtD,IAAI,CAACC,EAAE,CAAG2C,UAAU,CACtC,GAAMvI,GAAC,CAAGuI,UAAU,CAAG,CAAC,CAExB,GAAIW,GAAE,CAAGvJ,CAAC,CAAGsJ,KAAK,CAClB,GAAItJ,CAAC,EAAIK,EAAC,EAAIL,CAAC,CAAG,CAAC,EAAI,CAAC,CAAE,CACxBuJ,EAAE,CAAG,CAACvD,IAAI,CAACwD,IAAI,CAACnJ,EAAC,CAAC,CAAG,CAAC,CAAGL,CAAC,EAAIsJ,KAAK,CACrC,CAAC,IAAM,IAAItJ,CAAC,CAAGK,EAAC,EAAI,CAACuI,UAAU,CAAG,CAAC,CAAG5I,CAAC,EAAI,CAAC,EAAI,CAAC,CAAE,CACjDuJ,EAAE,CAAG,CAACX,UAAU,CAAG5I,CAAC,EAAIsJ,KAAK,CAC/B,CAAE,GAAItJ,CAAC,CAAGK,EAAC,EAAI,CAACuI,UAAU,CAAG,CAAC,CAAG5I,CAAC,EAAI,CAAC,EAAI,CAAC,CAAE,CAC5CuJ,EAAE,CAAG,CAACvD,IAAI,CAACwD,IAAI,CAACnJ,EAAC,CAAC,CAAG,CAAC,CAAGuI,UAAU,CAAG5I,CAAC,EAAIsJ,KAAK,CAClD,CAEA,GAAIG,UAAS,EAAIF,EAAE,CAAEV,gBAAgB,CAAG7C,IAAI,CAACC,EAAE,CAAC,CAEhD,GAAIyD,KAAI,CAAG1D,IAAI,CAAC2D,GAAG,CAACL,KAAK,CAAC,CAAGT,gBAAgB,CAC7C,GAAIe,KAAI,CAAG5D,IAAI,CAAC6D,GAAG,CAACP,KAAK,CAAC,CAAGT,gBAAgB,CAC7C;AACA;AACA,GAAMiB,oBAAmB,CAAG,GAAIxK,MAAK,CAAC+I,KAAK,CAAC9B,CAAC,CAAGmD,IAAI,CAAErB,KAAK,CAAC7B,CAAC,CAAE6B,KAAK,CAAC5B,CAAC,CAAGmD,IAAI,CAAC,CAE9E,GAAMG,OAAM,CAAG,GAAI5K,MAAK,CAACkG,OAAO,CAACyE,mBAAmB,CAACvD,CAAC,CAAG6B,SAAS,CAAC7B,CAAC,CAAEuD,mBAAmB,CAACtD,CAAC,CAAG4B,SAAS,CAAC5B,CAAC,CAAEsD,mBAAmB,CAACrD,CAAC,CAAG2B,SAAS,CAAC3B,CAAC,CAAC,CAACuD,SAAS,EAAE,CAC3J,GAAMC,SAAQ,CAAGjE,IAAI,CAACiD,IAAI,CAACN,OAAO,CAACI,SAAS,CAAGJ,OAAO,CAACI,SAAS,CAAGC,kBAAkB,CAAGA,kBAAkB,CAAC,CAC3GE,aAAa,CAAG,GAAI5J,MAAK,CACvB8I,SAAS,CAAC7B,CAAC,CAAG0D,QAAQ,CAAGF,MAAM,CAACxD,CAAC,CACjC6B,SAAS,CAAC5B,CAAC,CAAGyD,QAAQ,CAAGF,MAAM,CAACvD,CAAC,CACjC4B,SAAS,CAAC3B,CAAC,CAAGwD,QAAQ,CAAGF,MAAM,CAACtD,CAAC,CAClC,CAED,GAAMyD,cAAa,CAAG,CAAC,CAAI,CAAC,CAACxC,aAAa,CAAGC,YAAa,CAC1D+B,IAAI,CAAG1D,IAAI,CAAC2D,GAAG,CAACL,KAAK,CAAC,CAAGT,gBAAgB,CAAGqB,aAAa,CAAE;AAC3DN,IAAI,CAAG5D,IAAI,CAAC6D,GAAG,CAACP,KAAK,CAAC,CAAGT,gBAAgB,CAAGqB,aAAa,CAAE;AAC3D,GAAMC,YAAW,CAAG,GAAI7K,MAAK,CAAC4J,aAAa,CAAC3C,CAAC,CAAGmD,IAAI,CAAER,aAAa,CAAC1C,CAAC,CAAGhG,eAAe,CAAE0I,aAAa,CAACzC,CAAC,CAAGmD,IAAI,CAAC,CAEhH3B,KAAK,CAAGC,MAAM,CAACC,MAAM,CAAC,CAAEzD,EAAE,CAAEiE,OAAO,CAAC,MAAM,CAAC,CAAC3I,CAAC,CAAC,CAAEoI,SAAS,CAAEc,aAAa,CAAEb,KAAK,CAAE8B,WAAY,CAAC,CAAC,CAC/F7B,KAAK,CAACd,IAAI,CAACS,KAAK,CAAC,CACnB,CAEA,GAAI/B,QAAQ,GAAK3F,SAAS,CAAE,CAC1BE,KAAK,CAACoC,GAAG,CAACqD,QAAQ,CAAC,CACrB,CAEF,CACF,CAEA,QAASkE,iBAAgB,CAACjK,IAAI,CAAEkK,GAAG,CAAE,CAEnC,GAAI/B,MAAK,CAAG,CAAE+B,GAAG,CAAE,CACnB,GAAIC,SAAQ,CAAG,CAAC,CAAC,CACjB,GAAIC,OAAM,CAAG,CAAC,CAAC,CAEf,MAAOjC,KAAK,CAACvI,MAAM,CAAG,CAAC,CAAE,CACvB,GAAM2I,QAAO,CAAGJ,KAAK,CAACG,GAAG,EAAE,CAC3B8B,MAAM,CAAC7B,OAAO,CAAC,CAAG,GAAG,CACrBJ,KAAK,CAACd,IAAI,CAACkB,OAAO,CAAC,CAEnB,GAAI4B,QAAQ,CAAC5B,OAAO,CAAC,GAAKnI,SAAS,CAAE,CACnC+J,QAAQ,CAAC5B,OAAO,CAAC,CAAG,CAAC,CACvB,CAEA,GAAI8B,YAAW,CAAG,CAAC,CACnB,GAAMC,WAAU,CAAGtK,IAAI,CAACuI,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC3I,MAAM,CAC/C,IAAK,GAAIC,EAAC,CAAG,CAAC,CAAEA,CAAC,CAAGyK,UAAU,CAAE,EAAEzK,CAAC,CAAE,CACnC,GAAIuK,MAAM,CAACpK,IAAI,CAACuI,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC1I,CAAC,CAAC,CAAC,GAAKO,SAAS,CAAE,CAClD+H,KAAK,CAACd,IAAI,CAACrH,IAAI,CAACuI,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC1I,CAAC,CAAC,CAAC,CACtC,CAEA,GAAIuK,MAAM,CAACpK,IAAI,CAACuI,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC1I,CAAC,CAAC,CAAC,GAAK,GAAG,CAAE,CAC5CwK,WAAW,EAAI,CAAC,CAChBF,QAAQ,CAAC5B,OAAO,CAAC,CAAG1C,IAAI,CAAC9B,GAAG,CAACoG,QAAQ,CAAEnK,IAAI,CAACuI,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC1I,CAAC,CAAC,CAAE,CAAEsK,QAAQ,CAAC5B,OAAO,CAAC,CAAC,CACvF,CACF,CAEA,GAAI8B,WAAW,GAAKC,UAAU,CAAE,CAC9BF,MAAM,CAAC7B,OAAO,CAAC,CAAG,GAAG,CACrBJ,KAAK,CAACG,GAAG,EAAE,CAEX,GAAIgC,UAAU,CAAG,CAAC,CAAE,CAClBH,QAAQ,CAAC5B,OAAO,CAAC,EAAI,CAAC,CACxB,CACF,CACF,CAEA,MAAO4B,SAAQ,CAACD,GAAG,CAAC,CACtB,CAEA,QAAS1G,gBAAe,CAAClD,KAAK,CAAEN,IAAI,CAAE,CAEpC,GAAIuK,iBAAgB,CAAGnK,SAAS,CAChC,GAAIoK,WAAU,CAAG,CAAC,CAClB,GAAI7C,YAAW,CAAG,CAAC,CACnBI,MAAM,CAAC0C,OAAO,CAACzK,IAAI,CAAC,CAAC0G,OAAO,CAAC,cAAW,kCAATgE,CAAC,UAACC,CAAC,UAChC,GAAIA,CAAC,CAAC,MAAM,CAAC,GAAK,CAAC,CAAE,CACnBJ,gBAAgB,CAAGG,CAAC,CACtB,CACA/C,WAAW,CAAG9B,IAAI,CAAC9B,GAAG,CAAC4G,CAAC,CAAC,MAAM,CAAC,CAAEhD,WAAW,CAAC,CAC9C6C,UAAU,CAAG3E,IAAI,CAAC9B,GAAG,CAACyG,UAAU,CAAEG,CAAC,CAAC/B,SAAS,CAAC,CAChD,CAAC,CAAC,CAEF,GAAMrB,cAAa,CAAG0C,gBAAgB,CAACjK,IAAI,CAAEuK,gBAAgB,CAAC,CAE9D,GAAMK,YAAW,CAAGjD,WAAW,CAAGtH,eAAe,CAAG,CAAC,CAAGA,eAAe,CACvE,GAAMwK,gBAAe,CAAG,GAAI1L,MAAK,CAAC,CAAC,CAAEyL,WAAW,CAAE,CAAC,CAAC,CACpD,GAAME,cAAa,CAAG,GAAI3L,MAAK,CAAC,CAAC,CAAEyL,WAAW,CAAGvK,eAAe,CAAE,CAAC,CAAC,CAEpEiH,UAAU,CAAChH,KAAK,CAAEN,IAAI,CAAEuK,gBAAgB,CAAEhD,aAAa,CAAE,CAAC,CAAEsD,eAAe,CAAEC,aAAa,CAAEnD,WAAW,CAAC,CAC1G,CACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}