{"ast":null,"code":"import _slicedToArray from\"/home/xkruzel/Desktop/todo/reactapp/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import*as THREE from\"three\";import{OrbitControls}from\"three/examples/jsm/controls/OrbitControls\";import*as dat from\"dat.gui\";import{Point,createPoint}from\"./Point\";import{Interaction}from\"three.interaction-fixed\";import{dec2bin,rad2degrees}from\"./utils\";export function init3Dgraphics(canvas,div,gui_div,data,nodes_ids,h,w){if(data===undefined){return false;}var CYLINDER_HEIGHT=8;var NEUTRAL_COLOR=\"hsl(255, 0%, 46%)\";var number_of_nodes=Object.keys(nodes_ids).length;var scene=new THREE.Scene();//scene.background = new THREE.Color( 0xd3d3d3 );\nscene.background=new THREE.Color(0xf8f2ea);var camera=new THREE.PerspectiveCamera(75,canvas.width/canvas.height,0.1,1000);var renderer=new THREE.WebGLRenderer({canvas:canvas});renderer.setPixelRatio(window.devicePixelRatio);renderer.setSize(canvas.width,canvas.height);// full size\ncamera.position.setZ(30);// for better perspective\nrenderer.sortObjects=false;renderer.render(scene,camera);new Interaction(renderer,scene,camera);// For showing text information about clusters\nvar texts=[];var cylinders=[];//const axesHelper = new THREE.AxesHelper(100);\n//scene.add(axesHelper);\nvar gui=new dat.GUI({autoPlace:false});gui_div.append(gui.domElement);var parameters_colors=[{check:true},// color for back edges \n{check:false},// color for ranks\n{check:false}// color for None colors\n];var parameters_wireframe=[{check:false}];var pointLight=new THREE.PointLight(0x818085);pointLight.position.set(20,20,20);var ambientLight=new THREE.AmbientLight(0xffffff);ambientLight.position.set(20,20,20);scene.add(pointLight,ambientLight);//const lightHelper = new THREE.PointLightHelper(pointLight);  // shows position of lighsource\n//const gridHelper = new THREE.GridHelper(30, 20);\n//scene.add(lightHelper, gridHelper);\nwindow.addEventListener(\"resize\",function(){camera.aspect=canvas.width/canvas.height;camera.updateProjectionMatrix();renderer.setSize(canvas.width);});var controls=new OrbitControls(camera,renderer.domElement);processClusters(scene,data);data=null;function animate(){setTimeout(function(){requestAnimationFrame(animate);},1000/5);controls.update();renderer.render(scene,camera);pointLight.position.copy(camera.position);}renderer.setAnimationLoop(animate);window.addEventListener(\"resize\",function(){camera.aspect=canvas.width/canvas.width;camera.updateProjectionMatrix();renderer.setSize(canvas.width,canvas.width);});function calcColorBacks(cluster){if(cluster[\"Backs\"].length>0){return\"hsl(259, 20%, 30%)\";}return NEUTRAL_COLOR;}function calcColorRank(max,val){var min=0;var minHue=240,maxHue=0;var curPercent=(val-min)/(max-min);var colString=\"hsl(\"+(curPercent*(maxHue-minHue)+minHue)+\",25%,40%)\";return colString;}function resetOpacity(){cylinders.forEach(function(cylinder){var newMaterial=cylinder.material.clone();newMaterial.transparent=false;newMaterial.opacity=1;cylinder.material=newMaterial;});}function crossProduct(a,b){return new THREE.Vector3(a.y*b.z-a.z*b.y,a.z*b.x-a.x*b.z,a.x*b.y-a.y*b.x);}function createCylinder(data,id,startPoint,endPoint,currRadius,nextRadius,rank,rank_max){var isAtractor=data[id][\"Color\"]!==\"\";var colorBacks=new THREE.Color(isAtractor?data[id][\"Color\"]:calcColorBacks(data[id]));var colorRank=new THREE.Color(isAtractor?data[id][\"Color\"]:calcColorRank(rank_max,rank));var cylinderMesh=function cylinderMesh(startPoint,endPoint,midPoint,currRadius,nextRadius,colorBacks,colorRank,isAtractor){/* edge from X to Y */var direction=new THREE.Vector3().subVectors(endPoint,startPoint);var orientation=new THREE.Matrix4();/* THREE.Object3D().up (=Y) default orientation for all objects */orientation.lookAt(startPoint,endPoint,new THREE.Object3D().up);/* rotation around axis X by -90 degrees\n       * matches the default orientation Y\n       * with the orientation of looking Z */var mat=new THREE.Matrix4();mat.set(1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,1);orientation.multiply(mat);/* cylinder: radiusAtTop, radiusAtBottom, \n          height, radiusSegments, heightSegments */var RADIAL_SEGMENTS=8;var HEIGHT_SEGMENTS=1;var edgeGeometry=new THREE.CylinderGeometry(currRadius,nextRadius,CYLINDER_HEIGHT,RADIAL_SEGMENTS,HEIGHT_SEGMENTS);var material=new THREE.MeshPhongMaterial({color:colorBacks,flatShading:true});var cylinder=new THREE.Mesh(edgeGeometry,material);cylinder.applyMatrix4(orientation);cylinder.position.set(midPoint.x,midPoint.y,midPoint.z);cylinder.cursor=\"pointer\";cylinder.userData.colorBacks=colorBacks;cylinder.userData.colorRank=colorRank;cylinder.userData.isAtractor=isAtractor;cylinder.on(\"click\",function(ev){resetOpacity();var newMaterial=cylinder.material.clone();newMaterial.transparent=true;newMaterial.opacity=0.5;cylinder.material=newMaterial;texts.forEach(function(text){var selectedObject=scene.getObjectByName(text.name);scene.remove(selectedObject);});var text=\"\";data[id][\"Nodes\"].forEach(function(elem){if(text!==\"\"){text+=\",\";}text+=\" (\";var bin=dec2bin(elem,number_of_nodes);for(var i=0;i<bin.length;i++){if(bin[i]===\"1\"){text+=\" \"+nodes_ids[i];}}text+=\" )\";});div.innerHTML=\"<b>Rank</b>: \"+data[id][\"Rank\"]+\"<br><b>Nodes</b>: \"+text+(cylinder.userData.isAtractor?\"\\n<b>Atraktor</b>\":\"\");});return cylinder;};var midPoint=new Point((startPoint.x+endPoint.x)/2,(startPoint.y+endPoint.y)/2,(startPoint.z+endPoint.z)/2);return cylinderMesh(startPoint,endPoint,midPoint,currRadius,nextRadius,colorBacks,colorRank,isAtractor);//new THREE.Mesh(geometryCyl, material);\n}function getChildsChilds(data,cluster){var childsChildCount=0;for(var i=0;i<cluster[\"Desc\"].length;++i){childsChildCount+=data[cluster[\"Desc\"][i]].NodeCount;}if(cluster[\"Separate\"]!==undefined){childsChildCount=data[cluster[\"Separate\"]].NodeCount;}return childsChildCount;}function createLine(p1,p2,color){var material=new THREE.LineBasicMaterial({color:color});var geometry=new THREE.BufferGeometry().setFromPoints([p1,p2]);var line=new THREE.Line(geometry,material);scene.add(line);}function createCoordinatesForSingleSon(point,prevPoint,id){var dirVector=new THREE.Vector3(point.x-prevPoint.x,point.y-prevPoint.y,point.z-prevPoint.z);var newStartPoint=new Point(point.x,point.y,point.z);// to make copy\nvar newPoint=new Point(dirVector.x+point.x,dirVector.y+point.y,dirVector.z+point.z);return Object.freeze({id:id,//cluster[\"Desc\"][0],\nprevPoint:newStartPoint,point:newPoint});}// prevPoint, point - upper and downer middle points of cylinder\n// dirPoint - point to which direction of cylinder (dir vector) should go\nfunction clustering(scene,data,id,max_branching,prevPointFirst,pointFirst,biggestRank){if(id===undefined){console.log(\"Id is undefined in clustering\");return;}var firstId=id;var tuple=Object.freeze({id:id,prevPoint:prevPointFirst,point:pointFirst});var stack=[tuple];// to change direction of descendant for situations when cluster has \"Separate\" and only 1 other descendant\n// according this the position is swiped from left to right - alternating\nvar last_dir_right=false;while(stack.length>0){var stackElement=stack.pop();var current=stackElement.id;var prevPoint=stackElement.prevPoint;var point=stackElement.point;var cluster=data[current];var childCount=cluster[\"Desc\"].length;console.log(current);var childsChildCount=getChildsChilds(data,cluster);var upperRadius=cluster.NodeCount;var lowerRadius=childCount===1?childsChildCount:childsChildCount+cluster[\"Desc\"].length+(cluster[\"Separate\"]!==undefined?1:0);var cylinder=createCylinder(data,current,prevPoint,point,upperRadius,lowerRadius,data[current][\"Rank\"],biggestRank);cylinders.push(cylinder);scene.add(cylinder);var dirVector=new THREE.Vector3(point.x-prevPoint.x,point.y-prevPoint.y,point.z-prevPoint.z);if(cluster[\"Separate\"]!==undefined){stack.push(createCoordinatesForSingleSon(point,prevPoint,cluster[\"Separate\"]));}for(var i=0;i<childCount;++i){if(childCount===1&&cluster[\"Separate\"]===undefined){stack.push(createCoordinatesForSingleSon(point,prevPoint,cluster[\"Desc\"][0]));continue;}var uVector=new THREE.Vector3(-1*dirVector.y,dirVector.x,0).normalize();var adota=uVector.dot(uVector);var crossProductVec=crossProduct(dirVector,uVector);var vVector=crossProductVec.divideScalar(adota).normalize();// COMPUTE NEW COORDINATES around circle\nvar theta=2*Math.PI/childCount*i;if(childCount===1){if(last_dir_right===true){theta=Math.PI;// not 0 but 180\n}last_dir_right=!last_dir_right;}var sin=Math.sin(theta);var cos=Math.cos(theta);var u=uVector.multiplyScalar(cos*lowerRadius);var v=vVector.multiplyScalar(sin*lowerRadius);var newStartPointHelper=u.add(v).add(new THREE.Vector3(point.x,point.y,point.z));// Vector which will be prolonged from prevPoint to newStartPointer -> to create newEndPoint\nvar vector=new THREE.Vector3(newStartPointHelper.x-prevPoint.x,newStartPointHelper.y-prevPoint.y,newStartPointHelper.z-prevPoint.z).normalize();var newEndPoint=new Point(newStartPointHelper.x+CYLINDER_HEIGHT*vector.x,newStartPointHelper.y+CYLINDER_HEIGHT*vector.y,newStartPointHelper.z+CYLINDER_HEIGHT*vector.z);tuple=Object.freeze({id:cluster[\"Desc\"][i],prevPoint:newStartPointHelper,point:newEndPoint});stack.push(tuple);}}}function compMaxBranching(data,key){var stack=[key];var maximums={};var colors={};while(stack.length>0){var current=stack.pop();colors[current]=\"G\";stack.push(current);if(maximums[current]===undefined){maximums[current]=0;}var count_black=0;var desc_count=data[current][\"Desc\"].length;for(var i=0;i<desc_count;++i){if(colors[data[current][\"Desc\"][i]]===undefined){stack.push(data[current][\"Desc\"][i]);}if(colors[data[current][\"Desc\"][i]]===\"B\"){count_black+=1;maximums[current]=Math.max(maximums[data[current][\"Desc\"][i]],maximums[current]);}}if(count_black===desc_count){colors[current]=\"B\";stack.pop();if(desc_count>1){maximums[current]+=1;}}}return maximums[key];}function processClusters(scene,data){var root_cluster_key=undefined;var biggestRank=0;Object.entries(data).forEach(function(_ref){var _ref2=_slicedToArray(_ref,2),k=_ref2[0],v=_ref2[1];if(v[\"Rank\"]===0){root_cluster_key=k;}biggestRank=Math.max(v[\"Rank\"],biggestRank);});var max_branching=compMaxBranching(data,root_cluster_key);var firstHeight=biggestRank*CYLINDER_HEIGHT/2+CYLINDER_HEIGHT;var firstStartPoint=new Point(0,firstHeight,0);var firstEndPoint=new Point(0,firstHeight-CYLINDER_HEIGHT,0);clustering(scene,data,root_cluster_key,max_branching,firstStartPoint,firstEndPoint,biggestRank);var folder=gui.addFolder(\"Colors\");folder.add(parameters_colors[0],'check').name('Back edges').listen().onChange(function(e){setChecked(0);if(e){cylinders.forEach(function(cylinder){if(!cylinder.userData.isAtractor){cylinder.material.color=cylinder.userData.colorBacks;}});}});folder.add(parameters_colors[1],'check').name('Ranks').listen().onChange(function(e){setChecked(1);if(e){cylinders.forEach(function(cylinder){if(!cylinder.userData.isAtractor){cylinder.material.color=cylinder.userData.colorRank;}});}});folder.add(parameters_colors[2],'check').name('None').listen().onChange(function(e){setChecked(2);if(e){cylinders.forEach(function(cylinder){if(!cylinder.userData.isAtractor){cylinder.material.color=new THREE.Color(NEUTRAL_COLOR);}});}});var folder_wireframe=gui.addFolder(\"Wireframe\");folder_wireframe.add(parameters_wireframe[0],'check').name('Wireframe').listen().onChange(function(e){cylinders.forEach(function(cylinder){cylinder.material.wireframe=e;});});function setChecked(prop){for(var param in parameters_colors){parameters_colors[param].check=false;}parameters_colors[prop].check=true;}}}","map":{"version":3,"names":["THREE","OrbitControls","dat","Point","createPoint","Interaction","dec2bin","rad2degrees","init3Dgraphics","canvas","div","gui_div","data","nodes_ids","h","w","undefined","CYLINDER_HEIGHT","NEUTRAL_COLOR","number_of_nodes","Object","keys","length","scene","Scene","background","Color","camera","PerspectiveCamera","width","height","renderer","WebGLRenderer","setPixelRatio","window","devicePixelRatio","setSize","position","setZ","sortObjects","render","texts","cylinders","gui","GUI","autoPlace","append","domElement","parameters_colors","check","parameters_wireframe","pointLight","PointLight","set","ambientLight","AmbientLight","add","addEventListener","aspect","updateProjectionMatrix","controls","processClusters","animate","setTimeout","requestAnimationFrame","update","copy","setAnimationLoop","calcColorBacks","cluster","calcColorRank","max","val","min","minHue","maxHue","curPercent","colString","resetOpacity","forEach","cylinder","newMaterial","material","clone","transparent","opacity","crossProduct","a","b","Vector3","y","z","x","createCylinder","id","startPoint","endPoint","currRadius","nextRadius","rank","rank_max","isAtractor","colorBacks","colorRank","cylinderMesh","midPoint","direction","subVectors","orientation","Matrix4","lookAt","Object3D","up","mat","multiply","RADIAL_SEGMENTS","HEIGHT_SEGMENTS","edgeGeometry","CylinderGeometry","MeshPhongMaterial","color","flatShading","Mesh","applyMatrix4","cursor","userData","on","ev","text","selectedObject","getObjectByName","name","remove","elem","bin","i","innerHTML","getChildsChilds","childsChildCount","NodeCount","createLine","p1","p2","LineBasicMaterial","geometry","BufferGeometry","setFromPoints","line","Line","createCoordinatesForSingleSon","point","prevPoint","dirVector","newStartPoint","newPoint","freeze","clustering","max_branching","prevPointFirst","pointFirst","biggestRank","console","log","firstId","tuple","stack","last_dir_right","stackElement","pop","current","childCount","upperRadius","lowerRadius","push","uVector","normalize","adota","dot","crossProductVec","vVector","divideScalar","theta","Math","PI","sin","cos","u","multiplyScalar","v","newStartPointHelper","vector","newEndPoint","compMaxBranching","key","maximums","colors","count_black","desc_count","root_cluster_key","entries","k","firstHeight","firstStartPoint","firstEndPoint","folder","addFolder","listen","onChange","e","setChecked","folder_wireframe","wireframe","prop","param"],"sources":["/home/xkruzel/Desktop/todo/reactapp/src/rendering.js"],"sourcesContent":["import * as THREE from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport * as dat from \"dat.gui\";\nimport { Point, createPoint } from \"./Point\";\nimport { Interaction } from \"three.interaction-fixed\";\nimport { dec2bin, rad2degrees } from \"./utils\";\n\n\n\nexport function init3Dgraphics(canvas, div, gui_div, data, nodes_ids, h, w) {\n  if (data === undefined) {\n    return false;\n  }\n\n  const CYLINDER_HEIGHT = 8;\n  const NEUTRAL_COLOR = \"hsl(255, 0%, 46%)\";\n  const number_of_nodes = Object.keys(nodes_ids).length;\n\n  const scene = new THREE.Scene();\n  //scene.background = new THREE.Color( 0xd3d3d3 );\n  scene.background = new THREE.Color(0xf8f2ea);\n  const camera = new THREE.PerspectiveCamera(\n    75,\n    canvas.width / canvas.height,\n    0.1,\n    1000\n  );\n  const renderer = new THREE.WebGLRenderer({\n    canvas: canvas,\n  });\n\n  renderer.setPixelRatio(window.devicePixelRatio);\n  renderer.setSize(canvas.width, canvas.height); // full size\n  camera.position.setZ(30); // for better perspective\n  renderer.sortObjects = false;\n  renderer.render(scene, camera);\n\n  new Interaction(renderer, scene, camera);\n\n  // For showing text information about clusters\n  var texts = [];\n  var cylinders = [];\n\n  //const axesHelper = new THREE.AxesHelper(100);\n  //scene.add(axesHelper);\n\n  \n  const gui = new dat.GUI( { autoPlace: false } );\n  gui_div.append(gui.domElement);\n  var parameters_colors = [\n    {check: true }, // color for back edges \n    {check: false }, // color for ranks\n    {check: false }, // color for None colors\n  ]\n\n  var parameters_wireframe = [\n    {check: false }, \n  ]\n\n  const pointLight = new THREE.PointLight(0x818085);\n  pointLight.position.set(20, 20, 20);\n\n  const ambientLight = new THREE.AmbientLight(0xffffff);\n  ambientLight.position.set(20, 20, 20);\n\n  scene.add(pointLight, ambientLight);\n\n  //const lightHelper = new THREE.PointLightHelper(pointLight);  // shows position of lighsource\n  //const gridHelper = new THREE.GridHelper(30, 20);\n\n  //scene.add(lightHelper, gridHelper);\n\n  window.addEventListener(\"resize\", function () {\n    camera.aspect = canvas.width / canvas.height;\n    camera.updateProjectionMatrix();\n    renderer.setSize(canvas.width);\n  });\n\n  const controls = new OrbitControls(camera, renderer.domElement);\n\n  processClusters(scene, data);\n  data = null;\n\n  function animate() {\n    setTimeout(function () {\n      requestAnimationFrame(animate);\n    }, 1000 / 5);\n\n    controls.update();\n    renderer.render(scene, camera);\n    pointLight.position.copy(camera.position);\n  }\n\n  renderer.setAnimationLoop(animate);\n\n  window.addEventListener(\"resize\", function () {\n    camera.aspect = canvas.width / canvas.width;\n    camera.updateProjectionMatrix();\n    renderer.setSize(canvas.width, canvas.width);\n  });\n\n\nfunction calcColorBacks(cluster) {\n  if (cluster[\"Backs\"].length > 0) {\n    return \"hsl(259, 20%, 30%)\";\n  }\n\n  return NEUTRAL_COLOR;\n}\n\n  function calcColorRank(max, val) {\n\n    const min = 0\n    var minHue = 240, maxHue=0;\n    var curPercent = (val - min) / (max-min);\n    var colString = \"hsl(\" + ((curPercent * (maxHue-minHue) ) + minHue) + \",25%,40%)\";\n    return colString;\n  }\n\n  function resetOpacity() {\n    cylinders.forEach(function (cylinder) {\n      const newMaterial = cylinder.material.clone();\n      newMaterial.transparent = false;\n      newMaterial.opacity = 1;\n      cylinder.material = newMaterial;\n    });\n  }\n\n  function crossProduct(a, b) {\n    return new THREE.Vector3(\n      a.y * b.z - a.z * b.y,\n      a.z * b.x - a.x * b.z,\n      a.x * b.y - a.y * b.x\n    );\n  }\n\n  function createCylinder(\n    data,\n    id,\n    startPoint,\n    endPoint,\n    currRadius,\n    nextRadius,\n    rank,\n    rank_max\n  ) {\n\n    const isAtractor =  data[id][\"Color\"] !== \"\";\n\n    const colorBacks = new THREE.Color(\n      isAtractor ? data[id][\"Color\"] : calcColorBacks(data[id])\n    );\n\n    const colorRank = new THREE.Color(\n      isAtractor ? data[id][\"Color\"] : calcColorRank(rank_max, rank)\n    );\n\n\n    var cylinderMesh = function (\n      startPoint,\n      endPoint,\n      midPoint,\n      currRadius,\n      nextRadius,\n      colorBacks,\n      colorRank,\n      isAtractor\n    ) {\n      /* edge from X to Y */\n      const direction = new THREE.Vector3().subVectors(endPoint, startPoint);\n\n      const orientation = new THREE.Matrix4();\n      /* THREE.Object3D().up (=Y) default orientation for all objects */\n      orientation.lookAt(startPoint, endPoint, new THREE.Object3D().up);\n\n      /* rotation around axis X by -90 degrees\n       * matches the default orientation Y\n       * with the orientation of looking Z */\n      const mat = new THREE.Matrix4();\n      mat.set(1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1);\n      orientation.multiply(mat);\n\n      /* cylinder: radiusAtTop, radiusAtBottom, \n          height, radiusSegments, heightSegments */\n      const RADIAL_SEGMENTS = 8;\n      const HEIGHT_SEGMENTS = 1;\n      const edgeGeometry = new THREE.CylinderGeometry(\n        currRadius,\n        nextRadius,\n        CYLINDER_HEIGHT,\n        RADIAL_SEGMENTS,\n        HEIGHT_SEGMENTS\n      );\n\n      const material = new THREE.MeshPhongMaterial({ color: colorBacks, flatShading: true });\n      const cylinder = new THREE.Mesh(\n        edgeGeometry,\n        material\n      );\n\n      cylinder.applyMatrix4(orientation);\n      cylinder.position.set(midPoint.x, midPoint.y, midPoint.z);\n      cylinder.cursor = \"pointer\";\n\n      cylinder.userData.colorBacks = colorBacks;\n      cylinder.userData.colorRank  = colorRank;\n      cylinder.userData.isAtractor = isAtractor;\n\n      cylinder.on(\"click\", function (ev) {\n        resetOpacity();\n        const newMaterial = cylinder.material.clone();\n        newMaterial.transparent = true;\n        newMaterial.opacity = 0.5;\n        cylinder.material = newMaterial;\n\n        texts.forEach(function (text) {\n          var selectedObject = scene.getObjectByName(text.name);\n          scene.remove(selectedObject);\n        });\n\n        var text = \"\";\n        data[id][\"Nodes\"].forEach(function (elem) {\n          if (text !== \"\") {\n            text += \",\";\n          }\n          text += \" (\";\n          const bin = dec2bin(elem, number_of_nodes);\n\n          for (let i = 0; i < bin.length; i++) {\n            if (bin[i] === \"1\") {\n              text += \" \" + nodes_ids[i];\n            }\n          }\n          text += \" )\";\n        });\n\n        div.innerHTML =\n          \"<b>Rank</b>: \" + data[id][\"Rank\"] + \"<br><b>Nodes</b>: \" + text + (cylinder.userData.isAtractor ? \"\\n<b>Atraktor</b>\" : \"\");\n      });\n\n      return cylinder;\n    };\n\n    const midPoint = new Point(\n      (startPoint.x + endPoint.x) / 2,\n      (startPoint.y + endPoint.y) / 2,\n      (startPoint.z + endPoint.z) / 2\n    );\n    return cylinderMesh(\n      startPoint,\n      endPoint,\n      midPoint,\n      currRadius,\n      nextRadius,\n      colorBacks,\n      colorRank,\n      isAtractor\n    ); //new THREE.Mesh(geometryCyl, material);\n  }\n\n  function getChildsChilds(data, cluster) {\n    var childsChildCount = 0;\n    for (var i = 0; i < cluster[\"Desc\"].length; ++i) {\n      childsChildCount += data[cluster[\"Desc\"][i]].NodeCount;\n    }\n\n    if (cluster[\"Separate\"] !== undefined) {\n      childsChildCount = data[cluster[\"Separate\"]].NodeCount;\n    }\n\n    return childsChildCount;\n  }\n\n  function createLine(p1, p2, color) {\n    const material = new THREE.LineBasicMaterial( { color: color } );\n    const geometry = new THREE.BufferGeometry().setFromPoints( [p1, p2] );\n    const line = new THREE.Line( geometry, material );\n    scene.add( line );\n  }\n\n  function createCoordinatesForSingleSon(point, prevPoint, id) {\n    const dirVector = new THREE.Vector3(\n      point.x - prevPoint.x,\n      point.y - prevPoint.y,\n      point.z - prevPoint.z\n    );\n\n    var newStartPoint = new Point(point.x, point.y, point.z); // to make copy\n    const newPoint = new Point(\n      dirVector.x + point.x,\n      dirVector.y + point.y,\n      dirVector.z + point.z\n    );\n\n    return Object.freeze({\n      id: id, //cluster[\"Desc\"][0],\n      prevPoint: newStartPoint,\n      point: newPoint,\n    });\n  }\n\n  // prevPoint, point - upper and downer middle points of cylinder\n  // dirPoint - point to which direction of cylinder (dir vector) should go\n  function clustering(\n    scene,\n    data,\n    id,\n    max_branching,\n    prevPointFirst,\n    pointFirst,\n    biggestRank\n  ) {\n    if (id === undefined) {\n      console.log(\"Id is undefined in clustering\");\n      return;\n    }\n    const firstId = id;\n\n    var tuple = Object.freeze({\n      id: id,\n      prevPoint: prevPointFirst,\n      point: pointFirst,\n    });\n    var stack = [tuple];\n\n  // to change direction of descendant for situations when cluster has \"Separate\" and only 1 other descendant\n  // according this the position is swiped from left to right - alternating\n    var last_dir_right = false;\n\n    while (stack.length > 0) {\n      const stackElement = stack.pop();\n      const current = stackElement.id;\n      const prevPoint = stackElement.prevPoint;\n      const point = stackElement.point;\n\n      var cluster = data[current];\n      const childCount = cluster[\"Desc\"].length;\n\n      console.log(current);\n\n      var childsChildCount = getChildsChilds(data, cluster);\n\n      const upperRadius = cluster.NodeCount;\n      const lowerRadius =\n        childCount === 1\n          ? childsChildCount\n          : childsChildCount + cluster[\"Desc\"].length + (cluster[\"Separate\"] !== undefined ? 1 : 0);\n\n      var cylinder = createCylinder(\n        data,\n        current,\n        prevPoint,\n        point,\n        upperRadius,\n        lowerRadius,\n        data[current][\"Rank\"],\n        biggestRank\n      );\n\n      cylinders.push(cylinder);\n      scene.add(cylinder);\n\n      var dirVector = new THREE.Vector3(\n        point.x - prevPoint.x,\n        point.y - prevPoint.y,\n        point.z - prevPoint.z\n      );\n\n      if (cluster[\"Separate\"] !== undefined) {\n          stack.push( createCoordinatesForSingleSon(point, prevPoint, cluster[\"Separate\"]) );\n      }\n\n      for (var i = 0; i < childCount; ++i) {\n\n        if (childCount === 1 && cluster[\"Separate\"] === undefined) {\n          stack.push( createCoordinatesForSingleSon(point, prevPoint, cluster[\"Desc\"][0]) );\n          continue;\n        }\n\n        const uVector = new THREE.Vector3((-1) * dirVector.y, dirVector.x, 0).normalize();\n\n        const adota = uVector.dot(uVector);\n        const crossProductVec = crossProduct(dirVector, uVector);\n        const vVector = crossProductVec.divideScalar(adota).normalize();\n\n        // COMPUTE NEW COORDINATES around circle\n        var theta = (2*Math.PI / childCount) * i;\n        if (childCount === 1) {\n          if (last_dir_right === true) {\n            theta = Math.PI; // not 0 but 180\n          }\n          last_dir_right = !last_dir_right;\n        }\n\n        const sin = Math.sin(theta);\n        const cos = Math.cos(theta);\n\n        const u = uVector.multiplyScalar(cos * lowerRadius);\n        const v = vVector.multiplyScalar(sin * lowerRadius);\n\n        var newStartPointHelper = u\n          .add(v)\n          .add(new THREE.Vector3(point.x, point.y, point.z));\n\n\n        // Vector which will be prolonged from prevPoint to newStartPointer -> to create newEndPoint\n        const vector = new THREE.Vector3(\n          newStartPointHelper.x - prevPoint.x,\n          newStartPointHelper.y - prevPoint.y,\n          newStartPointHelper.z - prevPoint.z\n        ).normalize();\n\n        const newEndPoint = new Point(\n          newStartPointHelper.x + CYLINDER_HEIGHT * vector.x,\n          newStartPointHelper.y + CYLINDER_HEIGHT * vector.y,\n          newStartPointHelper.z + CYLINDER_HEIGHT * vector.z\n        );\n\n        tuple = Object.freeze({\n          id: cluster[\"Desc\"][i],\n          prevPoint: newStartPointHelper,\n          point: newEndPoint,\n        });\n        stack.push(tuple);\n      }\n    }\n  }\n\n  function compMaxBranching(data, key) {\n    let stack = [key];\n    var maximums = {};\n    var colors = {};\n\n    while (stack.length > 0) {\n      const current = stack.pop();\n      colors[current] = \"G\";\n      stack.push(current);\n\n      if (maximums[current] === undefined) {\n        maximums[current] = 0;\n      }\n\n      var count_black = 0;\n      const desc_count = data[current][\"Desc\"].length;\n      for (var i = 0; i < desc_count; ++i) {\n        if (colors[data[current][\"Desc\"][i]] === undefined) {\n          stack.push(data[current][\"Desc\"][i]);\n        }\n\n        if (colors[data[current][\"Desc\"][i]] === \"B\") {\n          count_black += 1;\n          maximums[current] = Math.max(\n            maximums[data[current][\"Desc\"][i]],\n            maximums[current]\n          );\n        }\n      }\n\n      if (count_black === desc_count) {\n        colors[current] = \"B\";\n        stack.pop();\n\n        if (desc_count > 1) {\n          maximums[current] += 1;\n        }\n      }\n    }\n\n    return maximums[key];\n  }\n\n  function processClusters(scene, data) {\n    var root_cluster_key = undefined;\n    var biggestRank = 0;\n    Object.entries(data).forEach(([k, v]) => {\n      if (v[\"Rank\"] === 0) {\n        root_cluster_key = k;\n      }\n      biggestRank = Math.max(v[\"Rank\"], biggestRank);\n    });\n\n    const max_branching = compMaxBranching(data, root_cluster_key);\n\n    const firstHeight = (biggestRank * CYLINDER_HEIGHT) / 2 + CYLINDER_HEIGHT;\n    const firstStartPoint = new Point(0, firstHeight, 0);\n    const firstEndPoint = new Point(0, firstHeight - CYLINDER_HEIGHT, 0);\n\n    clustering(\n      scene,\n      data,\n      root_cluster_key,\n      max_branching,\n      firstStartPoint,\n      firstEndPoint,\n      biggestRank\n    );\n\n    var folder = gui.addFolder(\"Colors\");\n    folder.add(parameters_colors[0], 'check').name('Back edges').listen().onChange(function(e)\n    {\n      setChecked(0);\n      if (e) {\n        cylinders.forEach(function(cylinder) {\n          if (!cylinder.userData.isAtractor) {\n            cylinder.material.color = cylinder.userData.colorBacks;\n          }\n        });\n      }\n    });\n\n    folder.add(parameters_colors[1], 'check').name('Ranks').listen().onChange(function(e)\n    {\n      setChecked(1);\n      if (e) {\n        cylinders.forEach(function(cylinder) {\n          if (!cylinder.userData.isAtractor) {\n            cylinder.material.color = cylinder.userData.colorRank;\n          }\n        });\n      }\n    });\n\n    folder.add(parameters_colors[2], 'check').name('None').listen().onChange(function(e)\n    {\n      setChecked(2);\n      if (e) {\n        cylinders.forEach(function(cylinder) {\n          if (!cylinder.userData.isAtractor) {\n            cylinder.material.color = new THREE.Color(NEUTRAL_COLOR);\n          }\n        });\n      }\n    });\n\n    var folder_wireframe = gui.addFolder(\"Wireframe\");\n    folder_wireframe.add(parameters_wireframe[0], 'check').name('Wireframe').listen().onChange(function(e)\n    {\n      cylinders.forEach(function(cylinder) {\n        cylinder.material.wireframe = e;\n      });\n    }); \n\n    function setChecked( prop ){\n      for (let param in parameters_colors){\n        parameters_colors[param].check = false;\n      }\n      parameters_colors[prop].check = true;\n    }\n    \n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}