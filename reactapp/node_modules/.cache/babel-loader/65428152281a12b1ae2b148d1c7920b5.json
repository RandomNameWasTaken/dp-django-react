{"ast":null,"code":"import _toConsumableArray from \"/home/xkruzel/Desktop/todo/reactapp/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"/home/xkruzel/Desktop/todo/reactapp/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/xkruzel/Desktop/todo/reactapp/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/xkruzel/Desktop/todo/reactapp/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/xkruzel/Desktop/todo/reactapp/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { FileLoader, Loader, ShapePath } from 'three';\n\nvar FontLoader = /*#__PURE__*/function (_Loader) {\n  _inherits(FontLoader, _Loader);\n\n  var _super = _createSuper(FontLoader);\n\n  function FontLoader(manager) {\n    _classCallCheck(this, FontLoader);\n\n    return _super.call(this, manager);\n  }\n\n  _createClass(FontLoader, [{\n    key: \"load\",\n    value: function load(url, onLoad, onProgress, onError) {\n      var scope = this;\n      var loader = new FileLoader(this.manager);\n      loader.setPath(this.path);\n      loader.setRequestHeader(this.requestHeader);\n      loader.setWithCredentials(scope.withCredentials);\n      loader.load(url, function (text) {\n        var json;\n\n        try {\n          json = JSON.parse(text);\n        } catch (e) {\n          console.warn('THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.');\n          json = JSON.parse(text.substring(65, text.length - 2));\n        }\n\n        var font = scope.parse(json);\n        if (onLoad) onLoad(font);\n      }, onProgress, onError);\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(json) {\n      return new Font(json);\n    }\n  }]);\n\n  return FontLoader;\n}(Loader); //\n\n\nvar Font = /*#__PURE__*/function () {\n  function Font(data) {\n    _classCallCheck(this, Font);\n\n    this.isFont = true;\n    this.type = 'Font';\n    this.data = data;\n  }\n\n  _createClass(Font, [{\n    key: \"generateShapes\",\n    value: function generateShapes(text) {\n      var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;\n      var shapes = [];\n      var paths = createPaths(text, size, this.data);\n\n      for (var p = 0, pl = paths.length; p < pl; p++) {\n        shapes.push.apply(shapes, _toConsumableArray(paths[p].toShapes()));\n      }\n\n      return shapes;\n    }\n  }]);\n\n  return Font;\n}();\n\nfunction createPaths(text, size, data) {\n  var chars = Array.from(text);\n  var scale = size / data.resolution;\n  var line_height = (data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness) * scale;\n  var paths = [];\n  var offsetX = 0,\n      offsetY = 0;\n\n  for (var i = 0; i < chars.length; i++) {\n    var char = chars[i];\n\n    if (char === '\\n') {\n      offsetX = 0;\n      offsetY -= line_height;\n    } else {\n      var ret = createPath(char, scale, offsetX, offsetY, data);\n      offsetX += ret.offsetX;\n      paths.push(ret.path);\n    }\n  }\n\n  return paths;\n}\n\nfunction createPath(char, scale, offsetX, offsetY, data) {\n  var glyph = data.glyphs[char] || data.glyphs['?'];\n\n  if (!glyph) {\n    console.error('THREE.Font: character \"' + char + '\" does not exists in font family ' + data.familyName + '.');\n    return;\n  }\n\n  var path = new ShapePath();\n  var x, y, cpx, cpy, cpx1, cpy1, cpx2, cpy2;\n\n  if (glyph.o) {\n    var outline = glyph._cachedOutline || (glyph._cachedOutline = glyph.o.split(' '));\n\n    for (var i = 0, l = outline.length; i < l;) {\n      var action = outline[i++];\n\n      switch (action) {\n        case 'm':\n          // moveTo\n          x = outline[i++] * scale + offsetX;\n          y = outline[i++] * scale + offsetY;\n          path.moveTo(x, y);\n          break;\n\n        case 'l':\n          // lineTo\n          x = outline[i++] * scale + offsetX;\n          y = outline[i++] * scale + offsetY;\n          path.lineTo(x, y);\n          break;\n\n        case 'q':\n          // quadraticCurveTo\n          cpx = outline[i++] * scale + offsetX;\n          cpy = outline[i++] * scale + offsetY;\n          cpx1 = outline[i++] * scale + offsetX;\n          cpy1 = outline[i++] * scale + offsetY;\n          path.quadraticCurveTo(cpx1, cpy1, cpx, cpy);\n          break;\n\n        case 'b':\n          // bezierCurveTo\n          cpx = outline[i++] * scale + offsetX;\n          cpy = outline[i++] * scale + offsetY;\n          cpx1 = outline[i++] * scale + offsetX;\n          cpy1 = outline[i++] * scale + offsetY;\n          cpx2 = outline[i++] * scale + offsetX;\n          cpy2 = outline[i++] * scale + offsetY;\n          path.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, cpx, cpy);\n          break;\n      }\n    }\n  }\n\n  return {\n    offsetX: glyph.ha * scale,\n    path: path\n  };\n}\n\nexport { FontLoader, Font };","map":{"version":3,"names":["FileLoader","Loader","ShapePath","FontLoader","manager","url","onLoad","onProgress","onError","scope","loader","setPath","path","setRequestHeader","requestHeader","setWithCredentials","withCredentials","load","text","json","JSON","parse","e","console","warn","substring","length","font","Font","data","isFont","type","size","shapes","paths","createPaths","p","pl","push","toShapes","chars","Array","from","scale","resolution","line_height","boundingBox","yMax","yMin","underlineThickness","offsetX","offsetY","i","char","ret","createPath","glyph","glyphs","error","familyName","x","y","cpx","cpy","cpx1","cpy1","cpx2","cpy2","o","outline","_cachedOutline","split","l","action","moveTo","lineTo","quadraticCurveTo","bezierCurveTo","ha"],"sources":["/home/xkruzel/node_modules/three/examples/jsm/loaders/FontLoader.js"],"sourcesContent":["import {\n\tFileLoader,\n\tLoader,\n\tShapePath\n} from 'three';\n\nclass FontLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tlet json;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tconsole.warn( 'THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.' );\n\t\t\t\tjson = JSON.parse( text.substring( 65, text.length - 2 ) );\n\n\t\t\t}\n\n\t\t\tconst font = scope.parse( json );\n\n\t\t\tif ( onLoad ) onLoad( font );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\treturn new Font( json );\n\n\t}\n\n}\n\n//\n\nclass Font {\n\n\tconstructor( data ) {\n\n\t\tthis.isFont = true;\n\n\t\tthis.type = 'Font';\n\n\t\tthis.data = data;\n\n\t}\n\n\tgenerateShapes( text, size = 100 ) {\n\n\t\tconst shapes = [];\n\t\tconst paths = createPaths( text, size, this.data );\n\n\t\tfor ( let p = 0, pl = paths.length; p < pl; p ++ ) {\n\n\t\t\tshapes.push( ...paths[ p ].toShapes() );\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n}\n\nfunction createPaths( text, size, data ) {\n\n\tconst chars = Array.from( text );\n\tconst scale = size / data.resolution;\n\tconst line_height = ( data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness ) * scale;\n\n\tconst paths = [];\n\n\tlet offsetX = 0, offsetY = 0;\n\n\tfor ( let i = 0; i < chars.length; i ++ ) {\n\n\t\tconst char = chars[ i ];\n\n\t\tif ( char === '\\n' ) {\n\n\t\t\toffsetX = 0;\n\t\t\toffsetY -= line_height;\n\n\t\t} else {\n\n\t\t\tconst ret = createPath( char, scale, offsetX, offsetY, data );\n\t\t\toffsetX += ret.offsetX;\n\t\t\tpaths.push( ret.path );\n\n\t\t}\n\n\t}\n\n\treturn paths;\n\n}\n\nfunction createPath( char, scale, offsetX, offsetY, data ) {\n\n\tconst glyph = data.glyphs[ char ] || data.glyphs[ '?' ];\n\n\tif ( ! glyph ) {\n\n\t\tconsole.error( 'THREE.Font: character \"' + char + '\" does not exists in font family ' + data.familyName + '.' );\n\n\t\treturn;\n\n\t}\n\n\tconst path = new ShapePath();\n\n\tlet x, y, cpx, cpy, cpx1, cpy1, cpx2, cpy2;\n\n\tif ( glyph.o ) {\n\n\t\tconst outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\n\n\t\tfor ( let i = 0, l = outline.length; i < l; ) {\n\n\t\t\tconst action = outline[ i ++ ];\n\n\t\t\tswitch ( action ) {\n\n\t\t\t\tcase 'm': // moveTo\n\n\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.moveTo( x, y );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'l': // lineTo\n\n\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.lineTo( x, y );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'q': // quadraticCurveTo\n\n\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'b': // bezierCurveTo\n\n\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx2 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy2 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn { offsetX: glyph.ha * scale, path: path };\n\n}\n\nexport { FontLoader, Font };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}