{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.embeddedDocs = void 0;\nvar _e = require(\"./constants/e.js\");\nvar _false = require(\"./constants/false.js\");\nvar _i = require(\"./constants/i.js\");\nvar _Infinity = require(\"./constants/Infinity.js\");\nvar _LN = require(\"./constants/LN10.js\");\nvar _LN2 = require(\"./constants/LN2.js\");\nvar _LOG10E = require(\"./constants/LOG10E.js\");\nvar _LOG2E = require(\"./constants/LOG2E.js\");\nvar _NaN = require(\"./constants/NaN.js\");\nvar _null = require(\"./constants/null.js\");\nvar _phi = require(\"./constants/phi.js\");\nvar _pi = require(\"./constants/pi.js\");\nvar _SQRT1_ = require(\"./constants/SQRT1_2.js\");\nvar _SQRT = require(\"./constants/SQRT2.js\");\nvar _tau = require(\"./constants/tau.js\");\nvar _true = require(\"./constants/true.js\");\nvar _version = require(\"./constants/version.js\");\nvar _bignumber = require(\"./construction/bignumber.js\");\nvar _boolean = require(\"./construction/boolean.js\");\nvar _complex = require(\"./construction/complex.js\");\nvar _createUnit = require(\"./construction/createUnit.js\");\nvar _fraction = require(\"./construction/fraction.js\");\nvar _index = require(\"./construction/index.js\");\nvar _matrix = require(\"./construction/matrix.js\");\nvar _number = require(\"./construction/number.js\");\nvar _sparse = require(\"./construction/sparse.js\");\nvar _splitUnit = require(\"./construction/splitUnit.js\");\nvar _string = require(\"./construction/string.js\");\nvar _unit = require(\"./construction/unit.js\");\nvar _config = require(\"./core/config.js\");\nvar _import = require(\"./core/import.js\");\nvar _typed = require(\"./core/typed.js\");\nvar _derivative = require(\"./function/algebra/derivative.js\");\nvar _leafCount = require(\"./function/algebra/leafCount.js\");\nvar _lsolve = require(\"./function/algebra/lsolve.js\");\nvar _lsolveAll = require(\"./function/algebra/lsolveAll.js\");\nvar _lup = require(\"./function/algebra/lup.js\");\nvar _lusolve = require(\"./function/algebra/lusolve.js\");\nvar _polynomialRoot = require(\"./function/algebra/polynomialRoot.js\");\nvar _qr = require(\"./function/algebra/qr.js\");\nvar _rationalize = require(\"./function/algebra/rationalize.js\");\nvar _resolve = require(\"./function/algebra/resolve.js\");\nvar _simplify = require(\"./function/algebra/simplify.js\");\nvar _simplifyConstant = require(\"./function/algebra/simplifyConstant.js\");\nvar _simplifyCore = require(\"./function/algebra/simplifyCore.js\");\nvar _slu = require(\"./function/algebra/slu.js\");\nvar _symbolicEqual = require(\"./function/algebra/symbolicEqual.js\");\nvar _usolve = require(\"./function/algebra/usolve.js\");\nvar _usolveAll = require(\"./function/algebra/usolveAll.js\");\nvar _abs = require(\"./function/arithmetic/abs.js\");\nvar _add = require(\"./function/arithmetic/add.js\");\nvar _cbrt = require(\"./function/arithmetic/cbrt.js\");\nvar _ceil = require(\"./function/arithmetic/ceil.js\");\nvar _cube = require(\"./function/arithmetic/cube.js\");\nvar _divide = require(\"./function/arithmetic/divide.js\");\nvar _dotDivide = require(\"./function/arithmetic/dotDivide.js\");\nvar _dotMultiply = require(\"./function/arithmetic/dotMultiply.js\");\nvar _dotPow = require(\"./function/arithmetic/dotPow.js\");\nvar _exp = require(\"./function/arithmetic/exp.js\");\nvar _expm = require(\"./function/arithmetic/expm.js\");\nvar _expm2 = require(\"./function/arithmetic/expm1.js\");\nvar _fix = require(\"./function/arithmetic/fix.js\");\nvar _floor = require(\"./function/arithmetic/floor.js\");\nvar _gcd = require(\"./function/arithmetic/gcd.js\");\nvar _hypot = require(\"./function/arithmetic/hypot.js\");\nvar _invmod = require(\"./function/arithmetic/invmod.js\");\nvar _lcm = require(\"./function/arithmetic/lcm.js\");\nvar _log = require(\"./function/arithmetic/log.js\");\nvar _log2 = require(\"./function/arithmetic/log10.js\");\nvar _log1p = require(\"./function/arithmetic/log1p.js\");\nvar _log3 = require(\"./function/arithmetic/log2.js\");\nvar _mod = require(\"./function/arithmetic/mod.js\");\nvar _multiply = require(\"./function/arithmetic/multiply.js\");\nvar _norm = require(\"./function/arithmetic/norm.js\");\nvar _nthRoot = require(\"./function/arithmetic/nthRoot.js\");\nvar _nthRoots = require(\"./function/arithmetic/nthRoots.js\");\nvar _pow = require(\"./function/arithmetic/pow.js\");\nvar _round = require(\"./function/arithmetic/round.js\");\nvar _sign = require(\"./function/arithmetic/sign.js\");\nvar _sqrt = require(\"./function/arithmetic/sqrt.js\");\nvar _sqrtm = require(\"./function/arithmetic/sqrtm.js\");\nvar _sylvester = require(\"./function/matrix/sylvester.js\");\nvar _schur = require(\"./function/matrix/schur.js\");\nvar _lyap = require(\"./function/matrix/lyap.js\");\nvar _square = require(\"./function/arithmetic/square.js\");\nvar _subtract = require(\"./function/arithmetic/subtract.js\");\nvar _unaryMinus = require(\"./function/arithmetic/unaryMinus.js\");\nvar _unaryPlus = require(\"./function/arithmetic/unaryPlus.js\");\nvar _xgcd = require(\"./function/arithmetic/xgcd.js\");\nvar _bitAnd = require(\"./function/bitwise/bitAnd.js\");\nvar _bitNot = require(\"./function/bitwise/bitNot.js\");\nvar _bitOr = require(\"./function/bitwise/bitOr.js\");\nvar _bitXor = require(\"./function/bitwise/bitXor.js\");\nvar _leftShift = require(\"./function/bitwise/leftShift.js\");\nvar _rightArithShift = require(\"./function/bitwise/rightArithShift.js\");\nvar _rightLogShift = require(\"./function/bitwise/rightLogShift.js\");\nvar _bellNumbers = require(\"./function/combinatorics/bellNumbers.js\");\nvar _catalan = require(\"./function/combinatorics/catalan.js\");\nvar _composition = require(\"./function/combinatorics/composition.js\");\nvar _stirlingS = require(\"./function/combinatorics/stirlingS2.js\");\nvar _arg = require(\"./function/complex/arg.js\");\nvar _conj = require(\"./function/complex/conj.js\");\nvar _im = require(\"./function/complex/im.js\");\nvar _re = require(\"./function/complex/re.js\");\nvar _evaluate = require(\"./function/expression/evaluate.js\");\nvar _help = require(\"./function/expression/help.js\");\nvar _distance = require(\"./function/geometry/distance.js\");\nvar _intersect = require(\"./function/geometry/intersect.js\");\nvar _and = require(\"./function/logical/and.js\");\nvar _not = require(\"./function/logical/not.js\");\nvar _or = require(\"./function/logical/or.js\");\nvar _xor = require(\"./function/logical/xor.js\");\nvar _column = require(\"./function/matrix/column.js\");\nvar _concat = require(\"./function/matrix/concat.js\");\nvar _count = require(\"./function/matrix/count.js\");\nvar _cross = require(\"./function/matrix/cross.js\");\nvar _ctranspose = require(\"./function/matrix/ctranspose.js\");\nvar _det = require(\"./function/matrix/det.js\");\nvar _diag = require(\"./function/matrix/diag.js\");\nvar _diff = require(\"./function/matrix/diff.js\");\nvar _dot = require(\"./function/matrix/dot.js\");\nvar _eigs = require(\"./function/matrix/eigs.js\");\nvar _filter = require(\"./function/matrix/filter.js\");\nvar _flatten = require(\"./function/matrix/flatten.js\");\nvar _forEach = require(\"./function/matrix/forEach.js\");\nvar _getMatrixDataType = require(\"./function/matrix/getMatrixDataType.js\");\nvar _identity = require(\"./function/matrix/identity.js\");\nvar _inv = require(\"./function/matrix/inv.js\");\nvar _pinv = require(\"./function/matrix/pinv.js\");\nvar _kron = require(\"./function/matrix/kron.js\");\nvar _map = require(\"./function/matrix/map.js\");\nvar _matrixFromColumns = require(\"./function/matrix/matrixFromColumns.js\");\nvar _matrixFromFunction = require(\"./function/matrix/matrixFromFunction.js\");\nvar _matrixFromRows = require(\"./function/matrix/matrixFromRows.js\");\nvar _ones = require(\"./function/matrix/ones.js\");\nvar _partitionSelect = require(\"./function/matrix/partitionSelect.js\");\nvar _range = require(\"./function/matrix/range.js\");\nvar _reshape = require(\"./function/matrix/reshape.js\");\nvar _resize = require(\"./function/matrix/resize.js\");\nvar _rotate = require(\"./function/matrix/rotate.js\");\nvar _rotationMatrix = require(\"./function/matrix/rotationMatrix.js\");\nvar _row = require(\"./function/matrix/row.js\");\nvar _size = require(\"./function/matrix/size.js\");\nvar _sort = require(\"./function/matrix/sort.js\");\nvar _squeeze = require(\"./function/matrix/squeeze.js\");\nvar _subset = require(\"./function/matrix/subset.js\");\nvar _trace = require(\"./function/matrix/trace.js\");\nvar _transpose = require(\"./function/matrix/transpose.js\");\nvar _zeros = require(\"./function/matrix/zeros.js\");\nvar _fft = require(\"./function/matrix/fft.js\");\nvar _ifft = require(\"./function/matrix/ifft.js\");\nvar _combinations = require(\"./function/probability/combinations.js\");\nvar _combinationsWithRep = require(\"./function/probability/combinationsWithRep.js\");\nvar _factorial = require(\"./function/probability/factorial.js\");\nvar _gamma = require(\"./function/probability/gamma.js\");\nvar _lgamma = require(\"./function/probability/lgamma.js\");\nvar _kldivergence = require(\"./function/probability/kldivergence.js\");\nvar _multinomial = require(\"./function/probability/multinomial.js\");\nvar _permutations = require(\"./function/probability/permutations.js\");\nvar _pickRandom = require(\"./function/probability/pickRandom.js\");\nvar _random = require(\"./function/probability/random.js\");\nvar _randomInt = require(\"./function/probability/randomInt.js\");\nvar _compare = require(\"./function/relational/compare.js\");\nvar _compareNatural = require(\"./function/relational/compareNatural.js\");\nvar _compareText = require(\"./function/relational/compareText.js\");\nvar _deepEqual = require(\"./function/relational/deepEqual.js\");\nvar _equal = require(\"./function/relational/equal.js\");\nvar _equalText = require(\"./function/relational/equalText.js\");\nvar _larger = require(\"./function/relational/larger.js\");\nvar _largerEq = require(\"./function/relational/largerEq.js\");\nvar _smaller = require(\"./function/relational/smaller.js\");\nvar _smallerEq = require(\"./function/relational/smallerEq.js\");\nvar _unequal = require(\"./function/relational/unequal.js\");\nvar _setCartesian = require(\"./function/set/setCartesian.js\");\nvar _setDifference = require(\"./function/set/setDifference.js\");\nvar _setDistinct = require(\"./function/set/setDistinct.js\");\nvar _setIntersect = require(\"./function/set/setIntersect.js\");\nvar _setIsSubset = require(\"./function/set/setIsSubset.js\");\nvar _setMultiplicity = require(\"./function/set/setMultiplicity.js\");\nvar _setPowerset = require(\"./function/set/setPowerset.js\");\nvar _setSize = require(\"./function/set/setSize.js\");\nvar _setSymDifference = require(\"./function/set/setSymDifference.js\");\nvar _setUnion = require(\"./function/set/setUnion.js\");\nvar _erf = require(\"./function/special/erf.js\");\nvar _mad = require(\"./function/statistics/mad.js\");\nvar _max = require(\"./function/statistics/max.js\");\nvar _mean = require(\"./function/statistics/mean.js\");\nvar _median = require(\"./function/statistics/median.js\");\nvar _min = require(\"./function/statistics/min.js\");\nvar _mode = require(\"./function/statistics/mode.js\");\nvar _prod = require(\"./function/statistics/prod.js\");\nvar _quantileSeq = require(\"./function/statistics/quantileSeq.js\");\nvar _std = require(\"./function/statistics/std.js\");\nvar _cumsum = require(\"./function/statistics/cumsum.js\");\nvar _sum = require(\"./function/statistics/sum.js\");\nvar _variance = require(\"./function/statistics/variance.js\");\nvar _acos = require(\"./function/trigonometry/acos.js\");\nvar _acosh = require(\"./function/trigonometry/acosh.js\");\nvar _acot = require(\"./function/trigonometry/acot.js\");\nvar _acoth = require(\"./function/trigonometry/acoth.js\");\nvar _acsc = require(\"./function/trigonometry/acsc.js\");\nvar _acsch = require(\"./function/trigonometry/acsch.js\");\nvar _asec = require(\"./function/trigonometry/asec.js\");\nvar _asech = require(\"./function/trigonometry/asech.js\");\nvar _asin = require(\"./function/trigonometry/asin.js\");\nvar _asinh = require(\"./function/trigonometry/asinh.js\");\nvar _atan = require(\"./function/trigonometry/atan.js\");\nvar _atan2 = require(\"./function/trigonometry/atan2.js\");\nvar _atanh = require(\"./function/trigonometry/atanh.js\");\nvar _cos = require(\"./function/trigonometry/cos.js\");\nvar _cosh = require(\"./function/trigonometry/cosh.js\");\nvar _cot = require(\"./function/trigonometry/cot.js\");\nvar _coth = require(\"./function/trigonometry/coth.js\");\nvar _csc = require(\"./function/trigonometry/csc.js\");\nvar _csch = require(\"./function/trigonometry/csch.js\");\nvar _sec = require(\"./function/trigonometry/sec.js\");\nvar _sech = require(\"./function/trigonometry/sech.js\");\nvar _sin = require(\"./function/trigonometry/sin.js\");\nvar _sinh = require(\"./function/trigonometry/sinh.js\");\nvar _tan = require(\"./function/trigonometry/tan.js\");\nvar _tanh = require(\"./function/trigonometry/tanh.js\");\nvar _to = require(\"./function/units/to.js\");\nvar _bin = require(\"./function/utils/bin.js\");\nvar _clone = require(\"./function/utils/clone.js\");\nvar _format = require(\"./function/utils/format.js\");\nvar _hasNumericValue = require(\"./function/utils/hasNumericValue.js\");\nvar _hex = require(\"./function/utils/hex.js\");\nvar _isInteger = require(\"./function/utils/isInteger.js\");\nvar _isNaN = require(\"./function/utils/isNaN.js\");\nvar _isNegative = require(\"./function/utils/isNegative.js\");\nvar _isNumeric = require(\"./function/utils/isNumeric.js\");\nvar _isPositive = require(\"./function/utils/isPositive.js\");\nvar _isPrime = require(\"./function/utils/isPrime.js\");\nvar _isZero = require(\"./function/utils/isZero.js\");\nvar _numeric = require(\"./function/utils/numeric.js\");\nvar _oct = require(\"./function/utils/oct.js\");\nvar _print = require(\"./function/utils/print.js\");\nvar _typeOf = require(\"./function/utils/typeOf.js\");\nvar embeddedDocs = {\n  // construction functions\n  bignumber: _bignumber.bignumberDocs,\n  \"boolean\": _boolean.booleanDocs,\n  complex: _complex.complexDocs,\n  createUnit: _createUnit.createUnitDocs,\n  fraction: _fraction.fractionDocs,\n  index: _index.indexDocs,\n  matrix: _matrix.matrixDocs,\n  number: _number.numberDocs,\n  sparse: _sparse.sparseDocs,\n  splitUnit: _splitUnit.splitUnitDocs,\n  string: _string.stringDocs,\n  unit: _unit.unitDocs,\n  // constants\n  e: _e.eDocs,\n  E: _e.eDocs,\n  \"false\": _false.falseDocs,\n  i: _i.iDocs,\n  Infinity: _Infinity.InfinityDocs,\n  LN2: _LN2.LN2Docs,\n  LN10: _LN.LN10Docs,\n  LOG2E: _LOG2E.LOG2EDocs,\n  LOG10E: _LOG10E.LOG10EDocs,\n  NaN: _NaN.NaNDocs,\n  \"null\": _null.nullDocs,\n  pi: _pi.piDocs,\n  PI: _pi.piDocs,\n  phi: _phi.phiDocs,\n  SQRT1_2: _SQRT1_.SQRT12Docs,\n  SQRT2: _SQRT.SQRT2Docs,\n  tau: _tau.tauDocs,\n  \"true\": _true.trueDocs,\n  version: _version.versionDocs,\n  // physical constants\n  // TODO: more detailed docs for physical constants\n  speedOfLight: {\n    description: 'Speed of light in vacuum',\n    examples: ['speedOfLight']\n  },\n  gravitationConstant: {\n    description: 'Newtonian constant of gravitation',\n    examples: ['gravitationConstant']\n  },\n  planckConstant: {\n    description: 'Planck constant',\n    examples: ['planckConstant']\n  },\n  reducedPlanckConstant: {\n    description: 'Reduced Planck constant',\n    examples: ['reducedPlanckConstant']\n  },\n  magneticConstant: {\n    description: 'Magnetic constant (vacuum permeability)',\n    examples: ['magneticConstant']\n  },\n  electricConstant: {\n    description: 'Electric constant (vacuum permeability)',\n    examples: ['electricConstant']\n  },\n  vacuumImpedance: {\n    description: 'Characteristic impedance of vacuum',\n    examples: ['vacuumImpedance']\n  },\n  coulomb: {\n    description: 'Coulomb\\'s constant',\n    examples: ['coulomb']\n  },\n  elementaryCharge: {\n    description: 'Elementary charge',\n    examples: ['elementaryCharge']\n  },\n  bohrMagneton: {\n    description: 'Borh magneton',\n    examples: ['bohrMagneton']\n  },\n  conductanceQuantum: {\n    description: 'Conductance quantum',\n    examples: ['conductanceQuantum']\n  },\n  inverseConductanceQuantum: {\n    description: 'Inverse conductance quantum',\n    examples: ['inverseConductanceQuantum']\n  },\n  // josephson: {description: 'Josephson constant', examples: ['josephson']},\n  magneticFluxQuantum: {\n    description: 'Magnetic flux quantum',\n    examples: ['magneticFluxQuantum']\n  },\n  nuclearMagneton: {\n    description: 'Nuclear magneton',\n    examples: ['nuclearMagneton']\n  },\n  klitzing: {\n    description: 'Von Klitzing constant',\n    examples: ['klitzing']\n  },\n  bohrRadius: {\n    description: 'Borh radius',\n    examples: ['bohrRadius']\n  },\n  classicalElectronRadius: {\n    description: 'Classical electron radius',\n    examples: ['classicalElectronRadius']\n  },\n  electronMass: {\n    description: 'Electron mass',\n    examples: ['electronMass']\n  },\n  fermiCoupling: {\n    description: 'Fermi coupling constant',\n    examples: ['fermiCoupling']\n  },\n  fineStructure: {\n    description: 'Fine-structure constant',\n    examples: ['fineStructure']\n  },\n  hartreeEnergy: {\n    description: 'Hartree energy',\n    examples: ['hartreeEnergy']\n  },\n  protonMass: {\n    description: 'Proton mass',\n    examples: ['protonMass']\n  },\n  deuteronMass: {\n    description: 'Deuteron Mass',\n    examples: ['deuteronMass']\n  },\n  neutronMass: {\n    description: 'Neutron mass',\n    examples: ['neutronMass']\n  },\n  quantumOfCirculation: {\n    description: 'Quantum of circulation',\n    examples: ['quantumOfCirculation']\n  },\n  rydberg: {\n    description: 'Rydberg constant',\n    examples: ['rydberg']\n  },\n  thomsonCrossSection: {\n    description: 'Thomson cross section',\n    examples: ['thomsonCrossSection']\n  },\n  weakMixingAngle: {\n    description: 'Weak mixing angle',\n    examples: ['weakMixingAngle']\n  },\n  efimovFactor: {\n    description: 'Efimov factor',\n    examples: ['efimovFactor']\n  },\n  atomicMass: {\n    description: 'Atomic mass constant',\n    examples: ['atomicMass']\n  },\n  avogadro: {\n    description: 'Avogadro\\'s number',\n    examples: ['avogadro']\n  },\n  boltzmann: {\n    description: 'Boltzmann constant',\n    examples: ['boltzmann']\n  },\n  faraday: {\n    description: 'Faraday constant',\n    examples: ['faraday']\n  },\n  firstRadiation: {\n    description: 'First radiation constant',\n    examples: ['firstRadiation']\n  },\n  loschmidt: {\n    description: 'Loschmidt constant at T=273.15 K and p=101.325 kPa',\n    examples: ['loschmidt']\n  },\n  gasConstant: {\n    description: 'Gas constant',\n    examples: ['gasConstant']\n  },\n  molarPlanckConstant: {\n    description: 'Molar Planck constant',\n    examples: ['molarPlanckConstant']\n  },\n  molarVolume: {\n    description: 'Molar volume of an ideal gas at T=273.15 K and p=101.325 kPa',\n    examples: ['molarVolume']\n  },\n  sackurTetrode: {\n    description: 'Sackur-Tetrode constant at T=1 K and p=101.325 kPa',\n    examples: ['sackurTetrode']\n  },\n  secondRadiation: {\n    description: 'Second radiation constant',\n    examples: ['secondRadiation']\n  },\n  stefanBoltzmann: {\n    description: 'Stefan-Boltzmann constant',\n    examples: ['stefanBoltzmann']\n  },\n  wienDisplacement: {\n    description: 'Wien displacement law constant',\n    examples: ['wienDisplacement']\n  },\n  // spectralRadiance: {description: 'First radiation constant for spectral radiance', examples: ['spectralRadiance']},\n\n  molarMass: {\n    description: 'Molar mass constant',\n    examples: ['molarMass']\n  },\n  molarMassC12: {\n    description: 'Molar mass constant of carbon-12',\n    examples: ['molarMassC12']\n  },\n  gravity: {\n    description: 'Standard acceleration of gravity (standard acceleration of free-fall on Earth)',\n    examples: ['gravity']\n  },\n  planckLength: {\n    description: 'Planck length',\n    examples: ['planckLength']\n  },\n  planckMass: {\n    description: 'Planck mass',\n    examples: ['planckMass']\n  },\n  planckTime: {\n    description: 'Planck time',\n    examples: ['planckTime']\n  },\n  planckCharge: {\n    description: 'Planck charge',\n    examples: ['planckCharge']\n  },\n  planckTemperature: {\n    description: 'Planck temperature',\n    examples: ['planckTemperature']\n  },\n  // functions - algebra\n  derivative: _derivative.derivativeDocs,\n  lsolve: _lsolve.lsolveDocs,\n  lsolveAll: _lsolveAll.lsolveAllDocs,\n  lup: _lup.lupDocs,\n  lusolve: _lusolve.lusolveDocs,\n  leafCount: _leafCount.leafCountDocs,\n  polynomialRoot: _polynomialRoot.polynomialRootDocs,\n  resolve: _resolve.resolveDocs,\n  simplify: _simplify.simplifyDocs,\n  simplifyConstant: _simplifyConstant.simplifyConstantDocs,\n  simplifyCore: _simplifyCore.simplifyCoreDocs,\n  symbolicEqual: _symbolicEqual.symbolicEqualDocs,\n  rationalize: _rationalize.rationalizeDocs,\n  slu: _slu.sluDocs,\n  usolve: _usolve.usolveDocs,\n  usolveAll: _usolveAll.usolveAllDocs,\n  qr: _qr.qrDocs,\n  // functions - arithmetic\n  abs: _abs.absDocs,\n  add: _add.addDocs,\n  cbrt: _cbrt.cbrtDocs,\n  ceil: _ceil.ceilDocs,\n  cube: _cube.cubeDocs,\n  divide: _divide.divideDocs,\n  dotDivide: _dotDivide.dotDivideDocs,\n  dotMultiply: _dotMultiply.dotMultiplyDocs,\n  dotPow: _dotPow.dotPowDocs,\n  exp: _exp.expDocs,\n  expm: _expm.expmDocs,\n  expm1: _expm2.expm1Docs,\n  fix: _fix.fixDocs,\n  floor: _floor.floorDocs,\n  gcd: _gcd.gcdDocs,\n  hypot: _hypot.hypotDocs,\n  lcm: _lcm.lcmDocs,\n  log: _log.logDocs,\n  log2: _log3.log2Docs,\n  log1p: _log1p.log1pDocs,\n  log10: _log2.log10Docs,\n  mod: _mod.modDocs,\n  multiply: _multiply.multiplyDocs,\n  norm: _norm.normDocs,\n  nthRoot: _nthRoot.nthRootDocs,\n  nthRoots: _nthRoots.nthRootsDocs,\n  pow: _pow.powDocs,\n  round: _round.roundDocs,\n  sign: _sign.signDocs,\n  sqrt: _sqrt.sqrtDocs,\n  sqrtm: _sqrtm.sqrtmDocs,\n  square: _square.squareDocs,\n  subtract: _subtract.subtractDocs,\n  unaryMinus: _unaryMinus.unaryMinusDocs,\n  unaryPlus: _unaryPlus.unaryPlusDocs,\n  xgcd: _xgcd.xgcdDocs,\n  invmod: _invmod.invmodDocs,\n  // functions - bitwise\n  bitAnd: _bitAnd.bitAndDocs,\n  bitNot: _bitNot.bitNotDocs,\n  bitOr: _bitOr.bitOrDocs,\n  bitXor: _bitXor.bitXorDocs,\n  leftShift: _leftShift.leftShiftDocs,\n  rightArithShift: _rightArithShift.rightArithShiftDocs,\n  rightLogShift: _rightLogShift.rightLogShiftDocs,\n  // functions - combinatorics\n  bellNumbers: _bellNumbers.bellNumbersDocs,\n  catalan: _catalan.catalanDocs,\n  composition: _composition.compositionDocs,\n  stirlingS2: _stirlingS.stirlingS2Docs,\n  // functions - core\n  config: _config.configDocs,\n  \"import\": _import.importDocs,\n  typed: _typed.typedDocs,\n  // functions - complex\n  arg: _arg.argDocs,\n  conj: _conj.conjDocs,\n  re: _re.reDocs,\n  im: _im.imDocs,\n  // functions - expression\n  evaluate: _evaluate.evaluateDocs,\n  help: _help.helpDocs,\n  // functions - geometry\n  distance: _distance.distanceDocs,\n  intersect: _intersect.intersectDocs,\n  // functions - logical\n  and: _and.andDocs,\n  not: _not.notDocs,\n  or: _or.orDocs,\n  xor: _xor.xorDocs,\n  // functions - matrix\n  concat: _concat.concatDocs,\n  count: _count.countDocs,\n  cross: _cross.crossDocs,\n  column: _column.columnDocs,\n  ctranspose: _ctranspose.ctransposeDocs,\n  det: _det.detDocs,\n  diag: _diag.diagDocs,\n  diff: _diff.diffDocs,\n  dot: _dot.dotDocs,\n  getMatrixDataType: _getMatrixDataType.getMatrixDataTypeDocs,\n  identity: _identity.identityDocs,\n  filter: _filter.filterDocs,\n  flatten: _flatten.flattenDocs,\n  forEach: _forEach.forEachDocs,\n  inv: _inv.invDocs,\n  pinv: _pinv.pinvDocs,\n  eigs: _eigs.eigsDocs,\n  kron: _kron.kronDocs,\n  matrixFromFunction: _matrixFromFunction.matrixFromFunctionDocs,\n  matrixFromRows: _matrixFromRows.matrixFromRowsDocs,\n  matrixFromColumns: _matrixFromColumns.matrixFromColumnsDocs,\n  map: _map.mapDocs,\n  ones: _ones.onesDocs,\n  partitionSelect: _partitionSelect.partitionSelectDocs,\n  range: _range.rangeDocs,\n  resize: _resize.resizeDocs,\n  reshape: _reshape.reshapeDocs,\n  rotate: _rotate.rotateDocs,\n  rotationMatrix: _rotationMatrix.rotationMatrixDocs,\n  row: _row.rowDocs,\n  size: _size.sizeDocs,\n  sort: _sort.sortDocs,\n  squeeze: _squeeze.squeezeDocs,\n  subset: _subset.subsetDocs,\n  trace: _trace.traceDocs,\n  transpose: _transpose.transposeDocs,\n  zeros: _zeros.zerosDocs,\n  fft: _fft.fftDocs,\n  ifft: _ifft.ifftDocs,\n  sylvester: _sylvester.sylvesterDocs,\n  schur: _schur.schurDocs,\n  lyap: _lyap.lyapDocs,\n  // functions - probability\n  combinations: _combinations.combinationsDocs,\n  combinationsWithRep: _combinationsWithRep.combinationsWithRepDocs,\n  // distribution: distributionDocs,\n  factorial: _factorial.factorialDocs,\n  gamma: _gamma.gammaDocs,\n  kldivergence: _kldivergence.kldivergenceDocs,\n  lgamma: _lgamma.lgammaDocs,\n  multinomial: _multinomial.multinomialDocs,\n  permutations: _permutations.permutationsDocs,\n  pickRandom: _pickRandom.pickRandomDocs,\n  random: _random.randomDocs,\n  randomInt: _randomInt.randomIntDocs,\n  // functions - relational\n  compare: _compare.compareDocs,\n  compareNatural: _compareNatural.compareNaturalDocs,\n  compareText: _compareText.compareTextDocs,\n  deepEqual: _deepEqual.deepEqualDocs,\n  equal: _equal.equalDocs,\n  equalText: _equalText.equalTextDocs,\n  larger: _larger.largerDocs,\n  largerEq: _largerEq.largerEqDocs,\n  smaller: _smaller.smallerDocs,\n  smallerEq: _smallerEq.smallerEqDocs,\n  unequal: _unequal.unequalDocs,\n  // functions - set\n  setCartesian: _setCartesian.setCartesianDocs,\n  setDifference: _setDifference.setDifferenceDocs,\n  setDistinct: _setDistinct.setDistinctDocs,\n  setIntersect: _setIntersect.setIntersectDocs,\n  setIsSubset: _setIsSubset.setIsSubsetDocs,\n  setMultiplicity: _setMultiplicity.setMultiplicityDocs,\n  setPowerset: _setPowerset.setPowersetDocs,\n  setSize: _setSize.setSizeDocs,\n  setSymDifference: _setSymDifference.setSymDifferenceDocs,\n  setUnion: _setUnion.setUnionDocs,\n  // functions - special\n  erf: _erf.erfDocs,\n  // functions - statistics\n  cumsum: _cumsum.cumSumDocs,\n  mad: _mad.madDocs,\n  max: _max.maxDocs,\n  mean: _mean.meanDocs,\n  median: _median.medianDocs,\n  min: _min.minDocs,\n  mode: _mode.modeDocs,\n  prod: _prod.prodDocs,\n  quantileSeq: _quantileSeq.quantileSeqDocs,\n  std: _std.stdDocs,\n  sum: _sum.sumDocs,\n  variance: _variance.varianceDocs,\n  // functions - trigonometry\n  acos: _acos.acosDocs,\n  acosh: _acosh.acoshDocs,\n  acot: _acot.acotDocs,\n  acoth: _acoth.acothDocs,\n  acsc: _acsc.acscDocs,\n  acsch: _acsch.acschDocs,\n  asec: _asec.asecDocs,\n  asech: _asech.asechDocs,\n  asin: _asin.asinDocs,\n  asinh: _asinh.asinhDocs,\n  atan: _atan.atanDocs,\n  atanh: _atanh.atanhDocs,\n  atan2: _atan2.atan2Docs,\n  cos: _cos.cosDocs,\n  cosh: _cosh.coshDocs,\n  cot: _cot.cotDocs,\n  coth: _coth.cothDocs,\n  csc: _csc.cscDocs,\n  csch: _csch.cschDocs,\n  sec: _sec.secDocs,\n  sech: _sech.sechDocs,\n  sin: _sin.sinDocs,\n  sinh: _sinh.sinhDocs,\n  tan: _tan.tanDocs,\n  tanh: _tanh.tanhDocs,\n  // functions - units\n  to: _to.toDocs,\n  // functions - utils\n  clone: _clone.cloneDocs,\n  format: _format.formatDocs,\n  bin: _bin.binDocs,\n  oct: _oct.octDocs,\n  hex: _hex.hexDocs,\n  isNaN: _isNaN.isNaNDocs,\n  isInteger: _isInteger.isIntegerDocs,\n  isNegative: _isNegative.isNegativeDocs,\n  isNumeric: _isNumeric.isNumericDocs,\n  hasNumericValue: _hasNumericValue.hasNumericValueDocs,\n  isPositive: _isPositive.isPositiveDocs,\n  isPrime: _isPrime.isPrimeDocs,\n  isZero: _isZero.isZeroDocs,\n  print: _print.printDocs,\n  typeOf: _typeOf.typeOfDocs,\n  numeric: _numeric.numericDocs\n};\nexports.embeddedDocs = embeddedDocs;","map":{"version":3,"names":["Object","defineProperty","exports","value","embeddedDocs","_e","require","_false","_i","_Infinity","_LN","_LN2","_LOG10E","_LOG2E","_NaN","_null","_phi","_pi","_SQRT1_","_SQRT","_tau","_true","_version","_bignumber","_boolean","_complex","_createUnit","_fraction","_index","_matrix","_number","_sparse","_splitUnit","_string","_unit","_config","_import","_typed","_derivative","_leafCount","_lsolve","_lsolveAll","_lup","_lusolve","_polynomialRoot","_qr","_rationalize","_resolve","_simplify","_simplifyConstant","_simplifyCore","_slu","_symbolicEqual","_usolve","_usolveAll","_abs","_add","_cbrt","_ceil","_cube","_divide","_dotDivide","_dotMultiply","_dotPow","_exp","_expm","_expm2","_fix","_floor","_gcd","_hypot","_invmod","_lcm","_log","_log2","_log1p","_log3","_mod","_multiply","_norm","_nthRoot","_nthRoots","_pow","_round","_sign","_sqrt","_sqrtm","_sylvester","_schur","_lyap","_square","_subtract","_unaryMinus","_unaryPlus","_xgcd","_bitAnd","_bitNot","_bitOr","_bitXor","_leftShift","_rightArithShift","_rightLogShift","_bellNumbers","_catalan","_composition","_stirlingS","_arg","_conj","_im","_re","_evaluate","_help","_distance","_intersect","_and","_not","_or","_xor","_column","_concat","_count","_cross","_ctranspose","_det","_diag","_diff","_dot","_eigs","_filter","_flatten","_forEach","_getMatrixDataType","_identity","_inv","_pinv","_kron","_map","_matrixFromColumns","_matrixFromFunction","_matrixFromRows","_ones","_partitionSelect","_range","_reshape","_resize","_rotate","_rotationMatrix","_row","_size","_sort","_squeeze","_subset","_trace","_transpose","_zeros","_fft","_ifft","_combinations","_combinationsWithRep","_factorial","_gamma","_lgamma","_kldivergence","_multinomial","_permutations","_pickRandom","_random","_randomInt","_compare","_compareNatural","_compareText","_deepEqual","_equal","_equalText","_larger","_largerEq","_smaller","_smallerEq","_unequal","_setCartesian","_setDifference","_setDistinct","_setIntersect","_setIsSubset","_setMultiplicity","_setPowerset","_setSize","_setSymDifference","_setUnion","_erf","_mad","_max","_mean","_median","_min","_mode","_prod","_quantileSeq","_std","_cumsum","_sum","_variance","_acos","_acosh","_acot","_acoth","_acsc","_acsch","_asec","_asech","_asin","_asinh","_atan","_atan2","_atanh","_cos","_cosh","_cot","_coth","_csc","_csch","_sec","_sech","_sin","_sinh","_tan","_tanh","_to","_bin","_clone","_format","_hasNumericValue","_hex","_isInteger","_isNaN","_isNegative","_isNumeric","_isPositive","_isPrime","_isZero","_numeric","_oct","_print","_typeOf","bignumber","bignumberDocs","booleanDocs","complex","complexDocs","createUnit","createUnitDocs","fraction","fractionDocs","index","indexDocs","matrix","matrixDocs","number","numberDocs","sparse","sparseDocs","splitUnit","splitUnitDocs","string","stringDocs","unit","unitDocs","e","eDocs","E","falseDocs","i","iDocs","Infinity","InfinityDocs","LN2","LN2Docs","LN10","LN10Docs","LOG2E","LOG2EDocs","LOG10E","LOG10EDocs","NaN","NaNDocs","nullDocs","pi","piDocs","PI","phi","phiDocs","SQRT1_2","SQRT12Docs","SQRT2","SQRT2Docs","tau","tauDocs","trueDocs","version","versionDocs","speedOfLight","description","examples","gravitationConstant","planckConstant","reducedPlanckConstant","magneticConstant","electricConstant","vacuumImpedance","coulomb","elementaryCharge","bohrMagneton","conductanceQuantum","inverseConductanceQuantum","magneticFluxQuantum","nuclearMagneton","klitzing","bohrRadius","classicalElectronRadius","electronMass","fermiCoupling","fineStructure","hartreeEnergy","protonMass","deuteronMass","neutronMass","quantumOfCirculation","rydberg","thomsonCrossSection","weakMixingAngle","efimovFactor","atomicMass","avogadro","boltzmann","faraday","firstRadiation","loschmidt","gasConstant","molarPlanckConstant","molarVolume","sackurTetrode","secondRadiation","stefanBoltzmann","wienDisplacement","molarMass","molarMassC12","gravity","planckLength","planckMass","planckTime","planckCharge","planckTemperature","derivative","derivativeDocs","lsolve","lsolveDocs","lsolveAll","lsolveAllDocs","lup","lupDocs","lusolve","lusolveDocs","leafCount","leafCountDocs","polynomialRoot","polynomialRootDocs","resolve","resolveDocs","simplify","simplifyDocs","simplifyConstant","simplifyConstantDocs","simplifyCore","simplifyCoreDocs","symbolicEqual","symbolicEqualDocs","rationalize","rationalizeDocs","slu","sluDocs","usolve","usolveDocs","usolveAll","usolveAllDocs","qr","qrDocs","abs","absDocs","add","addDocs","cbrt","cbrtDocs","ceil","ceilDocs","cube","cubeDocs","divide","divideDocs","dotDivide","dotDivideDocs","dotMultiply","dotMultiplyDocs","dotPow","dotPowDocs","exp","expDocs","expm","expmDocs","expm1","expm1Docs","fix","fixDocs","floor","floorDocs","gcd","gcdDocs","hypot","hypotDocs","lcm","lcmDocs","log","logDocs","log2","log2Docs","log1p","log1pDocs","log10","log10Docs","mod","modDocs","multiply","multiplyDocs","norm","normDocs","nthRoot","nthRootDocs","nthRoots","nthRootsDocs","pow","powDocs","round","roundDocs","sign","signDocs","sqrt","sqrtDocs","sqrtm","sqrtmDocs","square","squareDocs","subtract","subtractDocs","unaryMinus","unaryMinusDocs","unaryPlus","unaryPlusDocs","xgcd","xgcdDocs","invmod","invmodDocs","bitAnd","bitAndDocs","bitNot","bitNotDocs","bitOr","bitOrDocs","bitXor","bitXorDocs","leftShift","leftShiftDocs","rightArithShift","rightArithShiftDocs","rightLogShift","rightLogShiftDocs","bellNumbers","bellNumbersDocs","catalan","catalanDocs","composition","compositionDocs","stirlingS2","stirlingS2Docs","config","configDocs","importDocs","typed","typedDocs","arg","argDocs","conj","conjDocs","re","reDocs","im","imDocs","evaluate","evaluateDocs","help","helpDocs","distance","distanceDocs","intersect","intersectDocs","and","andDocs","not","notDocs","or","orDocs","xor","xorDocs","concat","concatDocs","count","countDocs","cross","crossDocs","column","columnDocs","ctranspose","ctransposeDocs","det","detDocs","diag","diagDocs","diff","diffDocs","dot","dotDocs","getMatrixDataType","getMatrixDataTypeDocs","identity","identityDocs","filter","filterDocs","flatten","flattenDocs","forEach","forEachDocs","inv","invDocs","pinv","pinvDocs","eigs","eigsDocs","kron","kronDocs","matrixFromFunction","matrixFromFunctionDocs","matrixFromRows","matrixFromRowsDocs","matrixFromColumns","matrixFromColumnsDocs","map","mapDocs","ones","onesDocs","partitionSelect","partitionSelectDocs","range","rangeDocs","resize","resizeDocs","reshape","reshapeDocs","rotate","rotateDocs","rotationMatrix","rotationMatrixDocs","row","rowDocs","size","sizeDocs","sort","sortDocs","squeeze","squeezeDocs","subset","subsetDocs","trace","traceDocs","transpose","transposeDocs","zeros","zerosDocs","fft","fftDocs","ifft","ifftDocs","sylvester","sylvesterDocs","schur","schurDocs","lyap","lyapDocs","combinations","combinationsDocs","combinationsWithRep","combinationsWithRepDocs","factorial","factorialDocs","gamma","gammaDocs","kldivergence","kldivergenceDocs","lgamma","lgammaDocs","multinomial","multinomialDocs","permutations","permutationsDocs","pickRandom","pickRandomDocs","random","randomDocs","randomInt","randomIntDocs","compare","compareDocs","compareNatural","compareNaturalDocs","compareText","compareTextDocs","deepEqual","deepEqualDocs","equal","equalDocs","equalText","equalTextDocs","larger","largerDocs","largerEq","largerEqDocs","smaller","smallerDocs","smallerEq","smallerEqDocs","unequal","unequalDocs","setCartesian","setCartesianDocs","setDifference","setDifferenceDocs","setDistinct","setDistinctDocs","setIntersect","setIntersectDocs","setIsSubset","setIsSubsetDocs","setMultiplicity","setMultiplicityDocs","setPowerset","setPowersetDocs","setSize","setSizeDocs","setSymDifference","setSymDifferenceDocs","setUnion","setUnionDocs","erf","erfDocs","cumsum","cumSumDocs","mad","madDocs","max","maxDocs","mean","meanDocs","median","medianDocs","min","minDocs","mode","modeDocs","prod","prodDocs","quantileSeq","quantileSeqDocs","std","stdDocs","sum","sumDocs","variance","varianceDocs","acos","acosDocs","acosh","acoshDocs","acot","acotDocs","acoth","acothDocs","acsc","acscDocs","acsch","acschDocs","asec","asecDocs","asech","asechDocs","asin","asinDocs","asinh","asinhDocs","atan","atanDocs","atanh","atanhDocs","atan2","atan2Docs","cos","cosDocs","cosh","coshDocs","cot","cotDocs","coth","cothDocs","csc","cscDocs","csch","cschDocs","sec","secDocs","sech","sechDocs","sin","sinDocs","sinh","sinhDocs","tan","tanDocs","tanh","tanhDocs","to","toDocs","clone","cloneDocs","format","formatDocs","bin","binDocs","oct","octDocs","hex","hexDocs","isNaN","isNaNDocs","isInteger","isIntegerDocs","isNegative","isNegativeDocs","isNumeric","isNumericDocs","hasNumericValue","hasNumericValueDocs","isPositive","isPositiveDocs","isPrime","isPrimeDocs","isZero","isZeroDocs","print","printDocs","typeOf","typeOfDocs","numeric","numericDocs"],"sources":["/home/xkruzel/Desktop/todo/reactapp/node_modules/mathjs/lib/cjs/expression/embeddedDocs/embeddedDocs.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.embeddedDocs = void 0;\nvar _e = require(\"./constants/e.js\");\nvar _false = require(\"./constants/false.js\");\nvar _i = require(\"./constants/i.js\");\nvar _Infinity = require(\"./constants/Infinity.js\");\nvar _LN = require(\"./constants/LN10.js\");\nvar _LN2 = require(\"./constants/LN2.js\");\nvar _LOG10E = require(\"./constants/LOG10E.js\");\nvar _LOG2E = require(\"./constants/LOG2E.js\");\nvar _NaN = require(\"./constants/NaN.js\");\nvar _null = require(\"./constants/null.js\");\nvar _phi = require(\"./constants/phi.js\");\nvar _pi = require(\"./constants/pi.js\");\nvar _SQRT1_ = require(\"./constants/SQRT1_2.js\");\nvar _SQRT = require(\"./constants/SQRT2.js\");\nvar _tau = require(\"./constants/tau.js\");\nvar _true = require(\"./constants/true.js\");\nvar _version = require(\"./constants/version.js\");\nvar _bignumber = require(\"./construction/bignumber.js\");\nvar _boolean = require(\"./construction/boolean.js\");\nvar _complex = require(\"./construction/complex.js\");\nvar _createUnit = require(\"./construction/createUnit.js\");\nvar _fraction = require(\"./construction/fraction.js\");\nvar _index = require(\"./construction/index.js\");\nvar _matrix = require(\"./construction/matrix.js\");\nvar _number = require(\"./construction/number.js\");\nvar _sparse = require(\"./construction/sparse.js\");\nvar _splitUnit = require(\"./construction/splitUnit.js\");\nvar _string = require(\"./construction/string.js\");\nvar _unit = require(\"./construction/unit.js\");\nvar _config = require(\"./core/config.js\");\nvar _import = require(\"./core/import.js\");\nvar _typed = require(\"./core/typed.js\");\nvar _derivative = require(\"./function/algebra/derivative.js\");\nvar _leafCount = require(\"./function/algebra/leafCount.js\");\nvar _lsolve = require(\"./function/algebra/lsolve.js\");\nvar _lsolveAll = require(\"./function/algebra/lsolveAll.js\");\nvar _lup = require(\"./function/algebra/lup.js\");\nvar _lusolve = require(\"./function/algebra/lusolve.js\");\nvar _polynomialRoot = require(\"./function/algebra/polynomialRoot.js\");\nvar _qr = require(\"./function/algebra/qr.js\");\nvar _rationalize = require(\"./function/algebra/rationalize.js\");\nvar _resolve = require(\"./function/algebra/resolve.js\");\nvar _simplify = require(\"./function/algebra/simplify.js\");\nvar _simplifyConstant = require(\"./function/algebra/simplifyConstant.js\");\nvar _simplifyCore = require(\"./function/algebra/simplifyCore.js\");\nvar _slu = require(\"./function/algebra/slu.js\");\nvar _symbolicEqual = require(\"./function/algebra/symbolicEqual.js\");\nvar _usolve = require(\"./function/algebra/usolve.js\");\nvar _usolveAll = require(\"./function/algebra/usolveAll.js\");\nvar _abs = require(\"./function/arithmetic/abs.js\");\nvar _add = require(\"./function/arithmetic/add.js\");\nvar _cbrt = require(\"./function/arithmetic/cbrt.js\");\nvar _ceil = require(\"./function/arithmetic/ceil.js\");\nvar _cube = require(\"./function/arithmetic/cube.js\");\nvar _divide = require(\"./function/arithmetic/divide.js\");\nvar _dotDivide = require(\"./function/arithmetic/dotDivide.js\");\nvar _dotMultiply = require(\"./function/arithmetic/dotMultiply.js\");\nvar _dotPow = require(\"./function/arithmetic/dotPow.js\");\nvar _exp = require(\"./function/arithmetic/exp.js\");\nvar _expm = require(\"./function/arithmetic/expm.js\");\nvar _expm2 = require(\"./function/arithmetic/expm1.js\");\nvar _fix = require(\"./function/arithmetic/fix.js\");\nvar _floor = require(\"./function/arithmetic/floor.js\");\nvar _gcd = require(\"./function/arithmetic/gcd.js\");\nvar _hypot = require(\"./function/arithmetic/hypot.js\");\nvar _invmod = require(\"./function/arithmetic/invmod.js\");\nvar _lcm = require(\"./function/arithmetic/lcm.js\");\nvar _log = require(\"./function/arithmetic/log.js\");\nvar _log2 = require(\"./function/arithmetic/log10.js\");\nvar _log1p = require(\"./function/arithmetic/log1p.js\");\nvar _log3 = require(\"./function/arithmetic/log2.js\");\nvar _mod = require(\"./function/arithmetic/mod.js\");\nvar _multiply = require(\"./function/arithmetic/multiply.js\");\nvar _norm = require(\"./function/arithmetic/norm.js\");\nvar _nthRoot = require(\"./function/arithmetic/nthRoot.js\");\nvar _nthRoots = require(\"./function/arithmetic/nthRoots.js\");\nvar _pow = require(\"./function/arithmetic/pow.js\");\nvar _round = require(\"./function/arithmetic/round.js\");\nvar _sign = require(\"./function/arithmetic/sign.js\");\nvar _sqrt = require(\"./function/arithmetic/sqrt.js\");\nvar _sqrtm = require(\"./function/arithmetic/sqrtm.js\");\nvar _sylvester = require(\"./function/matrix/sylvester.js\");\nvar _schur = require(\"./function/matrix/schur.js\");\nvar _lyap = require(\"./function/matrix/lyap.js\");\nvar _square = require(\"./function/arithmetic/square.js\");\nvar _subtract = require(\"./function/arithmetic/subtract.js\");\nvar _unaryMinus = require(\"./function/arithmetic/unaryMinus.js\");\nvar _unaryPlus = require(\"./function/arithmetic/unaryPlus.js\");\nvar _xgcd = require(\"./function/arithmetic/xgcd.js\");\nvar _bitAnd = require(\"./function/bitwise/bitAnd.js\");\nvar _bitNot = require(\"./function/bitwise/bitNot.js\");\nvar _bitOr = require(\"./function/bitwise/bitOr.js\");\nvar _bitXor = require(\"./function/bitwise/bitXor.js\");\nvar _leftShift = require(\"./function/bitwise/leftShift.js\");\nvar _rightArithShift = require(\"./function/bitwise/rightArithShift.js\");\nvar _rightLogShift = require(\"./function/bitwise/rightLogShift.js\");\nvar _bellNumbers = require(\"./function/combinatorics/bellNumbers.js\");\nvar _catalan = require(\"./function/combinatorics/catalan.js\");\nvar _composition = require(\"./function/combinatorics/composition.js\");\nvar _stirlingS = require(\"./function/combinatorics/stirlingS2.js\");\nvar _arg = require(\"./function/complex/arg.js\");\nvar _conj = require(\"./function/complex/conj.js\");\nvar _im = require(\"./function/complex/im.js\");\nvar _re = require(\"./function/complex/re.js\");\nvar _evaluate = require(\"./function/expression/evaluate.js\");\nvar _help = require(\"./function/expression/help.js\");\nvar _distance = require(\"./function/geometry/distance.js\");\nvar _intersect = require(\"./function/geometry/intersect.js\");\nvar _and = require(\"./function/logical/and.js\");\nvar _not = require(\"./function/logical/not.js\");\nvar _or = require(\"./function/logical/or.js\");\nvar _xor = require(\"./function/logical/xor.js\");\nvar _column = require(\"./function/matrix/column.js\");\nvar _concat = require(\"./function/matrix/concat.js\");\nvar _count = require(\"./function/matrix/count.js\");\nvar _cross = require(\"./function/matrix/cross.js\");\nvar _ctranspose = require(\"./function/matrix/ctranspose.js\");\nvar _det = require(\"./function/matrix/det.js\");\nvar _diag = require(\"./function/matrix/diag.js\");\nvar _diff = require(\"./function/matrix/diff.js\");\nvar _dot = require(\"./function/matrix/dot.js\");\nvar _eigs = require(\"./function/matrix/eigs.js\");\nvar _filter = require(\"./function/matrix/filter.js\");\nvar _flatten = require(\"./function/matrix/flatten.js\");\nvar _forEach = require(\"./function/matrix/forEach.js\");\nvar _getMatrixDataType = require(\"./function/matrix/getMatrixDataType.js\");\nvar _identity = require(\"./function/matrix/identity.js\");\nvar _inv = require(\"./function/matrix/inv.js\");\nvar _pinv = require(\"./function/matrix/pinv.js\");\nvar _kron = require(\"./function/matrix/kron.js\");\nvar _map = require(\"./function/matrix/map.js\");\nvar _matrixFromColumns = require(\"./function/matrix/matrixFromColumns.js\");\nvar _matrixFromFunction = require(\"./function/matrix/matrixFromFunction.js\");\nvar _matrixFromRows = require(\"./function/matrix/matrixFromRows.js\");\nvar _ones = require(\"./function/matrix/ones.js\");\nvar _partitionSelect = require(\"./function/matrix/partitionSelect.js\");\nvar _range = require(\"./function/matrix/range.js\");\nvar _reshape = require(\"./function/matrix/reshape.js\");\nvar _resize = require(\"./function/matrix/resize.js\");\nvar _rotate = require(\"./function/matrix/rotate.js\");\nvar _rotationMatrix = require(\"./function/matrix/rotationMatrix.js\");\nvar _row = require(\"./function/matrix/row.js\");\nvar _size = require(\"./function/matrix/size.js\");\nvar _sort = require(\"./function/matrix/sort.js\");\nvar _squeeze = require(\"./function/matrix/squeeze.js\");\nvar _subset = require(\"./function/matrix/subset.js\");\nvar _trace = require(\"./function/matrix/trace.js\");\nvar _transpose = require(\"./function/matrix/transpose.js\");\nvar _zeros = require(\"./function/matrix/zeros.js\");\nvar _fft = require(\"./function/matrix/fft.js\");\nvar _ifft = require(\"./function/matrix/ifft.js\");\nvar _combinations = require(\"./function/probability/combinations.js\");\nvar _combinationsWithRep = require(\"./function/probability/combinationsWithRep.js\");\nvar _factorial = require(\"./function/probability/factorial.js\");\nvar _gamma = require(\"./function/probability/gamma.js\");\nvar _lgamma = require(\"./function/probability/lgamma.js\");\nvar _kldivergence = require(\"./function/probability/kldivergence.js\");\nvar _multinomial = require(\"./function/probability/multinomial.js\");\nvar _permutations = require(\"./function/probability/permutations.js\");\nvar _pickRandom = require(\"./function/probability/pickRandom.js\");\nvar _random = require(\"./function/probability/random.js\");\nvar _randomInt = require(\"./function/probability/randomInt.js\");\nvar _compare = require(\"./function/relational/compare.js\");\nvar _compareNatural = require(\"./function/relational/compareNatural.js\");\nvar _compareText = require(\"./function/relational/compareText.js\");\nvar _deepEqual = require(\"./function/relational/deepEqual.js\");\nvar _equal = require(\"./function/relational/equal.js\");\nvar _equalText = require(\"./function/relational/equalText.js\");\nvar _larger = require(\"./function/relational/larger.js\");\nvar _largerEq = require(\"./function/relational/largerEq.js\");\nvar _smaller = require(\"./function/relational/smaller.js\");\nvar _smallerEq = require(\"./function/relational/smallerEq.js\");\nvar _unequal = require(\"./function/relational/unequal.js\");\nvar _setCartesian = require(\"./function/set/setCartesian.js\");\nvar _setDifference = require(\"./function/set/setDifference.js\");\nvar _setDistinct = require(\"./function/set/setDistinct.js\");\nvar _setIntersect = require(\"./function/set/setIntersect.js\");\nvar _setIsSubset = require(\"./function/set/setIsSubset.js\");\nvar _setMultiplicity = require(\"./function/set/setMultiplicity.js\");\nvar _setPowerset = require(\"./function/set/setPowerset.js\");\nvar _setSize = require(\"./function/set/setSize.js\");\nvar _setSymDifference = require(\"./function/set/setSymDifference.js\");\nvar _setUnion = require(\"./function/set/setUnion.js\");\nvar _erf = require(\"./function/special/erf.js\");\nvar _mad = require(\"./function/statistics/mad.js\");\nvar _max = require(\"./function/statistics/max.js\");\nvar _mean = require(\"./function/statistics/mean.js\");\nvar _median = require(\"./function/statistics/median.js\");\nvar _min = require(\"./function/statistics/min.js\");\nvar _mode = require(\"./function/statistics/mode.js\");\nvar _prod = require(\"./function/statistics/prod.js\");\nvar _quantileSeq = require(\"./function/statistics/quantileSeq.js\");\nvar _std = require(\"./function/statistics/std.js\");\nvar _cumsum = require(\"./function/statistics/cumsum.js\");\nvar _sum = require(\"./function/statistics/sum.js\");\nvar _variance = require(\"./function/statistics/variance.js\");\nvar _acos = require(\"./function/trigonometry/acos.js\");\nvar _acosh = require(\"./function/trigonometry/acosh.js\");\nvar _acot = require(\"./function/trigonometry/acot.js\");\nvar _acoth = require(\"./function/trigonometry/acoth.js\");\nvar _acsc = require(\"./function/trigonometry/acsc.js\");\nvar _acsch = require(\"./function/trigonometry/acsch.js\");\nvar _asec = require(\"./function/trigonometry/asec.js\");\nvar _asech = require(\"./function/trigonometry/asech.js\");\nvar _asin = require(\"./function/trigonometry/asin.js\");\nvar _asinh = require(\"./function/trigonometry/asinh.js\");\nvar _atan = require(\"./function/trigonometry/atan.js\");\nvar _atan2 = require(\"./function/trigonometry/atan2.js\");\nvar _atanh = require(\"./function/trigonometry/atanh.js\");\nvar _cos = require(\"./function/trigonometry/cos.js\");\nvar _cosh = require(\"./function/trigonometry/cosh.js\");\nvar _cot = require(\"./function/trigonometry/cot.js\");\nvar _coth = require(\"./function/trigonometry/coth.js\");\nvar _csc = require(\"./function/trigonometry/csc.js\");\nvar _csch = require(\"./function/trigonometry/csch.js\");\nvar _sec = require(\"./function/trigonometry/sec.js\");\nvar _sech = require(\"./function/trigonometry/sech.js\");\nvar _sin = require(\"./function/trigonometry/sin.js\");\nvar _sinh = require(\"./function/trigonometry/sinh.js\");\nvar _tan = require(\"./function/trigonometry/tan.js\");\nvar _tanh = require(\"./function/trigonometry/tanh.js\");\nvar _to = require(\"./function/units/to.js\");\nvar _bin = require(\"./function/utils/bin.js\");\nvar _clone = require(\"./function/utils/clone.js\");\nvar _format = require(\"./function/utils/format.js\");\nvar _hasNumericValue = require(\"./function/utils/hasNumericValue.js\");\nvar _hex = require(\"./function/utils/hex.js\");\nvar _isInteger = require(\"./function/utils/isInteger.js\");\nvar _isNaN = require(\"./function/utils/isNaN.js\");\nvar _isNegative = require(\"./function/utils/isNegative.js\");\nvar _isNumeric = require(\"./function/utils/isNumeric.js\");\nvar _isPositive = require(\"./function/utils/isPositive.js\");\nvar _isPrime = require(\"./function/utils/isPrime.js\");\nvar _isZero = require(\"./function/utils/isZero.js\");\nvar _numeric = require(\"./function/utils/numeric.js\");\nvar _oct = require(\"./function/utils/oct.js\");\nvar _print = require(\"./function/utils/print.js\");\nvar _typeOf = require(\"./function/utils/typeOf.js\");\nvar embeddedDocs = {\n  // construction functions\n  bignumber: _bignumber.bignumberDocs,\n  \"boolean\": _boolean.booleanDocs,\n  complex: _complex.complexDocs,\n  createUnit: _createUnit.createUnitDocs,\n  fraction: _fraction.fractionDocs,\n  index: _index.indexDocs,\n  matrix: _matrix.matrixDocs,\n  number: _number.numberDocs,\n  sparse: _sparse.sparseDocs,\n  splitUnit: _splitUnit.splitUnitDocs,\n  string: _string.stringDocs,\n  unit: _unit.unitDocs,\n  // constants\n  e: _e.eDocs,\n  E: _e.eDocs,\n  \"false\": _false.falseDocs,\n  i: _i.iDocs,\n  Infinity: _Infinity.InfinityDocs,\n  LN2: _LN2.LN2Docs,\n  LN10: _LN.LN10Docs,\n  LOG2E: _LOG2E.LOG2EDocs,\n  LOG10E: _LOG10E.LOG10EDocs,\n  NaN: _NaN.NaNDocs,\n  \"null\": _null.nullDocs,\n  pi: _pi.piDocs,\n  PI: _pi.piDocs,\n  phi: _phi.phiDocs,\n  SQRT1_2: _SQRT1_.SQRT12Docs,\n  SQRT2: _SQRT.SQRT2Docs,\n  tau: _tau.tauDocs,\n  \"true\": _true.trueDocs,\n  version: _version.versionDocs,\n  // physical constants\n  // TODO: more detailed docs for physical constants\n  speedOfLight: {\n    description: 'Speed of light in vacuum',\n    examples: ['speedOfLight']\n  },\n  gravitationConstant: {\n    description: 'Newtonian constant of gravitation',\n    examples: ['gravitationConstant']\n  },\n  planckConstant: {\n    description: 'Planck constant',\n    examples: ['planckConstant']\n  },\n  reducedPlanckConstant: {\n    description: 'Reduced Planck constant',\n    examples: ['reducedPlanckConstant']\n  },\n  magneticConstant: {\n    description: 'Magnetic constant (vacuum permeability)',\n    examples: ['magneticConstant']\n  },\n  electricConstant: {\n    description: 'Electric constant (vacuum permeability)',\n    examples: ['electricConstant']\n  },\n  vacuumImpedance: {\n    description: 'Characteristic impedance of vacuum',\n    examples: ['vacuumImpedance']\n  },\n  coulomb: {\n    description: 'Coulomb\\'s constant',\n    examples: ['coulomb']\n  },\n  elementaryCharge: {\n    description: 'Elementary charge',\n    examples: ['elementaryCharge']\n  },\n  bohrMagneton: {\n    description: 'Borh magneton',\n    examples: ['bohrMagneton']\n  },\n  conductanceQuantum: {\n    description: 'Conductance quantum',\n    examples: ['conductanceQuantum']\n  },\n  inverseConductanceQuantum: {\n    description: 'Inverse conductance quantum',\n    examples: ['inverseConductanceQuantum']\n  },\n  // josephson: {description: 'Josephson constant', examples: ['josephson']},\n  magneticFluxQuantum: {\n    description: 'Magnetic flux quantum',\n    examples: ['magneticFluxQuantum']\n  },\n  nuclearMagneton: {\n    description: 'Nuclear magneton',\n    examples: ['nuclearMagneton']\n  },\n  klitzing: {\n    description: 'Von Klitzing constant',\n    examples: ['klitzing']\n  },\n  bohrRadius: {\n    description: 'Borh radius',\n    examples: ['bohrRadius']\n  },\n  classicalElectronRadius: {\n    description: 'Classical electron radius',\n    examples: ['classicalElectronRadius']\n  },\n  electronMass: {\n    description: 'Electron mass',\n    examples: ['electronMass']\n  },\n  fermiCoupling: {\n    description: 'Fermi coupling constant',\n    examples: ['fermiCoupling']\n  },\n  fineStructure: {\n    description: 'Fine-structure constant',\n    examples: ['fineStructure']\n  },\n  hartreeEnergy: {\n    description: 'Hartree energy',\n    examples: ['hartreeEnergy']\n  },\n  protonMass: {\n    description: 'Proton mass',\n    examples: ['protonMass']\n  },\n  deuteronMass: {\n    description: 'Deuteron Mass',\n    examples: ['deuteronMass']\n  },\n  neutronMass: {\n    description: 'Neutron mass',\n    examples: ['neutronMass']\n  },\n  quantumOfCirculation: {\n    description: 'Quantum of circulation',\n    examples: ['quantumOfCirculation']\n  },\n  rydberg: {\n    description: 'Rydberg constant',\n    examples: ['rydberg']\n  },\n  thomsonCrossSection: {\n    description: 'Thomson cross section',\n    examples: ['thomsonCrossSection']\n  },\n  weakMixingAngle: {\n    description: 'Weak mixing angle',\n    examples: ['weakMixingAngle']\n  },\n  efimovFactor: {\n    description: 'Efimov factor',\n    examples: ['efimovFactor']\n  },\n  atomicMass: {\n    description: 'Atomic mass constant',\n    examples: ['atomicMass']\n  },\n  avogadro: {\n    description: 'Avogadro\\'s number',\n    examples: ['avogadro']\n  },\n  boltzmann: {\n    description: 'Boltzmann constant',\n    examples: ['boltzmann']\n  },\n  faraday: {\n    description: 'Faraday constant',\n    examples: ['faraday']\n  },\n  firstRadiation: {\n    description: 'First radiation constant',\n    examples: ['firstRadiation']\n  },\n  loschmidt: {\n    description: 'Loschmidt constant at T=273.15 K and p=101.325 kPa',\n    examples: ['loschmidt']\n  },\n  gasConstant: {\n    description: 'Gas constant',\n    examples: ['gasConstant']\n  },\n  molarPlanckConstant: {\n    description: 'Molar Planck constant',\n    examples: ['molarPlanckConstant']\n  },\n  molarVolume: {\n    description: 'Molar volume of an ideal gas at T=273.15 K and p=101.325 kPa',\n    examples: ['molarVolume']\n  },\n  sackurTetrode: {\n    description: 'Sackur-Tetrode constant at T=1 K and p=101.325 kPa',\n    examples: ['sackurTetrode']\n  },\n  secondRadiation: {\n    description: 'Second radiation constant',\n    examples: ['secondRadiation']\n  },\n  stefanBoltzmann: {\n    description: 'Stefan-Boltzmann constant',\n    examples: ['stefanBoltzmann']\n  },\n  wienDisplacement: {\n    description: 'Wien displacement law constant',\n    examples: ['wienDisplacement']\n  },\n  // spectralRadiance: {description: 'First radiation constant for spectral radiance', examples: ['spectralRadiance']},\n\n  molarMass: {\n    description: 'Molar mass constant',\n    examples: ['molarMass']\n  },\n  molarMassC12: {\n    description: 'Molar mass constant of carbon-12',\n    examples: ['molarMassC12']\n  },\n  gravity: {\n    description: 'Standard acceleration of gravity (standard acceleration of free-fall on Earth)',\n    examples: ['gravity']\n  },\n  planckLength: {\n    description: 'Planck length',\n    examples: ['planckLength']\n  },\n  planckMass: {\n    description: 'Planck mass',\n    examples: ['planckMass']\n  },\n  planckTime: {\n    description: 'Planck time',\n    examples: ['planckTime']\n  },\n  planckCharge: {\n    description: 'Planck charge',\n    examples: ['planckCharge']\n  },\n  planckTemperature: {\n    description: 'Planck temperature',\n    examples: ['planckTemperature']\n  },\n  // functions - algebra\n  derivative: _derivative.derivativeDocs,\n  lsolve: _lsolve.lsolveDocs,\n  lsolveAll: _lsolveAll.lsolveAllDocs,\n  lup: _lup.lupDocs,\n  lusolve: _lusolve.lusolveDocs,\n  leafCount: _leafCount.leafCountDocs,\n  polynomialRoot: _polynomialRoot.polynomialRootDocs,\n  resolve: _resolve.resolveDocs,\n  simplify: _simplify.simplifyDocs,\n  simplifyConstant: _simplifyConstant.simplifyConstantDocs,\n  simplifyCore: _simplifyCore.simplifyCoreDocs,\n  symbolicEqual: _symbolicEqual.symbolicEqualDocs,\n  rationalize: _rationalize.rationalizeDocs,\n  slu: _slu.sluDocs,\n  usolve: _usolve.usolveDocs,\n  usolveAll: _usolveAll.usolveAllDocs,\n  qr: _qr.qrDocs,\n  // functions - arithmetic\n  abs: _abs.absDocs,\n  add: _add.addDocs,\n  cbrt: _cbrt.cbrtDocs,\n  ceil: _ceil.ceilDocs,\n  cube: _cube.cubeDocs,\n  divide: _divide.divideDocs,\n  dotDivide: _dotDivide.dotDivideDocs,\n  dotMultiply: _dotMultiply.dotMultiplyDocs,\n  dotPow: _dotPow.dotPowDocs,\n  exp: _exp.expDocs,\n  expm: _expm.expmDocs,\n  expm1: _expm2.expm1Docs,\n  fix: _fix.fixDocs,\n  floor: _floor.floorDocs,\n  gcd: _gcd.gcdDocs,\n  hypot: _hypot.hypotDocs,\n  lcm: _lcm.lcmDocs,\n  log: _log.logDocs,\n  log2: _log3.log2Docs,\n  log1p: _log1p.log1pDocs,\n  log10: _log2.log10Docs,\n  mod: _mod.modDocs,\n  multiply: _multiply.multiplyDocs,\n  norm: _norm.normDocs,\n  nthRoot: _nthRoot.nthRootDocs,\n  nthRoots: _nthRoots.nthRootsDocs,\n  pow: _pow.powDocs,\n  round: _round.roundDocs,\n  sign: _sign.signDocs,\n  sqrt: _sqrt.sqrtDocs,\n  sqrtm: _sqrtm.sqrtmDocs,\n  square: _square.squareDocs,\n  subtract: _subtract.subtractDocs,\n  unaryMinus: _unaryMinus.unaryMinusDocs,\n  unaryPlus: _unaryPlus.unaryPlusDocs,\n  xgcd: _xgcd.xgcdDocs,\n  invmod: _invmod.invmodDocs,\n  // functions - bitwise\n  bitAnd: _bitAnd.bitAndDocs,\n  bitNot: _bitNot.bitNotDocs,\n  bitOr: _bitOr.bitOrDocs,\n  bitXor: _bitXor.bitXorDocs,\n  leftShift: _leftShift.leftShiftDocs,\n  rightArithShift: _rightArithShift.rightArithShiftDocs,\n  rightLogShift: _rightLogShift.rightLogShiftDocs,\n  // functions - combinatorics\n  bellNumbers: _bellNumbers.bellNumbersDocs,\n  catalan: _catalan.catalanDocs,\n  composition: _composition.compositionDocs,\n  stirlingS2: _stirlingS.stirlingS2Docs,\n  // functions - core\n  config: _config.configDocs,\n  \"import\": _import.importDocs,\n  typed: _typed.typedDocs,\n  // functions - complex\n  arg: _arg.argDocs,\n  conj: _conj.conjDocs,\n  re: _re.reDocs,\n  im: _im.imDocs,\n  // functions - expression\n  evaluate: _evaluate.evaluateDocs,\n  help: _help.helpDocs,\n  // functions - geometry\n  distance: _distance.distanceDocs,\n  intersect: _intersect.intersectDocs,\n  // functions - logical\n  and: _and.andDocs,\n  not: _not.notDocs,\n  or: _or.orDocs,\n  xor: _xor.xorDocs,\n  // functions - matrix\n  concat: _concat.concatDocs,\n  count: _count.countDocs,\n  cross: _cross.crossDocs,\n  column: _column.columnDocs,\n  ctranspose: _ctranspose.ctransposeDocs,\n  det: _det.detDocs,\n  diag: _diag.diagDocs,\n  diff: _diff.diffDocs,\n  dot: _dot.dotDocs,\n  getMatrixDataType: _getMatrixDataType.getMatrixDataTypeDocs,\n  identity: _identity.identityDocs,\n  filter: _filter.filterDocs,\n  flatten: _flatten.flattenDocs,\n  forEach: _forEach.forEachDocs,\n  inv: _inv.invDocs,\n  pinv: _pinv.pinvDocs,\n  eigs: _eigs.eigsDocs,\n  kron: _kron.kronDocs,\n  matrixFromFunction: _matrixFromFunction.matrixFromFunctionDocs,\n  matrixFromRows: _matrixFromRows.matrixFromRowsDocs,\n  matrixFromColumns: _matrixFromColumns.matrixFromColumnsDocs,\n  map: _map.mapDocs,\n  ones: _ones.onesDocs,\n  partitionSelect: _partitionSelect.partitionSelectDocs,\n  range: _range.rangeDocs,\n  resize: _resize.resizeDocs,\n  reshape: _reshape.reshapeDocs,\n  rotate: _rotate.rotateDocs,\n  rotationMatrix: _rotationMatrix.rotationMatrixDocs,\n  row: _row.rowDocs,\n  size: _size.sizeDocs,\n  sort: _sort.sortDocs,\n  squeeze: _squeeze.squeezeDocs,\n  subset: _subset.subsetDocs,\n  trace: _trace.traceDocs,\n  transpose: _transpose.transposeDocs,\n  zeros: _zeros.zerosDocs,\n  fft: _fft.fftDocs,\n  ifft: _ifft.ifftDocs,\n  sylvester: _sylvester.sylvesterDocs,\n  schur: _schur.schurDocs,\n  lyap: _lyap.lyapDocs,\n  // functions - probability\n  combinations: _combinations.combinationsDocs,\n  combinationsWithRep: _combinationsWithRep.combinationsWithRepDocs,\n  // distribution: distributionDocs,\n  factorial: _factorial.factorialDocs,\n  gamma: _gamma.gammaDocs,\n  kldivergence: _kldivergence.kldivergenceDocs,\n  lgamma: _lgamma.lgammaDocs,\n  multinomial: _multinomial.multinomialDocs,\n  permutations: _permutations.permutationsDocs,\n  pickRandom: _pickRandom.pickRandomDocs,\n  random: _random.randomDocs,\n  randomInt: _randomInt.randomIntDocs,\n  // functions - relational\n  compare: _compare.compareDocs,\n  compareNatural: _compareNatural.compareNaturalDocs,\n  compareText: _compareText.compareTextDocs,\n  deepEqual: _deepEqual.deepEqualDocs,\n  equal: _equal.equalDocs,\n  equalText: _equalText.equalTextDocs,\n  larger: _larger.largerDocs,\n  largerEq: _largerEq.largerEqDocs,\n  smaller: _smaller.smallerDocs,\n  smallerEq: _smallerEq.smallerEqDocs,\n  unequal: _unequal.unequalDocs,\n  // functions - set\n  setCartesian: _setCartesian.setCartesianDocs,\n  setDifference: _setDifference.setDifferenceDocs,\n  setDistinct: _setDistinct.setDistinctDocs,\n  setIntersect: _setIntersect.setIntersectDocs,\n  setIsSubset: _setIsSubset.setIsSubsetDocs,\n  setMultiplicity: _setMultiplicity.setMultiplicityDocs,\n  setPowerset: _setPowerset.setPowersetDocs,\n  setSize: _setSize.setSizeDocs,\n  setSymDifference: _setSymDifference.setSymDifferenceDocs,\n  setUnion: _setUnion.setUnionDocs,\n  // functions - special\n  erf: _erf.erfDocs,\n  // functions - statistics\n  cumsum: _cumsum.cumSumDocs,\n  mad: _mad.madDocs,\n  max: _max.maxDocs,\n  mean: _mean.meanDocs,\n  median: _median.medianDocs,\n  min: _min.minDocs,\n  mode: _mode.modeDocs,\n  prod: _prod.prodDocs,\n  quantileSeq: _quantileSeq.quantileSeqDocs,\n  std: _std.stdDocs,\n  sum: _sum.sumDocs,\n  variance: _variance.varianceDocs,\n  // functions - trigonometry\n  acos: _acos.acosDocs,\n  acosh: _acosh.acoshDocs,\n  acot: _acot.acotDocs,\n  acoth: _acoth.acothDocs,\n  acsc: _acsc.acscDocs,\n  acsch: _acsch.acschDocs,\n  asec: _asec.asecDocs,\n  asech: _asech.asechDocs,\n  asin: _asin.asinDocs,\n  asinh: _asinh.asinhDocs,\n  atan: _atan.atanDocs,\n  atanh: _atanh.atanhDocs,\n  atan2: _atan2.atan2Docs,\n  cos: _cos.cosDocs,\n  cosh: _cosh.coshDocs,\n  cot: _cot.cotDocs,\n  coth: _coth.cothDocs,\n  csc: _csc.cscDocs,\n  csch: _csch.cschDocs,\n  sec: _sec.secDocs,\n  sech: _sech.sechDocs,\n  sin: _sin.sinDocs,\n  sinh: _sinh.sinhDocs,\n  tan: _tan.tanDocs,\n  tanh: _tanh.tanhDocs,\n  // functions - units\n  to: _to.toDocs,\n  // functions - utils\n  clone: _clone.cloneDocs,\n  format: _format.formatDocs,\n  bin: _bin.binDocs,\n  oct: _oct.octDocs,\n  hex: _hex.hexDocs,\n  isNaN: _isNaN.isNaNDocs,\n  isInteger: _isInteger.isIntegerDocs,\n  isNegative: _isNegative.isNegativeDocs,\n  isNumeric: _isNumeric.isNumericDocs,\n  hasNumericValue: _hasNumericValue.hasNumericValueDocs,\n  isPositive: _isPositive.isPositiveDocs,\n  isPrime: _isPrime.isPrimeDocs,\n  isZero: _isZero.isZeroDocs,\n  print: _print.printDocs,\n  typeOf: _typeOf.typeOfDocs,\n  numeric: _numeric.numericDocs\n};\nexports.embeddedDocs = embeddedDocs;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}