{"ast":null,"code":"import _slicedToArray from\"/home/xkruzel/Desktop/todo/reactapp/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import*as THREE from'three';import{OrbitControls}from'three/examples/jsm/controls/OrbitControls';import*as dat from'dat.gui';import{Point,createPoint}from'./Point';import{Interaction}from'three.interaction-fixed';import{dec2bin,multiplyMatrix,rad2degrees}from\"./utils\";export function init3Dgraphics(canvas,div,data,nodes_ids,h,w){if(data===undefined){return false;}var CYLINDER_HEIGHT=5;var number_of_nodes=Object.keys(nodes_ids).length;var scene=new THREE.Scene();//scene.background = new THREE.Color( 0xd3d3d3 );\nscene.background=new THREE.Color(0xf8f2ea);var camera=new THREE.PerspectiveCamera(75,canvas.width/canvas.height,0.1,1000);var renderer=new THREE.WebGLRenderer({canvas:canvas});renderer.setPixelRatio(window.devicePixelRatio);renderer.setSize(canvas.width,canvas.height);// full size\ncamera.position.setZ(30);// for better perspective\nrenderer.sortObjects=false;renderer.render(scene,camera);new Interaction(renderer,scene,camera);// For showing text information about clusters\nvar texts=[];var cylinders=[];//const axesHelper = new THREE.AxesHelper(100);\n//scene.add(axesHelper);\n/*\n  const gui = new dat.GUI();\n  const options = {\n    sphereColor : 0xffea00,\n    wireframe: false,\n  };\n*/var pointLight=new THREE.PointLight(0xffffff);pointLight.position.set(20,20,20);var ambientLight=new THREE.AmbientLight(0xffffff);ambientLight.position.set(20,20,20);scene.add(pointLight,ambientLight);//const lightHelper = new THREE.PointLightHelper(pointLight);  // shows position of lighsource\n//const gridHelper = new THREE.GridHelper(30, 20);\n//scene.add(lightHelper, gridHelper);\nwindow.addEventListener('resize',function(){camera.aspect=canvas.width/canvas.height;camera.updateProjectionMatrix();renderer.setSize(canvas.width);});var controls=new OrbitControls(camera,renderer.domElement);processClusters(scene,data);data=null;function animate(){setTimeout(function(){requestAnimationFrame(animate);},1000/5);controls.update();renderer.render(scene,camera);pointLight.position.copy(camera.position);}renderer.setAnimationLoop(animate);window.addEventListener('resize',function(){camera.aspect=canvas.width/canvas.width;camera.updateProjectionMatrix();renderer.setSize(canvas.width,canvas.width);});function calcColor(max,val){return\"hsla(147, 0%, 50%, 1)\";/*\n    const min = 0\n    var minHue = 240, maxHue=0;\n    var curPercent = (val - min) / (max-min);\n    var colString = \"hsl(\" + ((curPercent * (maxHue-minHue) ) + minHue) + \",65%,50%)\";\n    return colString;\n    */}function resetOpacity(){cylinders.forEach(function(cylinder){var newMaterial=cylinder.material.clone();newMaterial.transparent=false;newMaterial.opacity=1;cylinder.material=newMaterial;});}function createCylinder(data,id,startPoint,endPoint,currRadius,nextRadius,rank,rank_max){var color=new THREE.Color(data[id]['Color']===''?calcColor(rank_max,rank):data[id]['Color']);//color.setHex(rank/10 * 0xffffff );\n// color.setHex(rank/10 * 0xffffff );\nvar cylinderMesh=function cylinderMesh(startPoint,endPoint,midPoint,currRadius,nextRadius,color){/* edge from X to Y */var direction=new THREE.Vector3().subVectors(endPoint,startPoint);var orientation=new THREE.Matrix4();/* THREE.Object3D().up (=Y) default orientation for all objects */orientation.lookAt(startPoint,endPoint,new THREE.Object3D().up);/* rotation around axis X by -90 degrees \n      * matches the default orientation Y \n      * with the orientation of looking Z */var mat=new THREE.Matrix4();mat.set(1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,1);orientation.multiply(mat);/* cylinder: radiusAtTop, radiusAtBottom, \n          height, radiusSegments, heightSegments */var edgeGeometry=new THREE.CylinderGeometry(currRadius,nextRadius,CYLINDER_HEIGHT,8,1);var cylinder=new THREE.Mesh(edgeGeometry,new THREE.MeshPhongMaterial({color:color,flatShading:true}));cylinder.applyMatrix4(orientation);cylinder.position.set(midPoint.x,midPoint.y,midPoint.z);cylinder.cursor='pointer';cylinder.on('click',function(ev){resetOpacity();var newMaterial=cylinder.material.clone();newMaterial.transparent=true;newMaterial.opacity=0.5;cylinder.material=newMaterial;texts.forEach(function(text){var selectedObject=scene.getObjectByName(text.name);scene.remove(selectedObject);});var text='';data[id][\"Nodes\"].forEach(function(elem){if(text!==''){text+=',';}text+=' (';var bin=dec2bin(elem,number_of_nodes);for(var i=0;i<bin.length;i++){if(bin[i]==='1'){text+=' '+nodes_ids[i];}}text+=')';});div.innerHTML=\"<b>Rank</b>: \"+data[id][\"Rank\"]+\"<br><b>Nodes</b>: \"+text;});return cylinder;};var midPoint=new Point((startPoint.x+endPoint.x)/2,(startPoint.y+endPoint.y)/2,(startPoint.z+endPoint.z)/2);return cylinderMesh(startPoint,endPoint,midPoint,currRadius,nextRadius,color);//new THREE.Mesh(geometryCyl, material);\n}function getChildsChilds(data,cluster){var childsChildCount=0;for(var i=0;i<cluster[\"Desc\"].length;++i){childsChildCount+=data[cluster[\"Desc\"][i]][\"Desc\"].length;}return childsChildCount;}// prevPoint, point - upper and downer middle points of cylinder\n// dirPoint - point to which direction of cylinder (dir vector) should go \nfunction clustering(scene,data,id,max_branching,prevPointFirst,pointFirst,biggestRank){if(id===undefined){console.log(\"Id is undefined in clustering\");return;}var firstId=id;var tuple=Object.freeze({id:id,prevPoint:prevPointFirst,point:pointFirst});var stack=[tuple];var yaxis=new Point(0,1,0);while(stack.length>0){var stackElement=stack.pop();var current=stackElement.id;var prevPoint=stackElement.prevPoint;var point=stackElement.point;var cluster=data[current];var childCount=cluster[\"Desc\"].length;console.log(current,childCount);var childsChildCount=getChildsChilds(data,cluster);var upperRadius=childCount;var lowerRadius=childsChildCount;var cylinder=createCylinder(data,current,prevPoint,point,upperRadius,lowerRadius,data[current][\"Rank\"],biggestRank);var dirVector=new Point(point.x-prevPoint.x,point.y-prevPoint.y,point.z-prevPoint.z);/* Compute angle of rotation of parent cylinder */var radians=(yaxis.x*dirVector.x+yaxis.y*dirVector.y+yaxis.z*dirVector.z)/Math.sqrt(dirVector.x*dirVector.x+dirVector.y*dirVector.y+dirVector.z*dirVector.z);var angle=rad2degrees(radians);console.log(angle);// help\nvar c=Math.cos(angle);var s=Math.sin(angle);var matrix=[[c,0,s],[0,1,0],[-s,0,c]];// rotation around y axis\nfor(var i=0;i<childCount;++i){if(childCount===1){var newStartPoint=new Point(point.x,point.y,point.z);// to make copy\nvar newPoint=new Point(dirVector.x+point.x,dirVector.y+point.y,dirVector.z+point.z);tuple=Object.freeze({id:cluster[\"Desc\"][0],prevPoint:newStartPoint,point:newPoint});stack.push(tuple);continue;}console.log(i);// COMPUTE NEW COORDINATES around circle - not rotated circle\nvar theta=2*Math.PI/childCount*i;var _h=childCount/2;var fi=i*theta;if(i<=_h&&i%2===1){fi=(Math.ceil(_h)-1+i)*theta;}else if(i>_h&&(childCount-1-i)%2===0){fi=(childCount-i)*theta;}if(i>_h&&(childCount-1-i)%2===1){fi=(Math.ceil(_h)-1+childCount-i)*theta;}var xPos=lowerRadius*Math.cos(theta);var zPos=lowerRadius*Math.sin(theta);var newStartPointHelper=new Point(point.x+xPos,point.y,point.z+zPos);// needs to be rotated acc angle accoring prevPoint\nvar translationMatrix=[[1,0,0,-prevPoint.x],[0,1,0,-prevPoint.y],[0,0,1,-prevPoint.z],[0,0,0,1]];var translationMatrixBack=[[1,0,0,prevPoint.x],[0,1,0,prevPoint.y],[0,0,1,prevPoint.z],[0,0,0,1]];var transPoint=createPoint(multiplyMatrix(translationMatrix,newStartPointHelper.getMatrix4()));var rotPoint=transPoint;//createPoint( multiplyMatrix(matrix, transPoint.getMatrix()) );\nvar transBackPoint=createPoint(multiplyMatrix(translationMatrixBack,rotPoint.getMatrix4()));var vector=new THREE.Vector3(transBackPoint.x-prevPoint.x,transBackPoint.y-prevPoint.y,transBackPoint.z-prevPoint.z).normalize();var childNodeCount=data[cluster[\"Desc\"][i]][\"Desc\"].length;var radius=childsChildCount>cluster.Node?childsChildCount-cluster[\"Desc\"].length:childsChildCount;var distance=Math.sqrt(radius*radius+CYLINDER_HEIGHT*CYLINDER_HEIGHT);newStartPoint=new Point(prevPoint.x+distance*vector.x,prevPoint.y+distance*vector.y,prevPoint.z+distance*vector.z);var newEndPoint=new Point(newStartPoint.x+CYLINDER_HEIGHT*vector.x,newStartPoint.y+CYLINDER_HEIGHT*vector.y,newStartPoint.z+CYLINDER_HEIGHT*vector.z);tuple=Object.freeze({id:cluster[\"Desc\"][i],prevPoint:newStartPoint,point:newEndPoint});stack.push(tuple);}if(cylinder!==undefined){cylinders.push(cylinder);// if (current === firstId) {\nscene.add(cylinder);// }\n}}}function compMaxBranching(data,key){var stack=[key];var maximums={};var colors={};while(stack.length>0){var current=stack.pop();colors[current]='G';stack.push(current);if(maximums[current]===undefined){maximums[current]=0;}var count_black=0;var desc_count=data[current][\"Desc\"].length;for(var i=0;i<desc_count;++i){if(colors[data[current][\"Desc\"][i]]===undefined){stack.push(data[current][\"Desc\"][i]);}if(colors[data[current][\"Desc\"][i]]==='B'){count_black+=1;maximums[current]=Math.max(maximums[data[current][\"Desc\"][i]],maximums[current]);}}if(count_black===desc_count){colors[current]='B';stack.pop();if(desc_count>1){maximums[current]+=1;}}}return maximums[key];}function processClusters(scene,data){var root_cluster_key=undefined;var biggestRank=0;Object.entries(data).forEach(function(_ref){var _ref2=_slicedToArray(_ref,2),k=_ref2[0],v=_ref2[1];if(v[\"Rank\"]===0){root_cluster_key=k;}biggestRank=Math.max(v[\"Rank\"],biggestRank);});var max_branching=compMaxBranching(data,root_cluster_key);var firstHeight=biggestRank*CYLINDER_HEIGHT/2+CYLINDER_HEIGHT;var firstStartPoint=new Point(0,firstHeight,0);var firstEndPoint=new Point(0,firstHeight-CYLINDER_HEIGHT,0);clustering(scene,data,root_cluster_key,max_branching,firstStartPoint,firstEndPoint,biggestRank);}}","map":{"version":3,"names":["THREE","OrbitControls","dat","Point","createPoint","Interaction","dec2bin","multiplyMatrix","rad2degrees","init3Dgraphics","canvas","div","data","nodes_ids","h","w","undefined","CYLINDER_HEIGHT","number_of_nodes","Object","keys","length","scene","Scene","background","Color","camera","PerspectiveCamera","width","height","renderer","WebGLRenderer","setPixelRatio","window","devicePixelRatio","setSize","position","setZ","sortObjects","render","texts","cylinders","pointLight","PointLight","set","ambientLight","AmbientLight","add","addEventListener","aspect","updateProjectionMatrix","controls","domElement","processClusters","animate","setTimeout","requestAnimationFrame","update","copy","setAnimationLoop","calcColor","max","val","resetOpacity","forEach","cylinder","newMaterial","material","clone","transparent","opacity","createCylinder","id","startPoint","endPoint","currRadius","nextRadius","rank","rank_max","color","cylinderMesh","midPoint","direction","Vector3","subVectors","orientation","Matrix4","lookAt","Object3D","up","mat","multiply","edgeGeometry","CylinderGeometry","Mesh","MeshPhongMaterial","flatShading","applyMatrix4","x","y","z","cursor","on","ev","text","selectedObject","getObjectByName","name","remove","elem","bin","i","innerHTML","getChildsChilds","cluster","childsChildCount","clustering","max_branching","prevPointFirst","pointFirst","biggestRank","console","log","firstId","tuple","freeze","prevPoint","point","stack","yaxis","stackElement","pop","current","childCount","upperRadius","lowerRadius","dirVector","radians","Math","sqrt","angle","c","cos","s","sin","matrix","newStartPoint","newPoint","push","theta","PI","fi","ceil","xPos","zPos","newStartPointHelper","translationMatrix","translationMatrixBack","transPoint","getMatrix4","rotPoint","transBackPoint","vector","normalize","childNodeCount","radius","Node","distance","newEndPoint","compMaxBranching","key","maximums","colors","count_black","desc_count","root_cluster_key","entries","k","v","firstHeight","firstStartPoint","firstEndPoint"],"sources":["/home/xkruzel/Desktop/todo/reactapp/src/rendering.js"],"sourcesContent":["import * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport * as dat from 'dat.gui';\nimport { Point, createPoint } from './Point';\nimport { Interaction } from 'three.interaction-fixed';\nimport { dec2bin, multiplyMatrix, rad2degrees  } from \"./utils\";\n\nexport function init3Dgraphics(canvas, div, data, nodes_ids, h, w) {\n\n  if (data === undefined) {\n    return false;\n  }\n\n  const CYLINDER_HEIGHT = 5;\n  const number_of_nodes = Object.keys(nodes_ids).length;\n\n  const scene = new THREE.Scene();\n  //scene.background = new THREE.Color( 0xd3d3d3 );\n  scene.background = new THREE.Color( 0xf8f2ea);\n  const camera = new THREE.PerspectiveCamera(75, canvas.width / canvas.height, 0.1, 1000)\n  const renderer = new THREE.WebGLRenderer({\n    canvas: canvas,\n  });\n\n  renderer.setPixelRatio( window.devicePixelRatio );\n  renderer.setSize(canvas.width, canvas.height); // full size\n  camera.position.setZ(30); // for better perspective\n  renderer.sortObjects = false;\n  renderer.render(scene, camera);\n\n  new Interaction(renderer, scene, camera);\n\n// For showing text information about clusters\n  var texts = [];\n  var cylinders = [];\n\n  //const axesHelper = new THREE.AxesHelper(100);\n  //scene.add(axesHelper);\n\n/*\n  const gui = new dat.GUI();\n  const options = {\n    sphereColor : 0xffea00,\n    wireframe: false,\n  };\n*/    \n  const pointLight = new THREE.PointLight(0xffffff)\n  pointLight.position.set(20, 20, 20);\n\n  const ambientLight = new THREE.AmbientLight(0xffffff)\n  ambientLight.position.set(20, 20, 20);\n\n  scene.add(pointLight, ambientLight);\n\n  //const lightHelper = new THREE.PointLightHelper(pointLight);  // shows position of lighsource\n  //const gridHelper = new THREE.GridHelper(30, 20);\n\n  //scene.add(lightHelper, gridHelper);\n\n  window.addEventListener('resize', function() {\n    camera.aspect = canvas.width / canvas.height;\n    camera.updateProjectionMatrix();\n    renderer.setSize(canvas.width);\n  });\n\n  const controls = new OrbitControls(camera, renderer.domElement);\n\n  processClusters(scene, data);\n  data = null;\n\n  function animate() {\n    setTimeout( function() {\n      requestAnimationFrame( animate );\n    }, 1000 / 5 );\n\n    controls.update();\n    renderer.render(scene, camera);\n    pointLight.position.copy(camera.position );\n  }\n\n  renderer.setAnimationLoop(animate);\n\n  window.addEventListener('resize', function() {\n    camera.aspect = canvas.width / canvas.width\n    camera.updateProjectionMatrix();\n    renderer.setSize(canvas.width, canvas.width);\n  });\n\n\n  function calcColor(max, val) {\n    return \"hsla(147, 0%, 50%, 1)\";\n    /*\n    const min = 0\n    var minHue = 240, maxHue=0;\n    var curPercent = (val - min) / (max-min);\n    var colString = \"hsl(\" + ((curPercent * (maxHue-minHue) ) + minHue) + \",65%,50%)\";\n    return colString;\n    */\n  }\n\n  function resetOpacity() {\n    cylinders.forEach(function (cylinder) {\n      const newMaterial = cylinder.material.clone();\n      newMaterial.transparent = false;\n      newMaterial.opacity = 1;\n      cylinder.material = newMaterial;\n    });\n  }\n\n  function createCylinder( data, id, startPoint, endPoint, currRadius, nextRadius, rank, rank_max) {\n    const color = new THREE.Color( data[id]['Color'] === '' ? calcColor(rank_max, rank) : data[id]['Color'] );\n    //color.setHex(rank/10 * 0xffffff );\n   // color.setHex(rank/10 * 0xffffff );\n\n\n    var cylinderMesh = function( startPoint, endPoint, midPoint, currRadius, nextRadius, color ) {\n      /* edge from X to Y */\n      const direction = new THREE.Vector3().subVectors( endPoint, startPoint );\n\n      const orientation = new THREE.Matrix4();\n      /* THREE.Object3D().up (=Y) default orientation for all objects */\n      orientation.lookAt(startPoint, endPoint, new THREE.Object3D().up);\n\n      /* rotation around axis X by -90 degrees \n      * matches the default orientation Y \n      * with the orientation of looking Z */\n      const mat =  new THREE.Matrix4();\n      mat.set(\n        1,0,0,0,\n        0,0,1,0, \n        0,1,0,0,\n        0,0,0,1\n      );\n      orientation.multiply(mat);\n\n      /* cylinder: radiusAtTop, radiusAtBottom, \n          height, radiusSegments, heightSegments */\n      const edgeGeometry = new THREE.CylinderGeometry( currRadius, nextRadius, CYLINDER_HEIGHT, 8, 1);\n      const cylinder = new THREE.Mesh( edgeGeometry, new THREE.MeshPhongMaterial( { color: color, flatShading : true } ) );\n\n      cylinder.applyMatrix4(orientation)\n      cylinder.position.set(midPoint.x, midPoint.y, midPoint.z);\n      cylinder.cursor = 'pointer';\n      cylinder.on('click', function(ev) {\n\n        resetOpacity();\n        const newMaterial = cylinder.material.clone();\n        newMaterial.transparent = true;\n        newMaterial.opacity = 0.5;\n        cylinder.material = newMaterial;\n\n        texts.forEach(function (text) {\n            var selectedObject = scene.getObjectByName(text.name);\n            scene.remove( selectedObject );\n        });\n\n        var text = '';\n        data[id][\"Nodes\"].forEach(function (elem) {\n          if (text !== '') {\n            text += ',';\n          }\n          text += ' (';\n          const bin = dec2bin(elem, number_of_nodes);\n\n          for (let i = 0; i < bin.length; i++) {\n            if (bin[i] === '1') {\n              text += ' ' + nodes_ids[i];\n            }\n          }\n          text += ')';\n        });\n\n        div.innerHTML =  \"<b>Rank</b>: \" + data[id][\"Rank\"] + \"<br><b>Nodes</b>: \" + text;\n\n      });\n\n      return cylinder;\n    }\n\n    const midPoint = new Point((startPoint.x + endPoint.x) / 2, (startPoint.y + endPoint.y) / 2, (startPoint.z + endPoint.z) / 2);\n    return cylinderMesh(startPoint, endPoint, midPoint, currRadius, nextRadius, color); //new THREE.Mesh(geometryCyl, material);\n\n  }\n\n  function getChildsChilds(data, cluster) {\n    var childsChildCount = 0;\n    for (var i = 0; i < cluster[\"Desc\"].length; ++i) {\n      childsChildCount += data[cluster[\"Desc\"][i]][\"Desc\"].length;\n    }\n\n    return childsChildCount;\n  }\n\n  // prevPoint, point - upper and downer middle points of cylinder\n  // dirPoint - point to which direction of cylinder (dir vector) should go \n  function clustering(scene, data, id, max_branching, prevPointFirst, pointFirst, biggestRank) {\n\n    if (id === undefined) {\n      console.log(\"Id is undefined in clustering\");\n      return;\n    }\n    const firstId = id;\n\n    var tuple = Object.freeze({ id: id, prevPoint: prevPointFirst, point: pointFirst });\n    var stack = [ tuple ];\n\n    const yaxis = new Point(0, 1, 0);\n \n    while (stack.length > 0) {\n      const stackElement = stack.pop();\n      const current = stackElement.id;\n      const prevPoint = stackElement.prevPoint;\n      const point = stackElement.point;\n\n      var cluster = data[current];\n      const childCount = cluster[\"Desc\"].length;\n      console.log(current, childCount);\n\n      var childsChildCount = getChildsChilds(data, cluster);\n\n      const upperRadius = childCount;\n      const lowerRadius = childsChildCount;\n      var cylinder = createCylinder(data, current, prevPoint, point, upperRadius, lowerRadius, data[current][\"Rank\"], biggestRank);\n\n      const dirVector = new Point(point.x - prevPoint.x, point.y - prevPoint.y, point.z - prevPoint.z);\n\n      /* Compute angle of rotation of parent cylinder */\n      const radians = (yaxis.x * dirVector.x + yaxis.y * dirVector.y + yaxis.z * dirVector.z)/Math.sqrt(dirVector.x * dirVector.x + dirVector.y * dirVector.y + dirVector.z * dirVector.z);\n      const angle  = rad2degrees(radians);\n      console.log(angle);\n      // help\n      const c = Math.cos(angle);\n      const s = Math.sin(angle);\n      const matrix = [ [c, 0, s], [0, 1, 0], [-s, 0, c] ]; // rotation around y axis\n\n\n      for (var i = 0; i < childCount; ++i) {\n\n        if (childCount === 1) {\n\n            var newStartPoint = new Point(point.x, point.y, point.z); // to make copy\n            const newPoint = new Point(dirVector.x + point.x, dirVector.y + point.y, dirVector.z + point.z);\n\n            tuple = Object.freeze({ id: cluster[\"Desc\"][0], prevPoint: newStartPoint, point: newPoint });\n            stack.push(tuple);\n          \n          continue;\n        }\n\n        console.log(i);\n\n        // COMPUTE NEW COORDINATES around circle - not rotated circle\n        const theta = 2 * Math.PI / childCount * i;\n        const h = childCount / 2;\n\n        var fi = i * theta;\n        if (i <= h && i % 2 === 1) {\n          fi = (Math.ceil(h) - 1 + i) * theta;\n        } else if (i > h && (childCount - 1 - i) % 2 === 0) {\n          fi = (childCount - i) * theta;\n        } if (i > h && (childCount - 1 - i) % 2 === 1) {\n          fi = (Math.ceil(h) - 1 + childCount - i) * theta;\n        }\n\n        var xPos = lowerRadius * Math.cos(theta);\n        var zPos = lowerRadius * Math.sin(theta);\n        var newStartPointHelper = new Point(point.x + xPos, point.y, point.z + zPos); // needs to be rotated acc angle accoring prevPoint\n\n        const translationMatrix = [\n          [1, 0, 0, -prevPoint.x],\n          [0, 1, 0, -prevPoint.y],\n          [0, 0, 1, -prevPoint.z],\n          [0, 0, 0, 1]\n        ];\n\n        const translationMatrixBack = [\n          [1, 0, 0, prevPoint.x],\n          [0, 1, 0, prevPoint.y],\n          [0, 0, 1, prevPoint.z],\n          [0, 0, 0, 1]\n        ];\n\n        const transPoint     = createPoint( multiplyMatrix(translationMatrix, newStartPointHelper.getMatrix4()) );\n        const rotPoint       = transPoint; //createPoint( multiplyMatrix(matrix, transPoint.getMatrix()) );\n        const transBackPoint = createPoint( multiplyMatrix(translationMatrixBack, rotPoint.getMatrix4()) );\n\n        const vector = new THREE.Vector3(transBackPoint.x - prevPoint.x, transBackPoint.y - prevPoint.y, transBackPoint.z - prevPoint.z).normalize();\n\n        const childNodeCount = data[cluster[\"Desc\"][i]][\"Desc\"].length;\n        const radius = childsChildCount > cluster.Node ? childsChildCount - cluster[\"Desc\"].length : childsChildCount;\n        const distance = Math.sqrt(radius * radius + CYLINDER_HEIGHT * CYLINDER_HEIGHT);\n        newStartPoint = new Point(\n          prevPoint.x + distance * vector.x,\n          prevPoint.y + distance * vector.y,\n          prevPoint.z + distance * vector.z,\n        );\n\n        const newEndPoint = new Point(\n          newStartPoint.x + CYLINDER_HEIGHT * vector.x,\n          newStartPoint.y + CYLINDER_HEIGHT * vector.y,\n          newStartPoint.z + CYLINDER_HEIGHT * vector.z,\n        );\n      \n        tuple = Object.freeze({ id: cluster[\"Desc\"][i], prevPoint: newStartPoint, point: newEndPoint });\n        stack.push(tuple);\n      }\n\n      if (cylinder !== undefined) {\n        cylinders.push(cylinder);\n       // if (current === firstId) {\n          scene.add(cylinder);\n       // }\n      }\n\n    }\n  }\n\n  function compMaxBranching(data, key) {\n\n    let stack = [ key ];\n    var maximums = {}\n    var colors = {}\n\n    while (stack.length > 0) {\n      const current = stack.pop();\n      colors[current] = 'G';\n      stack.push(current);\n      \n      if (maximums[current] === undefined) {\n        maximums[current] = 0\n      }\n\n      var count_black = 0;\n      const desc_count = data[current][\"Desc\"].length;\n      for (var i = 0; i < desc_count; ++i) {\n        if (colors[data[current][\"Desc\"][i]] === undefined) {\n          stack.push(data[current][\"Desc\"][i]);\n        } \n\n        if (colors[data[current][\"Desc\"][i]] === 'B') {\n          count_black += 1;\n          maximums[current] = Math.max(maximums[ data[current][\"Desc\"][i] ], maximums[current]);\n        }\n      }\n\n      if (count_black === desc_count) {\n        colors[current] = 'B';\n        stack.pop();\n\n        if (desc_count > 1) {\n          maximums[current] += 1;\n        }\n      }\n    }\n\n    return maximums[key];\n  }\n\n  function processClusters(scene, data) {\n\n    var root_cluster_key = undefined;\n    var biggestRank = 0;\n    Object.entries(data).forEach(([k,v]) => {\n      if (v[\"Rank\"] === 0) {\n        root_cluster_key = k;\n      }\n      biggestRank = Math.max(v[\"Rank\"], biggestRank);\n    });\n\n    const max_branching = compMaxBranching(data, root_cluster_key);\n\n    const firstHeight = biggestRank * CYLINDER_HEIGHT / 2 + CYLINDER_HEIGHT;\n    const firstStartPoint = new Point(0, firstHeight, 0);\n    const firstEndPoint = new Point(0, firstHeight - CYLINDER_HEIGHT, 0);\n\n    clustering(scene, data, root_cluster_key, max_branching, firstStartPoint, firstEndPoint, biggestRank);\n  }\n}\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}