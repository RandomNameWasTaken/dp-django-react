{"ast":null,"code":"import _slicedToArray from\"/home/xkruzel/Desktop/todo/reactapp/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import*as THREE from\"three\";import{OrbitControls}from\"three/examples/jsm/controls/OrbitControls\";import*as dat from\"dat.gui\";import{Point}from\"./Point\";import{Interaction}from\"three.interaction-fixed\";import*as rendering_utils from'./rendering_utils.js';export function init3Dgraphics(canvas,description_div,gui_div,data,nodes_ids,h,w){if(data===undefined){return false;}var number_of_nodes=Object.keys(nodes_ids).length;var scene=new THREE.Scene();scene.background=new THREE.Color(0xf8f2ea);var camera=new THREE.PerspectiveCamera(75,canvas.width/canvas.height,0.1,1000);var renderer=new THREE.WebGLRenderer({canvas:canvas});renderer.setPixelRatio(window.devicePixelRatio);renderer.setSize(canvas.width,canvas.height);// full size\ncamera.position.setZ(100);// for better perspective\nrenderer.sortObjects=false;renderer.render(scene,camera);new Interaction(renderer,scene,camera);// For showing text information about clusters\nvar texts=[];var cylinders=[];var gui=new dat.GUI({autoPlace:false});gui_div.append(gui.domElement);var pointLight=new THREE.PointLight(0x818085);pointLight.position.set(20,20,20);var ambientLight=new THREE.AmbientLight(0xffffff);ambientLight.position.set(20,20,20);scene.add(pointLight,ambientLight);window.addEventListener(\"resize\",function(){camera.aspect=canvas.width/canvas.height;camera.updateProjectionMatrix();renderer.setSize(canvas.width);});var controls=new OrbitControls(camera,renderer.domElement);processClusters(scene,data);data=null;function animate(){setTimeout(function(){requestAnimationFrame(animate);},1000/5);controls.update();renderer.render(scene,camera);pointLight.position.copy(camera.position);}renderer.setAnimationLoop(animate);window.addEventListener(\"resize\",function(){camera.aspect=canvas.width/canvas.width;camera.updateProjectionMatrix();renderer.setSize(canvas.width,canvas.width);});var group=new THREE.Group();cylinders.forEach(function(cyl){group.add(cyl);});scene.add(group);rendering_utils.createControls(gui,cylinders,group);function clustering(id,prevPointFirst,pointFirst,biggestRank){if(id===undefined){console.log(\"Id is undefined in clustering\");return;}var tuple=Object.freeze({id:id,prevPoint:prevPointFirst,point:pointFirst});var stack=[tuple];// to change direction of descendant for situations when cluster has \"Separate\" and only 1 other descendant\n// according this the position is swiped from left to right - alternating\nvar last_dir_right=false;while(stack.length>0){var stackElement=stack.pop();var current=stackElement.id;var prevPoint=stackElement.prevPoint;var point=stackElement.point;var cluster=data[current];var childCount=cluster[\"Desc\"].length;var childsChildCount=rendering_utils.getChildsChilds(data,cluster);var upperRadius=cluster.NodeCount;var lowerRadius=childCount===1?childsChildCount:childsChildCount+cluster[\"Desc\"].length+(cluster[\"Separate\"]!==undefined?1:0);var cylinder=rendering_utils.createCylinder(data,current,prevPoint,point,upperRadius,lowerRadius,data[current][\"Rank\"],biggestRank,cylinders,texts,scene,description_div,nodes_ids,number_of_nodes);cylinders.push(cylinder);scene.add(cylinder);var dirVector=new THREE.Vector3(point.x-prevPoint.x,point.y-prevPoint.y,point.z-prevPoint.z);if(cluster[\"Separate\"]!==undefined){stack.push(rendering_utils.createCoordinatesForSingleSon(point,prevPoint,cluster[\"Separate\"]));}for(var i=0;i<childCount;++i){if(childCount===1&&cluster[\"Separate\"]===undefined){stack.push(rendering_utils.createCoordinatesForSingleSon(point,prevPoint,cluster[\"Desc\"][0]));continue;}var uVector=new THREE.Vector3(-1*dirVector.y,dirVector.x,0).normalize();var adota=uVector.dot(uVector);var crossProductVec=rendering_utils.crossProduct(dirVector,uVector);var vVector=crossProductVec.divideScalar(adota).normalize();// COMPUTE NEW COORDINATES around circle\nvar theta=2*Math.PI/childCount*i;if(childCount===1){if(last_dir_right===true){theta=Math.PI;// not 0 but 180\n}last_dir_right=!last_dir_right;}var sin=Math.sin(theta);var cos=Math.cos(theta);var u=uVector.multiplyScalar(cos*lowerRadius);var v=vVector.multiplyScalar(sin*lowerRadius);var newStartPointHelper=u.add(v).add(new THREE.Vector3(point.x,point.y,point.z));// Vector which will be prolonged from prevPoint to newStartPointer -> to create newEndPoint\nvar vector=new THREE.Vector3(newStartPointHelper.x-prevPoint.x,newStartPointHelper.y-prevPoint.y,newStartPointHelper.z-prevPoint.z).normalize();var newEndPoint=new Point(newStartPointHelper.x+rendering_utils.CYLINDER_HEIGHT*vector.x,newStartPointHelper.y+rendering_utils.CYLINDER_HEIGHT*vector.y,newStartPointHelper.z+rendering_utils.CYLINDER_HEIGHT*vector.z);tuple=Object.freeze({id:cluster[\"Desc\"][i],prevPoint:newStartPointHelper,point:newEndPoint});stack.push(tuple);}}}function processClusters(scene,data){var root_cluster_key=undefined;var biggestRank=0;Object.entries(data).forEach(function(_ref){var _ref2=_slicedToArray(_ref,2),k=_ref2[0],v=_ref2[1];if(v[\"Rank\"]===0){root_cluster_key=k;}biggestRank=Math.max(v[\"Rank\"],biggestRank);});var firstHeight=biggestRank*rendering_utils.CYLINDER_HEIGHT/2+rendering_utils.CYLINDER_HEIGHT;var firstStartPoint=new Point(-20,firstHeight,0);var firstEndPoint=new Point(-20,firstHeight-rendering_utils.CYLINDER_HEIGHT,0);clustering(root_cluster_key,firstStartPoint,firstEndPoint,biggestRank);}}","map":{"version":3,"names":["THREE","OrbitControls","dat","Point","Interaction","rendering_utils","init3Dgraphics","canvas","description_div","gui_div","data","nodes_ids","h","w","undefined","number_of_nodes","Object","keys","length","scene","Scene","background","Color","camera","PerspectiveCamera","width","height","renderer","WebGLRenderer","setPixelRatio","window","devicePixelRatio","setSize","position","setZ","sortObjects","render","texts","cylinders","gui","GUI","autoPlace","append","domElement","pointLight","PointLight","set","ambientLight","AmbientLight","add","addEventListener","aspect","updateProjectionMatrix","controls","processClusters","animate","setTimeout","requestAnimationFrame","update","copy","setAnimationLoop","group","Group","forEach","cyl","createControls","clustering","id","prevPointFirst","pointFirst","biggestRank","console","log","tuple","freeze","prevPoint","point","stack","last_dir_right","stackElement","pop","current","cluster","childCount","childsChildCount","getChildsChilds","upperRadius","NodeCount","lowerRadius","cylinder","createCylinder","push","dirVector","Vector3","x","y","z","createCoordinatesForSingleSon","i","uVector","normalize","adota","dot","crossProductVec","crossProduct","vVector","divideScalar","theta","Math","PI","sin","cos","u","multiplyScalar","v","newStartPointHelper","vector","newEndPoint","CYLINDER_HEIGHT","root_cluster_key","entries","k","max","firstHeight","firstStartPoint","firstEndPoint"],"sources":["/home/xkruzel/Desktop/todo/reactapp/src/rendering.js"],"sourcesContent":["import * as THREE from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport * as dat from \"dat.gui\";\nimport { Point } from \"./Point\";\nimport { Interaction } from \"three.interaction-fixed\";\nimport * as rendering_utils from './rendering_utils.js';\n\nexport function init3Dgraphics(canvas, description_div, gui_div, data, nodes_ids, h, w) {\n  if (data === undefined) {\n    return false;\n  }\n\n  const number_of_nodes = Object.keys(nodes_ids).length;\n\n  const scene = new THREE.Scene();\n  scene.background = new THREE.Color(0xf8f2ea);\n  const camera = new THREE.PerspectiveCamera(\n    75,\n    canvas.width / canvas.height,\n    0.1,\n    1000\n  );\n  const renderer = new THREE.WebGLRenderer({\n    canvas: canvas,\n  });\n\n  renderer.setPixelRatio(window.devicePixelRatio);\n  renderer.setSize(canvas.width, canvas.height); // full size\n  camera.position.setZ(100); // for better perspective\n  renderer.sortObjects = false;\n  renderer.render(scene, camera);\n\n  new Interaction(renderer, scene, camera);\n\n  // For showing text information about clusters\n  var texts = [];\n  var cylinders = [];\n  \n  const gui = new dat.GUI( { autoPlace: false } );\n  gui_div.append(gui.domElement);\n\n\n  const pointLight = new THREE.PointLight(0x818085);\n  pointLight.position.set(20, 20, 20);\n\n  const ambientLight = new THREE.AmbientLight(0xffffff);\n  ambientLight.position.set(20, 20, 20);\n\n  scene.add(pointLight, ambientLight);\n\n  window.addEventListener(\"resize\", function () {\n    camera.aspect = canvas.width / canvas.height;\n    camera.updateProjectionMatrix();\n    renderer.setSize(canvas.width);\n  });\n\n  const controls = new OrbitControls(camera, renderer.domElement);\n\n  processClusters(scene, data);\n  data = null;\n\n  function animate() {\n    setTimeout(function () {\n      requestAnimationFrame(animate);\n    }, 1000 / 5);\n\n    controls.update();\n    renderer.render(scene, camera);\n    pointLight.position.copy(camera.position);\n  }\n\n  renderer.setAnimationLoop(animate);\n\n  window.addEventListener(\"resize\", function () {\n    camera.aspect = canvas.width / canvas.width;\n    camera.updateProjectionMatrix();\n    renderer.setSize(canvas.width, canvas.width);\n  });  \n\n  const group = new THREE.Group();\n  cylinders.forEach(function (cyl) {\n    group.add(cyl)\n  });\n  scene.add(group);\n\n  rendering_utils.createControls(gui, cylinders, group);\n\n  function clustering(\n    id,\n    prevPointFirst,\n    pointFirst,\n    biggestRank\n  ) {\n    if (id === undefined) {\n      console.log(\"Id is undefined in clustering\");\n      return;\n    }\n\n    var tuple = Object.freeze({\n      id:        id,\n      prevPoint: prevPointFirst,\n      point:     pointFirst,\n    });\n    var stack = [tuple];\n\n  // to change direction of descendant for situations when cluster has \"Separate\" and only 1 other descendant\n  // according this the position is swiped from left to right - alternating\n    var last_dir_right = false;\n\n    while (stack.length > 0) {\n      const stackElement = stack.pop();\n      const current = stackElement.id;\n      const prevPoint = stackElement.prevPoint;\n      const point = stackElement.point;\n\n      var cluster = data[current];\n      const childCount = cluster[\"Desc\"].length;\n\n      var childsChildCount = rendering_utils.getChildsChilds(data, cluster);\n\n      const upperRadius = cluster.NodeCount;\n      const lowerRadius =\n        childCount === 1\n          ? childsChildCount\n          : childsChildCount + cluster[\"Desc\"].length + (cluster[\"Separate\"] !== undefined ? 1 : 0);\n\n      var cylinder = rendering_utils.createCylinder(\n        data,\n        current,\n        prevPoint,\n        point,\n        upperRadius,\n        lowerRadius,\n        data[current][\"Rank\"],\n        biggestRank,\n        cylinders,\n        texts,\n        scene,\n        description_div,\n        nodes_ids,\n        number_of_nodes\n      );\n\n      cylinders.push(cylinder);\n      scene.add(cylinder);\n\n      var dirVector = new THREE.Vector3(\n        point.x - prevPoint.x,\n        point.y - prevPoint.y,\n        point.z - prevPoint.z\n      );\n\n      if (cluster[\"Separate\"] !== undefined) {\n          stack.push( rendering_utils.createCoordinatesForSingleSon(point, prevPoint, cluster[\"Separate\"]) );\n      }\n\n      for (var i = 0; i < childCount; ++i) {\n\n        if (childCount === 1 && cluster[\"Separate\"] === undefined) {\n          stack.push( rendering_utils.createCoordinatesForSingleSon(point, prevPoint, cluster[\"Desc\"][0]) );\n          continue;\n        }\n\n        const uVector = new THREE.Vector3((-1) * dirVector.y, dirVector.x, 0).normalize();\n\n        const adota = uVector.dot(uVector);\n        const crossProductVec = rendering_utils.crossProduct(dirVector, uVector);\n        const vVector = crossProductVec.divideScalar(adota).normalize();\n\n        // COMPUTE NEW COORDINATES around circle\n        var theta = (2*Math.PI / childCount) * i;\n        if (childCount === 1) {\n          if (last_dir_right === true) {\n            theta = Math.PI; // not 0 but 180\n          }\n          last_dir_right = !last_dir_right;\n        }\n\n        const sin = Math.sin(theta);\n        const cos = Math.cos(theta);\n\n        const u = uVector.multiplyScalar(cos * lowerRadius);\n        const v = vVector.multiplyScalar(sin * lowerRadius);\n\n        var newStartPointHelper = u\n          .add(v)\n          .add(new THREE.Vector3(point.x, point.y, point.z));\n\n\n        // Vector which will be prolonged from prevPoint to newStartPointer -> to create newEndPoint\n        const vector = new THREE.Vector3(\n          newStartPointHelper.x - prevPoint.x,\n          newStartPointHelper.y - prevPoint.y,\n          newStartPointHelper.z - prevPoint.z\n        ).normalize();\n\n        const newEndPoint = new Point(\n          newStartPointHelper.x + rendering_utils.CYLINDER_HEIGHT * vector.x,\n          newStartPointHelper.y + rendering_utils.CYLINDER_HEIGHT * vector.y,\n          newStartPointHelper.z + rendering_utils.CYLINDER_HEIGHT * vector.z\n        );\n\n        tuple = Object.freeze({\n          id: cluster[\"Desc\"][i],\n          prevPoint: newStartPointHelper,\n          point: newEndPoint,\n        });\n        stack.push(tuple);\n      }\n    }\n  }\n\n  function processClusters(scene, data) {\n    var root_cluster_key = undefined;\n    var biggestRank = 0;\n    Object.entries(data).forEach(([k, v]) => {\n      if (v[\"Rank\"] === 0) {\n        root_cluster_key = k;\n      }\n      biggestRank = Math.max(v[\"Rank\"], biggestRank);\n    });\n\n    const firstHeight = (biggestRank * rendering_utils.CYLINDER_HEIGHT) / 2 + rendering_utils.CYLINDER_HEIGHT;\n    const firstStartPoint = new Point(-20, firstHeight,                   0);\n    const firstEndPoint   = new Point(-20, firstHeight - rendering_utils.CYLINDER_HEIGHT, 0);\n\n    clustering(\n      root_cluster_key,\n      firstStartPoint,\n      firstEndPoint,\n      biggestRank\n    );\n    \n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}