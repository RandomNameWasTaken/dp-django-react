{"ast":null,"code":"import _slicedToArray from\"/home/xkruzel/Desktop/todo/reactapp/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import*as THREE from'three';import{OrbitControls}from'three/examples/jsm/controls/OrbitControls';import*as dat from'dat.gui';import{Point}from'./Point';import{Interaction}from'three.interaction-fixed';import{dec2bin}from\"./utils\";export function init3Dgraphics(canvas,div,data,nodes_ids,h,w){if(data===undefined){return false;}var _require=require('mathjs'),matrix=_require.matrix,multiply=_require.multiply;var CYLINDER_HEIGHT=5;var scene=new THREE.Scene();//scene.background = new THREE.Color( 0xd3d3d3 );\nscene.background=new THREE.Color(0xf8f2ea);var camera=new THREE.PerspectiveCamera(75,canvas.width/canvas.height,0.1,1000);var renderer=new THREE.WebGLRenderer({canvas:canvas});renderer.setPixelRatio(window.devicePixelRatio);renderer.setSize(canvas.width,canvas.height);// full size\ncamera.position.setZ(30);// for better perspective\nrenderer.sortObjects=false;renderer.render(scene,camera);new Interaction(renderer,scene,camera);// For showing text information about clusters\nvar texts=[];var cylinders=[];//const axesHelper = new THREE.AxesHelper(100);\n//scene.add(axesHelper);\n/*\n  const gui = new dat.GUI();\n  const options = {\n    sphereColor : 0xffea00,\n    wireframe: false,\n  };\n*/var pointLight=new THREE.PointLight(0xffffff);pointLight.position.set(20,20,20);var ambientLight=new THREE.AmbientLight(0xffffff);ambientLight.position.set(20,20,20);scene.add(pointLight,ambientLight);//const lightHelper = new THREE.PointLightHelper(pointLight);  // shows position of lighsource\n//const gridHelper = new THREE.GridHelper(30, 20);\n//scene.add(lightHelper, gridHelper);\nwindow.addEventListener('resize',function(){camera.aspect=canvas.width/canvas.height;camera.updateProjectionMatrix();renderer.setSize(canvas.width);});var controls=new OrbitControls(camera,renderer.domElement);processClusters(scene,data);data=null;function animate(){setTimeout(function(){requestAnimationFrame(animate);},1000/5);controls.update();renderer.render(scene,camera);pointLight.position.copy(camera.position);}renderer.setAnimationLoop(animate);window.addEventListener('resize',function(){camera.aspect=canvas.width/canvas.width;camera.updateProjectionMatrix();renderer.setSize(canvas.width,canvas.width);});function calcColor(max,val){return\"hsla(147, 0%, 50%, 1)\";/*\n    const min = 0\n    var minHue = 240, maxHue=0;\n    var curPercent = (val - min) / (max-min);\n    var colString = \"hsl(\" + ((curPercent * (maxHue-minHue) ) + minHue) + \",65%,50%)\";\n    return colString;\n    */}function resetOpacity(){cylinders.forEach(function(cylinder){cylinder.opacity=1;//cylinder.materials[0].opacity = 1;\n});}function createCylinder(data,id,startPoint,endPoint,currRadius,nextRadius,rank,rank_max){var color=new THREE.Color(data[id]['Color']===''?calcColor(rank_max,rank):data[id]['Color']);//color.setHex(rank/10 * 0xffffff );\n// color.setHex(rank/10 * 0xffffff );\nvar cylinderMesh=function cylinderMesh(startPoint,endPoint,midPoint,currRadius,nextRadius,color){/* edge from X to Y */var direction=new THREE.Vector3().subVectors(endPoint,startPoint);var orientation=new THREE.Matrix4();/* THREE.Object3D().up (=Y) default orientation for all objects */orientation.lookAt(startPoint,endPoint,new THREE.Object3D().up);/* rotation around axis X by -90 degrees \n      * matches the default orientation Y \n      * with the orientation of looking Z */var mat=new THREE.Matrix4();mat.set(1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,1);orientation.multiply(mat);/* cylinder: radiusAtTop, radiusAtBottom, \n          height, radiusSegments, heightSegments */var edgeGeometry=new THREE.CylinderGeometry(currRadius,nextRadius,CYLINDER_HEIGHT,8,1);var cylinder=new THREE.Mesh(edgeGeometry,new THREE.MeshPhongMaterial({color:color,flatShading:true}));cylinder.applyMatrix4(orientation);cylinder.position.set(midPoint.x,midPoint.y,midPoint.z);cylinder.cursor='pointer';cylinder.on('click',function(ev){resetOpacity();cylinder.opacity=0.5;//cylinder.materials[0].opacity = 0.5;\ntexts.forEach(function(text){var selectedObject=scene.getObjectByName(text.name);scene.remove(selectedObject);});var text='';data[id][\"Nodes\"].forEach(function(elem){if(text!==''){text+=',';}text+=' (';var bin=dec2bin(elem,nodes_ids.length);for(var i=0;i<bin.length;i++){if(bin[i]==='1'){text+=' '+nodes_ids[i];}}text+=')';});div.innerHTML=data[id][\"Rank\"]+\"; \"+text;});return cylinder;};var midPoint=new Point((startPoint.x+endPoint.x)/2,(startPoint.y+endPoint.y)/2,(startPoint.z+endPoint.z)/2);return cylinderMesh(startPoint,endPoint,midPoint,currRadius,nextRadius,color);//new THREE.Mesh(geometryCyl, material);\n}function getChildsChilds(data,cluster){var childsChildCount=0;for(var i=0;i<cluster[\"Desc\"].length;++i){childsChildCount+=data[cluster[\"Desc\"][i]][\"NodeCount\"];}return childsChildCount;}// prevPoint, point - upper and downer middle points of cylinder\n// dirPoint - point to which direction of cylinder (dir vector) should go \nfunction clustering(scene,data,id,max_branching,prevPointFirst,pointFirst,biggestRank){if(id===undefined){console.log(\"Id is undefined in clustering\");return;}var firstId=id;var tuple=Object.freeze({id:id,prevPoint:prevPointFirst,point:pointFirst});var stack=[tuple];var yaxis=new Point(0,1,0);while(stack.length>0){var stackElement=stack.pop();var current=stackElement.id;var prevPoint=stackElement.prevPoint;var point=stackElement.point;var cluster=data[current];var childCount=cluster[\"Desc\"].length;var childsChildCount=getChildsChilds(data,cluster);var cylinder=createCylinder(data,current,prevPoint,point,cluster.NodeCount,childsChildCount,data[current][\"Rank\"],biggestRank);var prevPointPointDist=Math.sqrt((point.x-prevPoint.x)*(point.x-prevPoint.x)+(point.y-prevPoint.y)*(point.y-prevPoint.y)+(point.z-prevPoint.z)*(point.z-prevPoint.z));for(var i=0;i<childCount;++i){if(childCount===1){var newStartPoint=new Point(point.x,point.y,point.z);// to make copy\n/*            if (childsChildCount === cluster[\"Desc\"].length && childsChildCount !== 0 && data[cluster[\"Desc\"][0]][\"Desc\"].length !== 0) {\n              cylinder = undefined; // join same-like cluster to one - draw one cluster with bigger height\n              newStartPoint = new Point(prevPoint.x, prevPoint.y, prevPoint.z); // to make copy\n            }\n*/var dirVector=new THREE.Vector3(point.x-prevPoint.x,point.y-prevPoint.y,point.z-prevPoint.z);var newPoint=new Point(dirVector.x+point.x,dirVector.y+point.y,dirVector.z+point.z);tuple=Object.freeze({id:cluster[\"Desc\"][0],prevPoint:newStartPoint,point:newPoint});stack.push(tuple);continue;}// COMPUTE NEW COORDINATES around circle\nvar theta=2*Math.PI/childCount;var _h=childCount/2;var fi=i*theta;if(i<=_h&&i%2===1){fi=(Math.ceil(_h)-1+i)*theta;}else if(i>_h&&(childCount-1-i)%2===0){fi=(childCount-i)*theta;}if(i>_h&&(childCount-1-i)%2===1){fi=(Math.ceil(_h)-1+childCount-i)*theta;}var xPos=childsChildCount*Math.cos(fi);var zPos=childsChildCount*Math.sin(fi);var newStartPointHelper=new Point(point.x+xPos,point.y,point.z+zPos);var vector=new THREE.Vector3(newStartPointHelper.x-prevPoint.x,newStartPointHelper.y-prevPoint.y,newStartPointHelper.z-prevPoint.z).normalize();var angle=(yaxis.x*vector.x+yaxis.y*vector.y+yaxis.z*vector.z)/Math.sqrt(vector.x*vector.x+vector.y*vector.y+vector.z*vector.z);var childNodeCount=data[cluster[\"Desc\"][i]].NodeCount;var radius=cluster.NodeCount;//childsChildCount > cluster.Node ? childsChildCount - cluster.NodeCount : childsChildCount;\nvar distance=Math.sqrt(radius*radius+CYLINDER_HEIGHT*CYLINDER_HEIGHT);console.log(distance);newStartPoint=new Point(prevPoint.x+distance*vector.x,prevPoint.y+distance*vector.y,prevPoint.z+distance*vector.z);var newEndPoint=new Point(newStartPoint.x+CYLINDER_HEIGHT*vector.x,newStartPoint.y+CYLINDER_HEIGHT*vector.y,newStartPoint.z+CYLINDER_HEIGHT*vector.z);//    const newVector = [newEndPoint.x - newStartPoint.xnewEndPoint.y - newStartPoint.y, newEndPoint.z - newStartPoint.z];\nconsole.log([[Math.cos(angle),0,Math.sin(angle)],[0,1,0],[-Math.sin(angle),0,Math.cos(angle)]]);var _matrix=[[Math.cos(angle),0,Math.sin(angle)],[0,1,0],[-Math.sin(angle),0,Math.cos(angle)]];var c=Math.cos(angle);var s=Math.sin(angle);var transStartPoint=new Point(c*newStartPoint.x+s*newStartPoint.x,newStartPoint.y,-s*newStartPoint.x+c*newStartPoint.z);var transEndPoint=new Point(c*newEndPoint.x+s*newEndPoint.x,newEndPoint.y,-s*newEndPoint.x+c*newEndPoint.z);// const branch_factor = 2 - (1/max_branching);\n// xPos = Math.cos(fi) * childsChildCount * branch_factor;\n// zPos = Math.sin(fi) * childsChildCount * branch_factor;\n//  const newEndPoint = new Point(newStartPoint.x + xPos, newStartPoint.y - CYLINDER_HEIGHT, newStartPoint.z + zPos);\ntuple=Object.freeze({id:cluster[\"Desc\"][i],prevPoint:transStartPoint,point:transEndPoint});stack.push(tuple);}if(cylinder!==undefined){cylinders.push(cylinder);// if (current === firstId) {\nscene.add(cylinder);// }\n}}}function compMaxBranching(data,key){var stack=[key];var maximums={};var colors={};while(stack.length>0){var current=stack.pop();colors[current]='G';stack.push(current);if(maximums[current]===undefined){maximums[current]=0;}var count_black=0;var desc_count=data[current][\"Desc\"].length;for(var i=0;i<desc_count;++i){if(colors[data[current][\"Desc\"][i]]===undefined){stack.push(data[current][\"Desc\"][i]);}if(colors[data[current][\"Desc\"][i]]==='B'){count_black+=1;maximums[current]=Math.max(maximums[data[current][\"Desc\"][i]],maximums[current]);}}if(count_black===desc_count){colors[current]='B';stack.pop();if(desc_count>1){maximums[current]+=1;}}}return maximums[key];}function processClusters(scene,data){var root_cluster_key=undefined;var biggestRank=0;Object.entries(data).forEach(function(_ref){var _ref2=_slicedToArray(_ref,2),k=_ref2[0],v=_ref2[1];if(v[\"Rank\"]===0){root_cluster_key=k;}biggestRank=Math.max(v[\"Rank\"],biggestRank);});var max_branching=compMaxBranching(data,root_cluster_key);var firstHeight=biggestRank*CYLINDER_HEIGHT/2+CYLINDER_HEIGHT;var firstStartPoint=new Point(0,firstHeight,0);var firstEndPoint=new Point(0,firstHeight-CYLINDER_HEIGHT,0);clustering(scene,data,root_cluster_key,max_branching,firstStartPoint,firstEndPoint,biggestRank);}}","map":{"version":3,"names":["THREE","OrbitControls","dat","Point","Interaction","dec2bin","init3Dgraphics","canvas","div","data","nodes_ids","h","w","undefined","require","matrix","multiply","CYLINDER_HEIGHT","scene","Scene","background","Color","camera","PerspectiveCamera","width","height","renderer","WebGLRenderer","setPixelRatio","window","devicePixelRatio","setSize","position","setZ","sortObjects","render","texts","cylinders","pointLight","PointLight","set","ambientLight","AmbientLight","add","addEventListener","aspect","updateProjectionMatrix","controls","domElement","processClusters","animate","setTimeout","requestAnimationFrame","update","copy","setAnimationLoop","calcColor","max","val","resetOpacity","forEach","cylinder","opacity","createCylinder","id","startPoint","endPoint","currRadius","nextRadius","rank","rank_max","color","cylinderMesh","midPoint","direction","Vector3","subVectors","orientation","Matrix4","lookAt","Object3D","up","mat","edgeGeometry","CylinderGeometry","Mesh","MeshPhongMaterial","flatShading","applyMatrix4","x","y","z","cursor","on","ev","text","selectedObject","getObjectByName","name","remove","elem","bin","length","i","innerHTML","getChildsChilds","cluster","childsChildCount","clustering","max_branching","prevPointFirst","pointFirst","biggestRank","console","log","firstId","tuple","Object","freeze","prevPoint","point","stack","yaxis","stackElement","pop","current","childCount","NodeCount","prevPointPointDist","Math","sqrt","newStartPoint","dirVector","newPoint","push","theta","PI","fi","ceil","xPos","cos","zPos","sin","newStartPointHelper","vector","normalize","angle","childNodeCount","radius","distance","newEndPoint","c","s","transStartPoint","transEndPoint","compMaxBranching","key","maximums","colors","count_black","desc_count","root_cluster_key","entries","k","v","firstHeight","firstStartPoint","firstEndPoint"],"sources":["/home/xkruzel/Desktop/todo/reactapp/src/rendering.js"],"sourcesContent":["import * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport * as dat from 'dat.gui';\nimport { Point } from './Point';\nimport { Interaction } from 'three.interaction-fixed';\nimport { dec2bin  } from \"./utils\";\n\nexport function init3Dgraphics(canvas, div, data, nodes_ids, h, w) {\n\n  if (data === undefined) {\n    return false;\n  }\n  const { matrix, multiply } = require('mathjs')\n\n  const CYLINDER_HEIGHT = 5;\n\n  const scene = new THREE.Scene();\n  //scene.background = new THREE.Color( 0xd3d3d3 );\n  scene.background = new THREE.Color( 0xf8f2ea);\n  const camera = new THREE.PerspectiveCamera(75, canvas.width / canvas.height, 0.1, 1000)\n  const renderer = new THREE.WebGLRenderer({\n    canvas: canvas,\n  });\n\n  renderer.setPixelRatio( window.devicePixelRatio );\n  renderer.setSize(canvas.width, canvas.height); // full size\n  camera.position.setZ(30); // for better perspective\n  renderer.sortObjects = false;\n  renderer.render(scene, camera);\n\n  new Interaction(renderer, scene, camera);\n\n// For showing text information about clusters\n  var texts = [];\n  var cylinders = [];\n\n  //const axesHelper = new THREE.AxesHelper(100);\n  //scene.add(axesHelper);\n\n/*\n  const gui = new dat.GUI();\n  const options = {\n    sphereColor : 0xffea00,\n    wireframe: false,\n  };\n*/    \n  const pointLight = new THREE.PointLight(0xffffff)\n  pointLight.position.set(20, 20, 20);\n\n  const ambientLight = new THREE.AmbientLight(0xffffff)\n  ambientLight.position.set(20, 20, 20);\n\n  scene.add(pointLight, ambientLight);\n\n  //const lightHelper = new THREE.PointLightHelper(pointLight);  // shows position of lighsource\n  //const gridHelper = new THREE.GridHelper(30, 20);\n\n  //scene.add(lightHelper, gridHelper);\n\n  window.addEventListener('resize', function() {\n    camera.aspect = canvas.width / canvas.height;\n    camera.updateProjectionMatrix();\n    renderer.setSize(canvas.width);\n  });\n\n  const controls = new OrbitControls(camera, renderer.domElement);\n\n  processClusters(scene, data);\n  data = null;\n\n  function animate() {\n    setTimeout( function() {\n      requestAnimationFrame( animate );\n    }, 1000 / 5 );\n\n    controls.update();\n    renderer.render(scene, camera);\n    pointLight.position.copy(camera.position );\n  }\n\n  renderer.setAnimationLoop(animate);\n\n  window.addEventListener('resize', function() {\n    camera.aspect = canvas.width / canvas.width\n    camera.updateProjectionMatrix();\n    renderer.setSize(canvas.width, canvas.width);\n  });\n\n\n  function calcColor(max, val) {\n    return \"hsla(147, 0%, 50%, 1)\";\n    /*\n    const min = 0\n    var minHue = 240, maxHue=0;\n    var curPercent = (val - min) / (max-min);\n    var colString = \"hsl(\" + ((curPercent * (maxHue-minHue) ) + minHue) + \",65%,50%)\";\n    return colString;\n    */\n  }\n\n  function resetOpacity() {\n    cylinders.forEach(function (cylinder) {\n        cylinder.opacity = 1;\n        //cylinder.materials[0].opacity = 1;\n    });\n  }\n\n  function createCylinder( data, id, startPoint, endPoint, currRadius, nextRadius, rank, rank_max) {\n    const color = new THREE.Color( data[id]['Color'] === '' ? calcColor(rank_max, rank) : data[id]['Color'] );\n    //color.setHex(rank/10 * 0xffffff );\n   // color.setHex(rank/10 * 0xffffff );\n\n\n    var cylinderMesh = function( startPoint, endPoint, midPoint, currRadius, nextRadius, color ) {\n      /* edge from X to Y */\n      const direction = new THREE.Vector3().subVectors( endPoint, startPoint );\n\n      const orientation = new THREE.Matrix4();\n      /* THREE.Object3D().up (=Y) default orientation for all objects */\n      orientation.lookAt(startPoint, endPoint, new THREE.Object3D().up);\n\n      /* rotation around axis X by -90 degrees \n      * matches the default orientation Y \n      * with the orientation of looking Z */\n      const mat =  new THREE.Matrix4();\n      mat.set(\n        1,0,0,0,\n        0,0,1,0, \n        0,1,0,0,\n        0,0,0,1\n      );\n      orientation.multiply(mat);\n\n      /* cylinder: radiusAtTop, radiusAtBottom, \n          height, radiusSegments, heightSegments */\n      const edgeGeometry = new THREE.CylinderGeometry( currRadius, nextRadius, CYLINDER_HEIGHT, 8, 1);\n      const cylinder = new THREE.Mesh( edgeGeometry, new THREE.MeshPhongMaterial( { color: color, flatShading : true } ) );\n\n      cylinder.applyMatrix4(orientation)\n      cylinder.position.set(midPoint.x, midPoint.y, midPoint.z);\n      cylinder.cursor = 'pointer';\n      cylinder.on('click', function(ev) {\n\n        resetOpacity();\n        cylinder.opacity = 0.5;\n        //cylinder.materials[0].opacity = 0.5;\n        texts.forEach(function (text) {\n            var selectedObject = scene.getObjectByName(text.name);\n            scene.remove( selectedObject );\n        });\n\n        var text = '';\n        data[id][\"Nodes\"].forEach(function (elem) {\n          if (text !== '') {\n            text += ',';\n          }\n          text += ' (';\n          const bin = dec2bin(elem, nodes_ids.length);\n\n          for (let i = 0; i < bin.length; i++) {\n            if (bin[i] === '1') {\n              text += ' ' + nodes_ids[i];\n            }\n          }\n          text += ')';\n        });\n\n        div.innerHTML =  data[id][\"Rank\"] + \"; \" + text;\n\n      });\n\n      return cylinder;\n    }\n\n    const midPoint = new Point((startPoint.x + endPoint.x) / 2, (startPoint.y + endPoint.y) / 2, (startPoint.z + endPoint.z) / 2);\n    return cylinderMesh(startPoint, endPoint, midPoint, currRadius, nextRadius, color); //new THREE.Mesh(geometryCyl, material);\n\n  }\n\n  function getChildsChilds(data, cluster) {\n    var childsChildCount = 0;\n    for (var i = 0; i < cluster[\"Desc\"].length; ++i) {\n      childsChildCount += data[cluster[\"Desc\"][i]][\"NodeCount\"];\n    }\n\n    return childsChildCount;\n  }\n\n  // prevPoint, point - upper and downer middle points of cylinder\n  // dirPoint - point to which direction of cylinder (dir vector) should go \n  function clustering(scene, data, id, max_branching, prevPointFirst, pointFirst, biggestRank) {\n\n    if (id === undefined) {\n      console.log(\"Id is undefined in clustering\");\n      return;\n    }\n    const firstId = id;\n\n    var tuple = Object.freeze({ id: id, prevPoint: prevPointFirst, point: pointFirst });\n    var stack = [ tuple ];\n\n    const yaxis = new Point(0, 1, 0);\n \n    while (stack.length > 0) {\n      const stackElement = stack.pop();\n      const current = stackElement.id;\n      const prevPoint = stackElement.prevPoint;\n      const point = stackElement.point;\n\n      var cluster = data[current];\n      const childCount = cluster[\"Desc\"].length;\n\n      var childsChildCount = getChildsChilds(data, cluster);\n\n      var cylinder = createCylinder(data, current, prevPoint, point, cluster.NodeCount, childsChildCount, data[current][\"Rank\"], biggestRank);\n\n      const prevPointPointDist = Math.sqrt((point.x - prevPoint.x) * (point.x - prevPoint.x) + (point.y - prevPoint.y)\n                              * (point.y - prevPoint.y) + (point.z - prevPoint.z) * (point.z - prevPoint.z));\n\n      for (var i = 0; i < childCount; ++i) {\n\n        if (childCount === 1) {\n\n            var newStartPoint = new Point(point.x, point.y, point.z); // to make copy\n\n/*            if (childsChildCount === cluster[\"Desc\"].length && childsChildCount !== 0 && data[cluster[\"Desc\"][0]][\"Desc\"].length !== 0) {\n              cylinder = undefined; // join same-like cluster to one - draw one cluster with bigger height\n              newStartPoint = new Point(prevPoint.x, prevPoint.y, prevPoint.z); // to make copy\n            }\n*/\n            const dirVector = new THREE.Vector3(point.x - prevPoint.x, point.y - prevPoint.y, point.z - prevPoint.z);\n            const newPoint = new Point(dirVector.x + point.x, dirVector.y + point.y, dirVector.z + point.z);\n\n            tuple = Object.freeze({ id: cluster[\"Desc\"][0], prevPoint: newStartPoint, point: newPoint });\n            stack.push(tuple);\n          \n          continue;\n        }\n\n        // COMPUTE NEW COORDINATES around circle\n        const theta = 2 * Math.PI / childCount;\n        const h = childCount / 2;\n\n        var fi = i * theta;\n        if (i <= h && i % 2 === 1) {\n          fi = (Math.ceil(h) - 1 + i) * theta;\n        } else if (i > h && (childCount - 1 - i) % 2 === 0) {\n          fi = (childCount - i) * theta;\n        } if (i > h && (childCount - 1 - i) % 2 === 1) {\n          fi = (Math.ceil(h) - 1 + childCount - i) * theta;\n        }\n\n        var xPos = childsChildCount * Math.cos(fi);\n        var zPos = childsChildCount * Math.sin(fi);\n        const newStartPointHelper = new Point(point.x + xPos, point.y, point.z + zPos);\n\n        const vector = new THREE.Vector3(newStartPointHelper.x - prevPoint.x, newStartPointHelper.y - prevPoint.y, newStartPointHelper.z - prevPoint.z).normalize();\n        const angle = (yaxis.x * vector.x + yaxis.y * vector.y + yaxis.z * vector.z)/Math.sqrt(vector.x * vector.x + vector.y * vector.y + vector.z * vector.z);\n\n        const childNodeCount = data[cluster[\"Desc\"][i]].NodeCount;\n        const radius = cluster.NodeCount; //childsChildCount > cluster.Node ? childsChildCount - cluster.NodeCount : childsChildCount;\n        const distance = Math.sqrt(radius * radius + CYLINDER_HEIGHT * CYLINDER_HEIGHT);\n        console.log(distance);\n        newStartPoint = new Point(\n          prevPoint.x + distance * vector.x,\n          prevPoint.y + distance * vector.y,\n          prevPoint.z + distance * vector.z,\n        );\n\n        const newEndPoint = new Point(\n          newStartPoint.x + CYLINDER_HEIGHT * vector.x,\n          newStartPoint.y + CYLINDER_HEIGHT * vector.y,\n          newStartPoint.z + CYLINDER_HEIGHT * vector.z,\n        );\n\n    //    const newVector = [newEndPoint.x - newStartPoint.xnewEndPoint.y - newStartPoint.y, newEndPoint.z - newStartPoint.z];\n        console.log( [ [Math.cos(angle), 0, Math.sin(angle)], [0, 1, 0], [-Math.sin(angle), 0, Math.cos(angle)] ] );\n        const matrix =[ [Math.cos(angle), 0, Math.sin(angle)], [0, 1, 0], [-Math.sin(angle), 0, Math.cos(angle)] ];\n\n        const c = Math.cos(angle);\n        const s = Math.sin(angle);\n        const transStartPoint = new Point(c*newStartPoint.x + s*newStartPoint.x, newStartPoint.y, -s*newStartPoint.x + c*newStartPoint.z);\n        const transEndPoint = new Point(c*newEndPoint.x + s*newEndPoint.x, newEndPoint.y, -s*newEndPoint.x + c*newEndPoint.z);\n       // const branch_factor = 2 - (1/max_branching);\n       // xPos = Math.cos(fi) * childsChildCount * branch_factor;\n       // zPos = Math.sin(fi) * childsChildCount * branch_factor;\n      //  const newEndPoint = new Point(newStartPoint.x + xPos, newStartPoint.y - CYLINDER_HEIGHT, newStartPoint.z + zPos);\n      \n        tuple = Object.freeze({ id: cluster[\"Desc\"][i], prevPoint: transStartPoint, point: transEndPoint });\n        stack.push(tuple);\n      }\n\n      if (cylinder !== undefined) {\n        cylinders.push(cylinder);\n       // if (current === firstId) {\n          scene.add(cylinder);\n       // }\n      }\n\n    }\n  }\n\n  function compMaxBranching(data, key) {\n\n    let stack = [ key ];\n    var maximums = {}\n    var colors = {}\n\n    while (stack.length > 0) {\n      const current = stack.pop();\n      colors[current] = 'G';\n      stack.push(current);\n      \n      if (maximums[current] === undefined) {\n        maximums[current] = 0\n      }\n\n      var count_black = 0;\n      const desc_count = data[current][\"Desc\"].length;\n      for (var i = 0; i < desc_count; ++i) {\n        if (colors[data[current][\"Desc\"][i]] === undefined) {\n          stack.push(data[current][\"Desc\"][i]);\n        } \n\n        if (colors[data[current][\"Desc\"][i]] === 'B') {\n          count_black += 1;\n          maximums[current] = Math.max(maximums[ data[current][\"Desc\"][i] ], maximums[current]);\n        }\n      }\n\n      if (count_black === desc_count) {\n        colors[current] = 'B';\n        stack.pop();\n\n        if (desc_count > 1) {\n          maximums[current] += 1;\n        }\n      }\n    }\n\n    return maximums[key];\n  }\n\n  function processClusters(scene, data) {\n\n    var root_cluster_key = undefined;\n    var biggestRank = 0;\n    Object.entries(data).forEach(([k,v]) => {\n      if (v[\"Rank\"] === 0) {\n        root_cluster_key = k;\n      }\n      biggestRank = Math.max(v[\"Rank\"], biggestRank);\n    });\n\n    const max_branching = compMaxBranching(data, root_cluster_key);\n\n    const firstHeight = biggestRank * CYLINDER_HEIGHT / 2 + CYLINDER_HEIGHT;\n    const firstStartPoint = new Point(0, firstHeight, 0);\n    const firstEndPoint = new Point(0, firstHeight - CYLINDER_HEIGHT, 0);\n\n    clustering(scene, data, root_cluster_key, max_branching, firstStartPoint, firstEndPoint, biggestRank);\n  }\n}\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}