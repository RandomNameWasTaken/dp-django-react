{"ast":null,"code":"import _toConsumableArray from \"/home/xkruzel/Desktop/todo/reactapp/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"/home/xkruzel/Desktop/todo/reactapp/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/xkruzel/Desktop/todo/reactapp/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/xkruzel/Desktop/todo/reactapp/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/xkruzel/Desktop/todo/reactapp/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { FileLoader, Loader, ShapePath } from 'three';\nvar FontLoader = /*#__PURE__*/function (_Loader) {\n  _inherits(FontLoader, _Loader);\n  var _super = _createSuper(FontLoader);\n  function FontLoader(manager) {\n    _classCallCheck(this, FontLoader);\n    return _super.call(this, manager);\n  }\n  _createClass(FontLoader, [{\n    key: \"load\",\n    value: function load(url, onLoad, onProgress, onError) {\n      var scope = this;\n      var loader = new FileLoader(this.manager);\n      loader.setPath(this.path);\n      loader.setRequestHeader(this.requestHeader);\n      loader.setWithCredentials(scope.withCredentials);\n      loader.load(url, function (text) {\n        var json;\n        try {\n          json = JSON.parse(text);\n        } catch (e) {\n          console.warn('THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.');\n          json = JSON.parse(text.substring(65, text.length - 2));\n        }\n        var font = scope.parse(json);\n        if (onLoad) onLoad(font);\n      }, onProgress, onError);\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(json) {\n      return new Font(json);\n    }\n  }]);\n  return FontLoader;\n}(Loader); //\nvar Font = /*#__PURE__*/function () {\n  function Font(data) {\n    _classCallCheck(this, Font);\n    this.isFont = true;\n    this.type = 'Font';\n    this.data = data;\n  }\n  _createClass(Font, [{\n    key: \"generateShapes\",\n    value: function generateShapes(text) {\n      var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;\n      var shapes = [];\n      var paths = createPaths(text, size, this.data);\n      for (var p = 0, pl = paths.length; p < pl; p++) {\n        shapes.push.apply(shapes, _toConsumableArray(paths[p].toShapes()));\n      }\n      return shapes;\n    }\n  }]);\n  return Font;\n}();\nfunction createPaths(text, size, data) {\n  var chars = Array.from(text);\n  var scale = size / data.resolution;\n  var line_height = (data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness) * scale;\n  var paths = [];\n  var offsetX = 0,\n    offsetY = 0;\n  for (var i = 0; i < chars.length; i++) {\n    var char = chars[i];\n    if (char === '\\n') {\n      offsetX = 0;\n      offsetY -= line_height;\n    } else {\n      var ret = createPath(char, scale, offsetX, offsetY, data);\n      offsetX += ret.offsetX;\n      paths.push(ret.path);\n    }\n  }\n  return paths;\n}\nfunction createPath(char, scale, offsetX, offsetY, data) {\n  var glyph = data.glyphs[char] || data.glyphs['?'];\n  if (!glyph) {\n    console.error('THREE.Font: character \"' + char + '\" does not exists in font family ' + data.familyName + '.');\n    return;\n  }\n  var path = new ShapePath();\n  var x, y, cpx, cpy, cpx1, cpy1, cpx2, cpy2;\n  if (glyph.o) {\n    var outline = glyph._cachedOutline || (glyph._cachedOutline = glyph.o.split(' '));\n    for (var i = 0, l = outline.length; i < l;) {\n      var action = outline[i++];\n      switch (action) {\n        case 'm':\n          // moveTo\n\n          x = outline[i++] * scale + offsetX;\n          y = outline[i++] * scale + offsetY;\n          path.moveTo(x, y);\n          break;\n        case 'l':\n          // lineTo\n\n          x = outline[i++] * scale + offsetX;\n          y = outline[i++] * scale + offsetY;\n          path.lineTo(x, y);\n          break;\n        case 'q':\n          // quadraticCurveTo\n\n          cpx = outline[i++] * scale + offsetX;\n          cpy = outline[i++] * scale + offsetY;\n          cpx1 = outline[i++] * scale + offsetX;\n          cpy1 = outline[i++] * scale + offsetY;\n          path.quadraticCurveTo(cpx1, cpy1, cpx, cpy);\n          break;\n        case 'b':\n          // bezierCurveTo\n\n          cpx = outline[i++] * scale + offsetX;\n          cpy = outline[i++] * scale + offsetY;\n          cpx1 = outline[i++] * scale + offsetX;\n          cpy1 = outline[i++] * scale + offsetY;\n          cpx2 = outline[i++] * scale + offsetX;\n          cpy2 = outline[i++] * scale + offsetY;\n          path.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, cpx, cpy);\n          break;\n      }\n    }\n  }\n  return {\n    offsetX: glyph.ha * scale,\n    path: path\n  };\n}\nexport { FontLoader, Font };","map":{"version":3,"names":["FileLoader","Loader","ShapePath","FontLoader","manager","url","onLoad","onProgress","onError","scope","loader","setPath","path","setRequestHeader","requestHeader","setWithCredentials","withCredentials","load","text","json","JSON","parse","e","console","warn","substring","length","font","Font","data","isFont","type","size","shapes","paths","createPaths","p","pl","push","toShapes","chars","Array","from","scale","resolution","line_height","boundingBox","yMax","yMin","underlineThickness","offsetX","offsetY","i","char","ret","createPath","glyph","glyphs","error","familyName","x","y","cpx","cpy","cpx1","cpy1","cpx2","cpy2","o","outline","_cachedOutline","split","l","action","moveTo","lineTo","quadraticCurveTo","bezierCurveTo","ha"],"sources":["/home/xkruzel/node_modules/three/examples/jsm/loaders/FontLoader.js"],"sourcesContent":["import {\n\tFileLoader,\n\tLoader,\n\tShapePath\n} from 'three';\n\nclass FontLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tlet json;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tconsole.warn( 'THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.' );\n\t\t\t\tjson = JSON.parse( text.substring( 65, text.length - 2 ) );\n\n\t\t\t}\n\n\t\t\tconst font = scope.parse( json );\n\n\t\t\tif ( onLoad ) onLoad( font );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\treturn new Font( json );\n\n\t}\n\n}\n\n//\n\nclass Font {\n\n\tconstructor( data ) {\n\n\t\tthis.isFont = true;\n\n\t\tthis.type = 'Font';\n\n\t\tthis.data = data;\n\n\t}\n\n\tgenerateShapes( text, size = 100 ) {\n\n\t\tconst shapes = [];\n\t\tconst paths = createPaths( text, size, this.data );\n\n\t\tfor ( let p = 0, pl = paths.length; p < pl; p ++ ) {\n\n\t\t\tshapes.push( ...paths[ p ].toShapes() );\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n}\n\nfunction createPaths( text, size, data ) {\n\n\tconst chars = Array.from( text );\n\tconst scale = size / data.resolution;\n\tconst line_height = ( data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness ) * scale;\n\n\tconst paths = [];\n\n\tlet offsetX = 0, offsetY = 0;\n\n\tfor ( let i = 0; i < chars.length; i ++ ) {\n\n\t\tconst char = chars[ i ];\n\n\t\tif ( char === '\\n' ) {\n\n\t\t\toffsetX = 0;\n\t\t\toffsetY -= line_height;\n\n\t\t} else {\n\n\t\t\tconst ret = createPath( char, scale, offsetX, offsetY, data );\n\t\t\toffsetX += ret.offsetX;\n\t\t\tpaths.push( ret.path );\n\n\t\t}\n\n\t}\n\n\treturn paths;\n\n}\n\nfunction createPath( char, scale, offsetX, offsetY, data ) {\n\n\tconst glyph = data.glyphs[ char ] || data.glyphs[ '?' ];\n\n\tif ( ! glyph ) {\n\n\t\tconsole.error( 'THREE.Font: character \"' + char + '\" does not exists in font family ' + data.familyName + '.' );\n\n\t\treturn;\n\n\t}\n\n\tconst path = new ShapePath();\n\n\tlet x, y, cpx, cpy, cpx1, cpy1, cpx2, cpy2;\n\n\tif ( glyph.o ) {\n\n\t\tconst outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\n\n\t\tfor ( let i = 0, l = outline.length; i < l; ) {\n\n\t\t\tconst action = outline[ i ++ ];\n\n\t\t\tswitch ( action ) {\n\n\t\t\t\tcase 'm': // moveTo\n\n\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.moveTo( x, y );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'l': // lineTo\n\n\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.lineTo( x, y );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'q': // quadraticCurveTo\n\n\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'b': // bezierCurveTo\n\n\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx2 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy2 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn { offsetX: glyph.ha * scale, path: path };\n\n}\n\nexport { FontLoader, Font };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}