{"ast":null,"code":"import _slicedToArray from\"/home/xkruzel/Desktop/todo/reactapp/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import*as THREE from'three';import{OrbitControls}from'three/examples/jsm/controls/OrbitControls';import*as dat from'dat.gui';import{Point,createPoint}from'./Point';import{Interaction}from'three.interaction-fixed';import{dec2bin,multiplyMatrix,rad2degrees,getfi}from\"./utils\";export function init3Dgraphics(canvas,div,data,nodes_ids,h,w){if(data===undefined){return false;}var CYLINDER_HEIGHT=8;var number_of_nodes=Object.keys(nodes_ids).length;var scene=new THREE.Scene();//scene.background = new THREE.Color( 0xd3d3d3 );\nscene.background=new THREE.Color(0xf8f2ea);var camera=new THREE.PerspectiveCamera(75,canvas.width/canvas.height,0.1,1000);var renderer=new THREE.WebGLRenderer({canvas:canvas});renderer.setPixelRatio(window.devicePixelRatio);renderer.setSize(canvas.width,canvas.height);// full size\ncamera.position.setZ(30);// for better perspective\nrenderer.sortObjects=false;renderer.render(scene,camera);new Interaction(renderer,scene,camera);// For showing text information about clusters\nvar texts=[];var cylinders=[];//const axesHelper = new THREE.AxesHelper(100);\n//scene.add(axesHelper);\n/*\n  const gui = new dat.GUI();\n  const options = {\n    sphereColor : 0xffea00,\n    wireframe: false,\n  };\n*/var pointLight=new THREE.PointLight(0xffffff);pointLight.position.set(20,20,20);var ambientLight=new THREE.AmbientLight(0xffffff);ambientLight.position.set(20,20,20);scene.add(pointLight,ambientLight);//const lightHelper = new THREE.PointLightHelper(pointLight);  // shows position of lighsource\n//const gridHelper = new THREE.GridHelper(30, 20);\n//scene.add(lightHelper, gridHelper);\nwindow.addEventListener('resize',function(){camera.aspect=canvas.width/canvas.height;camera.updateProjectionMatrix();renderer.setSize(canvas.width);});var controls=new OrbitControls(camera,renderer.domElement);processClusters(scene,data);data=null;function animate(){setTimeout(function(){requestAnimationFrame(animate);},1000/5);controls.update();renderer.render(scene,camera);pointLight.position.copy(camera.position);}renderer.setAnimationLoop(animate);window.addEventListener('resize',function(){camera.aspect=canvas.width/canvas.width;camera.updateProjectionMatrix();renderer.setSize(canvas.width,canvas.width);});function calcColor(max,val){return\"hsla(147, 0%, 50%, 1)\";/*\n    const min = 0\n    var minHue = 240, maxHue=0;\n    var curPercent = (val - min) / (max-min);\n    var colString = \"hsl(\" + ((curPercent * (maxHue-minHue) ) + minHue) + \",65%,50%)\";\n    return colString;\n    */}function resetOpacity(){cylinders.forEach(function(cylinder){var newMaterial=cylinder.material.clone();newMaterial.transparent=false;newMaterial.opacity=1;cylinder.material=newMaterial;});}function crossProduct(a,b){return new THREE.Vector3(a.y*b.z-a.z*b.y,a.z*b.x-a.x*b.z,a.x*b.y-a.y*b.x);}function createCylinder(data,id,startPoint,endPoint,currRadius,nextRadius,rank,rank_max){console.log(id);var color=new THREE.Color(data[id]['Color']===''?calcColor(rank_max,rank):data[id]['Color']);//color.setHex(rank/10 * 0xffffff );\n// color.setHex(rank/10 * 0xffffff );\nvar cylinderMesh=function cylinderMesh(startPoint,endPoint,midPoint,currRadius,nextRadius,color){/* edge from X to Y */var direction=new THREE.Vector3().subVectors(endPoint,startPoint);var orientation=new THREE.Matrix4();/* THREE.Object3D().up (=Y) default orientation for all objects */orientation.lookAt(startPoint,endPoint,new THREE.Object3D().up);/* rotation around axis X by -90 degrees \n      * matches the default orientation Y \n      * with the orientation of looking Z */var mat=new THREE.Matrix4();mat.set(1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,1);orientation.multiply(mat);/* cylinder: radiusAtTop, radiusAtBottom, \n          height, radiusSegments, heightSegments */var RADIAL_SEGMENTS=8;var HEIGHT_SEGMENTS=1;var edgeGeometry=new THREE.CylinderGeometry(currRadius,nextRadius,CYLINDER_HEIGHT,Math.max(100,nextRadius*RADIAL_SEGMENTS),HEIGHT_SEGMENTS);var cylinder=new THREE.Mesh(edgeGeometry,new THREE.MeshPhongMaterial({color:color,flatShading:true}));cylinder.applyMatrix4(orientation);cylinder.position.set(midPoint.x,midPoint.y,midPoint.z);cylinder.cursor='pointer';cylinder.on('click',function(ev){resetOpacity();var newMaterial=cylinder.material.clone();newMaterial.transparent=true;newMaterial.opacity=0.5;cylinder.material=newMaterial;texts.forEach(function(text){var selectedObject=scene.getObjectByName(text.name);scene.remove(selectedObject);});var text='';data[id][\"Nodes\"].forEach(function(elem){if(text!==''){text+=',';}text+=' (';var bin=dec2bin(elem,number_of_nodes);for(var i=0;i<bin.length;i++){if(bin[i]==='1'){text+=' '+nodes_ids[i];}}text+=' )';});div.innerHTML=\"<b>Rank</b>: \"+data[id][\"Rank\"]+\"<br><b>Nodes</b>: \"+text;});return cylinder;};var midPoint=new Point((startPoint.x+endPoint.x)/2,(startPoint.y+endPoint.y)/2,(startPoint.z+endPoint.z)/2);return cylinderMesh(startPoint,endPoint,midPoint,currRadius,nextRadius,color);//new THREE.Mesh(geometryCyl, material);\n}function getChildsChilds(data,cluster){var childsChildCount=0;for(var i=0;i<cluster[\"Desc\"].length;++i){childsChildCount+=data[cluster[\"Desc\"][i]].NodeCount;}return childsChildCount;}// prevPoint, point - upper and downer middle points of cylinder\n// dirPoint - point to which direction of cylinder (dir vector) should go \nfunction clustering(scene,data,id,max_branching,prevPointFirst,pointFirst,biggestRank){if(id===undefined){console.log(\"Id is undefined in clustering\");return;}var firstId=id;var tuple=Object.freeze({id:id,prevPoint:prevPointFirst,point:pointFirst});var stack=[tuple];var yaxis=new Point(0,1,0);while(stack.length>0){var stackElement=stack.pop();var current=stackElement.id;var prevPoint=stackElement.prevPoint;var point=stackElement.point;var cluster=data[current];var childCount=cluster[\"Desc\"].length;var childsChildCount=getChildsChilds(data,cluster);var upperRadius=cluster.NodeCount;var lowerRadius=childCount===1?childsChildCount:childsChildCount+cluster[\"Desc\"].length;var cylinder=createCylinder(data,current,prevPoint,point,upperRadius,lowerRadius,data[current][\"Rank\"],biggestRank);var xVector=new THREE.Vector3(1,0,0);var yVector=new THREE.Vector3(0,1,0);var zVector=new THREE.Vector3(0,0,1);var dirVector=new THREE.Vector3(point.x-prevPoint.x,point.y-prevPoint.y,point.z-prevPoint.z).normalize();var uVector=new THREE.Vector3(-dirVector.y,dirVector.x,0).normalize();console.log(dirVector,uVector);console.log('dir a u orthogonal: ',dirVector.dot(uVector));var adota=uVector.dot(uVector);var _crossProduct=_crossProduct(dirVector,uVector);var vVector=_crossProduct.divideScalar(adota).normalize();console.log('v a x orthogonal: ',vVector.dot(_crossProduct));console.log('dirVector a x orthogonal: ',dirVector.dot(_crossProduct));console.log('v a u orthogonal: ',vVector.dot(uVector));console.log('dir a v orthogonal: ',rad2degrees(dirVector.angleTo(vVector)));/*\n      const angleX = 360 - rad2degrees( dirVector.angleTo(xVector) );\n      const angleY = 360 - rad2degrees( dirVector.angleTo(yVector) );\n      const angleZ = 360 - rad2degrees( dirVector.angleTo(zVector) );\n\n      // help\n      console.log(rad2degrees( dirVector.angleTo(yVector) ));\n      const cA = Math.cos(angleX);\n      const sA = Math.sin(angleX);\n      const cB = Math.cos(angleY);\n      const sB = Math.sin(angleY);\n      const cC = Math.cos(angleZ);\n      const sC = Math.sin(angleZ);\n\n      const rotMatrix = [\n        [cB * cC, sA*sB*cC - cA*sC, cA*sB*cC + sA*sC],\n        [cB * sC, sA*sB*sC + cA*cC, cA*sB*sC - sA*cC],\n        [-sB,     sA*cB,            cA * cB] ]; // rotation around y axis (anti-clockwise)\n*/for(var i=0;i<childCount;++i){if(childCount===1){dirVector=new THREE.Vector3(point.x-prevPoint.x,point.y-prevPoint.y,point.z-prevPoint.z);var newStartPoint=new Point(point.x,point.y,point.z);// to make copy\nvar newPoint=new Point(dirVector.x+point.x,dirVector.y+point.y,dirVector.z+point.z);tuple=Object.freeze({id:cluster[\"Desc\"][0],prevPoint:newStartPoint,point:newPoint});stack.push(tuple);continue;}// COMPUTE NEW COORDINATES around circle - not rotated circle\nvar theta=360/childCount*(i+1);console.log('theta ',theta);var sin=Math.sin(theta);var cos=Math.cos(theta);var newStartPointHelper=uVector.multiplyScalar(cos).add(vVector.multiplyScalar(sin)).add(new THREE.Vector3(point.x,point.y,point.z));//const h = childCount / 2;\n//const fi = getfi(theta, h, childCount, i);\n// var xPos = lowerRadius * Math.cos(theta);\n// var zPos = lowerRadius * Math.sin(theta);\n//  var newStartPointHelper = new Point(xPos, point.y, zPos); // needs to be rotated acc angle accoring prevPoint\n/*\n        const translationMatrix = [\n          [1, 0, 0, -prevPoint.x],\n          [0, 1, 0, -prevPoint.y],\n          [0, 0, 1, -prevPoint.z],\n          [0, 0, 0, 1]\n        ];\n\n        const translationMatrixBack = [\n          [1, 0, 0, prevPoint.x],\n          [0, 1, 0, prevPoint.y],\n          [0, 0, 1, prevPoint.z],\n          [0, 0, 0, 1]\n        ];\n        */ // Translate points in manner that prevPoint would be the central point (0,0,0) and than we rotate it and translate it back.\n//  const transPoint     = createPoint( multiplyMatrix(translationMatrix, newStartPointHelper.getMatrix4()) );\n//  const rotPoint       = transPoint; //createPoint( multiplyMatrix(rotMatrix, transPoint.getMatrix()) );\n//   const transBackPoint = createPoint( multiplyMatrix(translationMatrixBack, rotPoint.getMatrix4()) );\nvar vector=new THREE.Vector3(newStartPointHelper.x-prevPoint.x,newStartPointHelper.y-prevPoint.y,newStartPointHelper.z-prevPoint.z).normalize();var distance=Math.floor(Math.sqrt(Math.pow(lowerRadius,2)+Math.pow(CYLINDER_HEIGHT,2)));console.log(distance);/*newStartPoint = new Point(\n          prevPoint.x + distance * vector.x,\n          prevPoint.y + distance * vector.y,\n          prevPoint.z + distance * vector.z,\n        );\n        */var newEndPoint=new Point(newStartPointHelper.x+CYLINDER_HEIGHT*vector.x,newStartPointHelper.y+CYLINDER_HEIGHT*vector.y,newStartPointHelper.z+CYLINDER_HEIGHT*vector.z);tuple=Object.freeze({id:cluster[\"Desc\"][i],prevPoint:newStartPointHelper,point:newEndPoint});stack.push(tuple);}if(cylinder!==undefined){cylinders.push(cylinder);// if (current === firstId) {\nscene.add(cylinder);// }\n}}}function compMaxBranching(data,key){var stack=[key];var maximums={};var colors={};while(stack.length>0){var current=stack.pop();colors[current]='G';stack.push(current);if(maximums[current]===undefined){maximums[current]=0;}var count_black=0;var desc_count=data[current][\"Desc\"].length;for(var i=0;i<desc_count;++i){if(colors[data[current][\"Desc\"][i]]===undefined){stack.push(data[current][\"Desc\"][i]);}if(colors[data[current][\"Desc\"][i]]==='B'){count_black+=1;maximums[current]=Math.max(maximums[data[current][\"Desc\"][i]],maximums[current]);}}if(count_black===desc_count){colors[current]='B';stack.pop();if(desc_count>1){maximums[current]+=1;}}}return maximums[key];}function processClusters(scene,data){var root_cluster_key=undefined;var biggestRank=0;Object.entries(data).forEach(function(_ref){var _ref2=_slicedToArray(_ref,2),k=_ref2[0],v=_ref2[1];if(v[\"Rank\"]===0){root_cluster_key=k;}biggestRank=Math.max(v[\"Rank\"],biggestRank);});var max_branching=compMaxBranching(data,root_cluster_key);var firstHeight=biggestRank*CYLINDER_HEIGHT/2+CYLINDER_HEIGHT;var firstStartPoint=new Point(0,firstHeight,0);var firstEndPoint=new Point(0,firstHeight-CYLINDER_HEIGHT,0);clustering(scene,data,root_cluster_key,max_branching,firstStartPoint,firstEndPoint,biggestRank);}}","map":{"version":3,"names":["THREE","OrbitControls","dat","Point","createPoint","Interaction","dec2bin","multiplyMatrix","rad2degrees","getfi","init3Dgraphics","canvas","div","data","nodes_ids","h","w","undefined","CYLINDER_HEIGHT","number_of_nodes","Object","keys","length","scene","Scene","background","Color","camera","PerspectiveCamera","width","height","renderer","WebGLRenderer","setPixelRatio","window","devicePixelRatio","setSize","position","setZ","sortObjects","render","texts","cylinders","pointLight","PointLight","set","ambientLight","AmbientLight","add","addEventListener","aspect","updateProjectionMatrix","controls","domElement","processClusters","animate","setTimeout","requestAnimationFrame","update","copy","setAnimationLoop","calcColor","max","val","resetOpacity","forEach","cylinder","newMaterial","material","clone","transparent","opacity","crossProduct","a","b","Vector3","y","z","x","createCylinder","id","startPoint","endPoint","currRadius","nextRadius","rank","rank_max","console","log","color","cylinderMesh","midPoint","direction","subVectors","orientation","Matrix4","lookAt","Object3D","up","mat","multiply","RADIAL_SEGMENTS","HEIGHT_SEGMENTS","edgeGeometry","CylinderGeometry","Math","Mesh","MeshPhongMaterial","flatShading","applyMatrix4","cursor","on","ev","text","selectedObject","getObjectByName","name","remove","elem","bin","i","innerHTML","getChildsChilds","cluster","childsChildCount","NodeCount","clustering","max_branching","prevPointFirst","pointFirst","biggestRank","firstId","tuple","freeze","prevPoint","point","stack","yaxis","stackElement","pop","current","childCount","upperRadius","lowerRadius","xVector","yVector","zVector","dirVector","normalize","uVector","dot","adota","vVector","divideScalar","angleTo","newStartPoint","newPoint","push","theta","sin","cos","newStartPointHelper","multiplyScalar","vector","distance","floor","sqrt","pow","newEndPoint","compMaxBranching","key","maximums","colors","count_black","desc_count","root_cluster_key","entries","k","v","firstHeight","firstStartPoint","firstEndPoint"],"sources":["/home/xkruzel/Desktop/todo/reactapp/src/rendering.js"],"sourcesContent":["import * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport * as dat from 'dat.gui';\nimport { Point, createPoint } from './Point';\nimport { Interaction } from 'three.interaction-fixed';\nimport { dec2bin, multiplyMatrix, rad2degrees, getfi  } from \"./utils\";\n\nexport function init3Dgraphics(canvas, div, data, nodes_ids, h, w) {\n\n  if (data === undefined) {\n    return false;\n  }\n\n  const CYLINDER_HEIGHT = 8;\n  const number_of_nodes = Object.keys(nodes_ids).length;\n\n  const scene = new THREE.Scene();\n  //scene.background = new THREE.Color( 0xd3d3d3 );\n  scene.background = new THREE.Color( 0xf8f2ea);\n  const camera = new THREE.PerspectiveCamera(75, canvas.width / canvas.height, 0.1, 1000)\n  const renderer = new THREE.WebGLRenderer({\n    canvas: canvas,\n  });\n\n  renderer.setPixelRatio( window.devicePixelRatio );\n  renderer.setSize(canvas.width, canvas.height); // full size\n  camera.position.setZ(30); // for better perspective\n  renderer.sortObjects = false;\n  renderer.render(scene, camera);\n\n  new Interaction(renderer, scene, camera);\n\n// For showing text information about clusters\n  var texts = [];\n  var cylinders = [];\n\n  //const axesHelper = new THREE.AxesHelper(100);\n  //scene.add(axesHelper);\n\n/*\n  const gui = new dat.GUI();\n  const options = {\n    sphereColor : 0xffea00,\n    wireframe: false,\n  };\n*/    \n  const pointLight = new THREE.PointLight(0xffffff)\n  pointLight.position.set(20, 20, 20);\n\n  const ambientLight = new THREE.AmbientLight(0xffffff)\n  ambientLight.position.set(20, 20, 20);\n\n  scene.add(pointLight, ambientLight);\n\n  //const lightHelper = new THREE.PointLightHelper(pointLight);  // shows position of lighsource\n  //const gridHelper = new THREE.GridHelper(30, 20);\n\n  //scene.add(lightHelper, gridHelper);\n\n  window.addEventListener('resize', function() {\n    camera.aspect = canvas.width / canvas.height;\n    camera.updateProjectionMatrix();\n    renderer.setSize(canvas.width);\n  });\n\n  const controls = new OrbitControls(camera, renderer.domElement);\n\n  processClusters(scene, data);\n  data = null;\n\n  function animate() {\n    setTimeout( function() {\n      requestAnimationFrame( animate );\n    }, 1000 / 5 );\n\n    controls.update();\n    renderer.render(scene, camera);\n    pointLight.position.copy(camera.position );\n  }\n\n  renderer.setAnimationLoop(animate);\n\n  window.addEventListener('resize', function() {\n    camera.aspect = canvas.width / canvas.width\n    camera.updateProjectionMatrix();\n    renderer.setSize(canvas.width, canvas.width);\n  });\n\n\n  function calcColor(max, val) {\n    return \"hsla(147, 0%, 50%, 1)\";\n    /*\n    const min = 0\n    var minHue = 240, maxHue=0;\n    var curPercent = (val - min) / (max-min);\n    var colString = \"hsl(\" + ((curPercent * (maxHue-minHue) ) + minHue) + \",65%,50%)\";\n    return colString;\n    */\n  }\n\n  function resetOpacity() {\n    cylinders.forEach(function (cylinder) {\n      const newMaterial = cylinder.material.clone();\n      newMaterial.transparent = false;\n      newMaterial.opacity = 1;\n      cylinder.material = newMaterial;\n    });\n  }\n\n  function crossProduct(a, b) {\n    return new THREE.Vector3(a.y*b.z - a.z*b.y, a.z*b.x - a.x*b.z, a.x*b.y - a.y*b.x);\n  }\n\n  function createCylinder( data, id, startPoint, endPoint, currRadius, nextRadius, rank, rank_max) {\n    console.log(id);\n    const color = new THREE.Color( data[id]['Color'] === '' ? calcColor(rank_max, rank) : data[id]['Color'] );\n    //color.setHex(rank/10 * 0xffffff );\n   // color.setHex(rank/10 * 0xffffff );\n\n\n    var cylinderMesh = function( startPoint, endPoint, midPoint, currRadius, nextRadius, color ) {\n      /* edge from X to Y */\n      const direction = new THREE.Vector3().subVectors( endPoint, startPoint );\n\n      const orientation = new THREE.Matrix4();\n      /* THREE.Object3D().up (=Y) default orientation for all objects */\n      orientation.lookAt(startPoint, endPoint, new THREE.Object3D().up);\n\n      /* rotation around axis X by -90 degrees \n      * matches the default orientation Y \n      * with the orientation of looking Z */\n      const mat =  new THREE.Matrix4();\n      mat.set(\n        1,0,0,0,\n        0,0,1,0, \n        0,1,0,0,\n        0,0,0,1\n      );\n      orientation.multiply(mat);\n\n      /* cylinder: radiusAtTop, radiusAtBottom, \n          height, radiusSegments, heightSegments */\n      const RADIAL_SEGMENTS = 8;\n      const HEIGHT_SEGMENTS = 1;\n      const edgeGeometry = new THREE.CylinderGeometry( currRadius, nextRadius, CYLINDER_HEIGHT, Math.max(100, nextRadius * RADIAL_SEGMENTS), HEIGHT_SEGMENTS);\n      const cylinder = new THREE.Mesh( edgeGeometry, new THREE.MeshPhongMaterial( { color: color, flatShading : true } ) );\n\n      cylinder.applyMatrix4(orientation)\n      cylinder.position.set(midPoint.x, midPoint.y, midPoint.z);\n      cylinder.cursor = 'pointer';\n      cylinder.on('click', function(ev) {\n\n        resetOpacity();\n        const newMaterial = cylinder.material.clone();\n        newMaterial.transparent = true;\n        newMaterial.opacity = 0.5;\n        cylinder.material = newMaterial;\n\n        texts.forEach(function (text) {\n            var selectedObject = scene.getObjectByName(text.name);\n            scene.remove( selectedObject );\n        });\n\n        var text = '';\n        data[id][\"Nodes\"].forEach(function (elem) {\n          if (text !== '') {\n            text += ',';\n          }\n          text += ' (';\n          const bin = dec2bin(elem, number_of_nodes);\n\n          for (let i = 0; i < bin.length; i++) {\n            if (bin[i] === '1') {\n              text += ' ' + nodes_ids[i];\n            }\n          }\n          text += ' )';\n        });\n\n        div.innerHTML =  \"<b>Rank</b>: \" + data[id][\"Rank\"] + \"<br><b>Nodes</b>: \" + text;\n\n      });\n\n      return cylinder;\n    }\n\n    const midPoint = new Point((startPoint.x + endPoint.x) / 2, (startPoint.y + endPoint.y) / 2, (startPoint.z + endPoint.z) / 2);\n    return cylinderMesh(startPoint, endPoint, midPoint, currRadius, nextRadius, color); //new THREE.Mesh(geometryCyl, material);\n\n  }\n\n  function getChildsChilds(data, cluster) {\n    var childsChildCount = 0;\n    for (var i = 0; i < cluster[\"Desc\"].length; ++i) {\n      childsChildCount += data[cluster[\"Desc\"][i]].NodeCount;\n    }\n\n    return childsChildCount;\n  }\n\n  // prevPoint, point - upper and downer middle points of cylinder\n  // dirPoint - point to which direction of cylinder (dir vector) should go \n  function clustering(scene, data, id, max_branching, prevPointFirst, pointFirst, biggestRank) {\n\n    if (id === undefined) {\n      console.log(\"Id is undefined in clustering\");\n      return;\n    }\n    const firstId = id;\n\n    var tuple = Object.freeze({ id: id, prevPoint: prevPointFirst, point: pointFirst });\n    var stack = [ tuple ];\n\n    const yaxis = new Point(0, 1, 0);\n \n    while (stack.length > 0) {\n      const stackElement = stack.pop();\n      const current = stackElement.id;\n      const prevPoint = stackElement.prevPoint;\n      const point = stackElement.point;\n\n      var cluster = data[current];\n      const childCount = cluster[\"Desc\"].length;\n\n      var childsChildCount = getChildsChilds(data, cluster);\n\n      const upperRadius = cluster.NodeCount;\n      const lowerRadius = childCount === 1 ? childsChildCount : childsChildCount + cluster[\"Desc\"].length ;\n      var cylinder = createCylinder(data, current, prevPoint, point, upperRadius, lowerRadius, data[current][\"Rank\"], biggestRank);\n\n      const xVector = new THREE.Vector3(1, 0, 0);\n      const yVector = new THREE.Vector3(0, 1, 0);\n      const zVector = new THREE.Vector3(0, 0, 1);\n\n\n      var dirVector = new THREE.Vector3(point.x - prevPoint.x, point.y - prevPoint.y, point.z - prevPoint.z).normalize();\n      var uVector = new THREE.Vector3(-dirVector.y, dirVector.x, 0).normalize();\n      console.log(dirVector, uVector);\n      console.log('dir a u orthogonal: ', dirVector.dot(uVector) );\n\n\n      const adota = uVector.dot(uVector);\n      const crossProduct = crossProduct(dirVector, uVector);\n      const vVector = crossProduct.divideScalar( adota ).normalize();\n\n      console.log('v a x orthogonal: ', vVector.dot(crossProduct) );\n      console.log('dirVector a x orthogonal: ', dirVector.dot(crossProduct) );\n\n\n      console.log('v a u orthogonal: ', vVector.dot(uVector) );\n      console.log('dir a v orthogonal: ', rad2degrees( dirVector.angleTo(vVector) ));\n\n\n\n\n\n/*\n      const angleX = 360 - rad2degrees( dirVector.angleTo(xVector) );\n      const angleY = 360 - rad2degrees( dirVector.angleTo(yVector) );\n      const angleZ = 360 - rad2degrees( dirVector.angleTo(zVector) );\n\n      // help\n      console.log(rad2degrees( dirVector.angleTo(yVector) ));\n      const cA = Math.cos(angleX);\n      const sA = Math.sin(angleX);\n      const cB = Math.cos(angleY);\n      const sB = Math.sin(angleY);\n      const cC = Math.cos(angleZ);\n      const sC = Math.sin(angleZ);\n\n      const rotMatrix = [\n        [cB * cC, sA*sB*cC - cA*sC, cA*sB*cC + sA*sC],\n        [cB * sC, sA*sB*sC + cA*cC, cA*sB*sC - sA*cC],\n        [-sB,     sA*cB,            cA * cB] ]; // rotation around y axis (anti-clockwise)\n*/\n      for (var i = 0; i < childCount; ++i) {\n\n        if (childCount === 1) {\n            dirVector = new THREE.Vector3(point.x - prevPoint.x, point.y - prevPoint.y, point.z - prevPoint.z);\n\n            var newStartPoint = new Point(point.x, point.y, point.z); // to make copy\n            const newPoint = new Point(dirVector.x + point.x, dirVector.y + point.y, dirVector.z + point.z);\n\n            tuple = Object.freeze({ id: cluster[\"Desc\"][0], prevPoint: newStartPoint, point: newPoint });\n            stack.push(tuple);\n          \n          continue;\n        }\n\n        // COMPUTE NEW COORDINATES around circle - not rotated circle\n        const theta = 360 / childCount * (i + 1);\n        console.log('theta ',theta);\n        const sin = Math.sin(theta);\n        const cos = Math.cos(theta);\n\n        var newStartPointHelper = uVector.multiplyScalar(cos).add( vVector.multiplyScalar(sin) ).add(new THREE.Vector3(point.x, point.y, point.z));\n\n\n        //const h = childCount / 2;\n\n        //const fi = getfi(theta, h, childCount, i);\n       // var xPos = lowerRadius * Math.cos(theta);\n       // var zPos = lowerRadius * Math.sin(theta);\n\n        \n      //  var newStartPointHelper = new Point(xPos, point.y, zPos); // needs to be rotated acc angle accoring prevPoint\n\n/*\n        const translationMatrix = [\n          [1, 0, 0, -prevPoint.x],\n          [0, 1, 0, -prevPoint.y],\n          [0, 0, 1, -prevPoint.z],\n          [0, 0, 0, 1]\n        ];\n\n        const translationMatrixBack = [\n          [1, 0, 0, prevPoint.x],\n          [0, 1, 0, prevPoint.y],\n          [0, 0, 1, prevPoint.z],\n          [0, 0, 0, 1]\n        ];\n        */\n\n        // Translate points in manner that prevPoint would be the central point (0,0,0) and than we rotate it and translate it back.\n      //  const transPoint     = createPoint( multiplyMatrix(translationMatrix, newStartPointHelper.getMatrix4()) );\n      //  const rotPoint       = transPoint; //createPoint( multiplyMatrix(rotMatrix, transPoint.getMatrix()) );\n     //   const transBackPoint = createPoint( multiplyMatrix(translationMatrixBack, rotPoint.getMatrix4()) );\n\n        const vector = new THREE.Vector3(newStartPointHelper.x - prevPoint.x, newStartPointHelper.y - prevPoint.y, newStartPointHelper.z - prevPoint.z).normalize();\n\n        const distance = Math.floor( Math.sqrt(Math.pow(lowerRadius, 2) + Math.pow(CYLINDER_HEIGHT, 2)) );\n        console.log(distance);\n        /*newStartPoint = new Point(\n          prevPoint.x + distance * vector.x,\n          prevPoint.y + distance * vector.y,\n          prevPoint.z + distance * vector.z,\n        );\n        */\n\n        const newEndPoint = new Point(\n          newStartPointHelper.x + CYLINDER_HEIGHT * vector.x,\n          newStartPointHelper.y + CYLINDER_HEIGHT * vector.y,\n          newStartPointHelper.z + CYLINDER_HEIGHT * vector.z,\n        );\n      \n        tuple = Object.freeze({ id: cluster[\"Desc\"][i], prevPoint: newStartPointHelper, point: newEndPoint });\n        stack.push(tuple);\n      }\n\n      if (cylinder !== undefined) {\n        cylinders.push(cylinder);\n       // if (current === firstId) {\n          scene.add(cylinder);\n       // }\n      }\n\n    }\n  }\n\n  function compMaxBranching(data, key) {\n\n    let stack = [ key ];\n    var maximums = {}\n    var colors = {}\n\n    while (stack.length > 0) {\n      const current = stack.pop();\n      colors[current] = 'G';\n      stack.push(current);\n      \n      if (maximums[current] === undefined) {\n        maximums[current] = 0\n      }\n\n      var count_black = 0;\n      const desc_count = data[current][\"Desc\"].length;\n      for (var i = 0; i < desc_count; ++i) {\n        if (colors[data[current][\"Desc\"][i]] === undefined) {\n          stack.push(data[current][\"Desc\"][i]);\n        } \n\n        if (colors[data[current][\"Desc\"][i]] === 'B') {\n          count_black += 1;\n          maximums[current] = Math.max(maximums[ data[current][\"Desc\"][i] ], maximums[current]);\n        }\n      }\n\n      if (count_black === desc_count) {\n        colors[current] = 'B';\n        stack.pop();\n\n        if (desc_count > 1) {\n          maximums[current] += 1;\n        }\n      }\n    }\n\n    return maximums[key];\n  }\n\n  function processClusters(scene, data) {\n\n    var root_cluster_key = undefined;\n    var biggestRank = 0;\n    Object.entries(data).forEach(([k,v]) => {\n      if (v[\"Rank\"] === 0) {\n        root_cluster_key = k;\n      }\n      biggestRank = Math.max(v[\"Rank\"], biggestRank);\n    });\n\n    const max_branching = compMaxBranching(data, root_cluster_key);\n\n    const firstHeight = biggestRank * CYLINDER_HEIGHT / 2 + CYLINDER_HEIGHT;\n    const firstStartPoint = new Point(0, firstHeight, 0);\n    const firstEndPoint = new Point(0, firstHeight - CYLINDER_HEIGHT, 0);\n\n    clustering(scene, data, root_cluster_key, max_branching, firstStartPoint, firstEndPoint, biggestRank);\n  }\n}\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}