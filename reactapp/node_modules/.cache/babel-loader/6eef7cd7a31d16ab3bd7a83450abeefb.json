{"ast":null,"code":"import _slicedToArray from\"/home/xkruzel/Desktop/todo/reactapp/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import*as THREE from'three';import{OrbitControls}from'three/examples/jsm/controls/OrbitControls';import*as dat from'dat.gui';import{Point}from'./Point';export function init3Dgraphics(element,data){if(data===undefined){return false;}var scene=new THREE.Scene();scene.background=new THREE.Color(0xd3d3d3);var camera=new THREE.PerspectiveCamera(75,window.innerWidth/window.innerHeight,0.1,1000);var renderer=new THREE.WebGLRenderer({canvas:element});renderer.setPixelRatio(window.devicePixelRatio);renderer.setSize(window.innerWidth,window.innerHeight);// full size\ncamera.position.setZ(30);// for better perspective\nrenderer.sortObjects=false;renderer.render(scene,camera);var axesHelper=new THREE.AxesHelper(100);scene.add(axesHelper);var gui=new dat.GUI();var options={sphereColor:0xffea00,wireframe:false};var pointLight=new THREE.PointLight(0xffffff);pointLight.position.set(20,20,20);var ambientLight=new THREE.AmbientLight(0xffffff);ambientLight.position.set(20,20,20);scene.add(pointLight,ambientLight);var lightHelper=new THREE.PointLightHelper(pointLight);// shows position of lighsource\nvar gridHelper=new THREE.GridHelper(30,20);scene.add(lightHelper,gridHelper);window.addEventListener('resize',function(){camera.aspect=window.innerWidth/window.innerHeight;camera.updateProjectionMatrix();renderer.setSize(window.innerWidth);});var controls=new OrbitControls(camera,renderer.domElement);// Returns a random integer from 0 to 9:\n//const randomNum = Math.floor(Math.random() * 8); \nprocessClusters(scene,data);function animate(){setTimeout(function(){requestAnimationFrame(animate);},1000/30);controls.update();renderer.render(scene,camera);}renderer.setAnimationLoop(animate);window.addEventListener('resize',function(){camera.aspect=window.innerWidth/window.innerHeight;camera.updateProjectionMatrix();renderer.setSize(window.innerWidth,window.innerHeight);});function createLine(scene,id,startPoint,endPoint,currRadius,nextRadius){var start=new THREE.Vector3(startPoint.x,startPoint.y,startPoint.z);var end=new THREE.Vector3(endPoint.x,endPoint.y,endPoint.z);var color=new THREE.Color(0xffffff);color.setHex(Math.random()*0xffffff);var path=new THREE.LineCurve3(start,end);var geometry=new THREE.TubeGeometry(path,10,0.8,8);var material=new THREE.MeshBasicMaterial({color:color});var mesh=new THREE.Mesh(geometry,material);// scene.add( mesh );\nvar cylinderMesh=function cylinderMesh(startPoint,endPoint,midPoint,currRadius,nextRadius,color){/* edge from X to Y */var direction=new THREE.Vector3().subVectors(endPoint,startPoint);var orientation=new THREE.Matrix4();/* THREE.Object3D().up (=Y) default orientation for all objects */orientation.lookAt(startPoint,endPoint,new THREE.Object3D().up);/* rotation around axis X by -90 degrees \n      * matches the default orientation Y \n      * with the orientation of looking Z */var mat=new THREE.Matrix4();mat.set(1,0,0,0,0,0,1,0,0,-1,0,0,0,0,0,1);orientation.multiply(mat);/* cylinder: radiusAtTop, radiusAtBottom, \n          height, radiusSegments, heightSegments */var edgeGeometry=new THREE.CylinderGeometry(nextRadius,currRadius,direction.length(),8,1);var edge=new THREE.Mesh(edgeGeometry,new THREE.MeshBasicMaterial({color:color}));edge.applyMatrix4(orientation);edge.position.set(midPoint.x,midPoint.y,midPoint.z);return edge;};var midPoint=new Point((startPoint.x+endPoint.x)/2,(startPoint.y+endPoint.y)/2,(startPoint.z+endPoint.z)/2);var cylinder=cylinderMesh(startPoint,endPoint,midPoint,currRadius,nextRadius,color);//new THREE.Mesh(geometryCyl, material);\ncylinder.name=id;scene.add(cylinder);}// prevPoint, point - upper and downer middle points of cylinder\n// dirPoint - point to which direction of cylinder (dir vector) should go \nfunction clustering(scene,data,id,max_branching,branch_count,prevPointFirst,pointFirst){if(id==undefined){console.log(\"Id is undefined in clustering\");return;}var tuple=Object.freeze({id:id,prevPoint:prevPointFirst,point:pointFirst});var stack=[tuple];var all=data.length;var count=0;while(stack.length>0){var stackElement=stack.pop();var current=stackElement.id;var prevPoint=stackElement.prevPoint;var point=stackElement.point;count+=1;console.log(count,\" of \",all);data[current][\"Visualised\"]=true;var cluster=data[current];var childCount=cluster[\"DescCount\"];var childsChildCount=0;for(var i=0;i<cluster[\"Desc\"].length;++i){childsChildCount+=data[cluster[\"Desc\"][i]][\"NodeCount\"];}createLine(scene,current,prevPoint,point,cluster.NodeCount,childsChildCount);var prevPointPointDist=Math.sqrt((point.x-prevPoint.x)*(point.x-prevPoint.x)+(point.y-prevPoint.y)*(point.y-prevPoint.y)+(point.z-prevPoint.z)*(point.z-prevPoint.z));for(var i=0;i<childCount;++i){if(childCount==1){var dirVector=new THREE.Vector3(point.x-prevPoint.x,point.y-prevPoint.y,point.z-prevPoint.z);var newPoint=new Point(dirVector.x+point.x,dirVector.y+point.y,dirVector.z+point.z);var _newStartPoint=new Point(point.x,point.y,point.z);tuple=Object.freeze({id:cluster[\"Desc\"][0],prevPoint:_newStartPoint,point:newPoint});stack.push(tuple);//  dfsClustering(scene, data, cluster[\"Desc\"][0], max_branching, branch_count, point, newPoint);\ncontinue;}// COMPUTE NEW COORDINATES around circle\nvar theta=2*Math.PI/childCount*i;var xPos=Math.cos(theta)*childsChildCount;var zPos=Math.sin(theta)*childsChildCount;// this point is not exactly matching with rotation line\n// it is used to compute vector and later in correct newStartPoint\nvar newStartPointHelper=new Point(point.x+xPos,point.y,point.z+zPos);var vector=new THREE.Vector3(newStartPointHelper.x-prevPoint.x,newStartPointHelper.y-prevPoint.y,newStartPointHelper.z-prevPoint.z).normalize();var distance=Math.sqrt(cluster.NodeCount*cluster.NodeCount+prevPointPointDist*prevPointPointDist);var newStartPoint=new Point(prevPoint.x+distance*vector.x,prevPoint.y+distance*vector.y,prevPoint.z+distance*vector.z);var branch_factor=2-1/max_branching*branch_count;xPos=Math.cos(theta)*childsChildCount*branch_factor;// TODO pronasobit constantov pro urceni mensiho/vetsiho uhlu - v ramci hlbky stromu? \nzPos=Math.sin(theta)*childsChildCount*branch_factor;// TODO\nvar newEndPoint=new Point(newStartPoint.x+xPos,newStartPoint.y-10,newStartPoint.z+zPos);//dfsClustering(scene, data, cluster[\"Desc\"][i], max_branching, branch_count + 1, newStartPoint, newEndPoint);\ntuple=Object.freeze({id:cluster[\"Desc\"][i],prevPoint:newStartPoint,point:newEndPoint});stack.push(tuple);}}}function compMaxBranching(data,key){var stack=[key];var maximums={};var colors={};while(stack.length>0){var current=stack.pop();colors[current]='G';stack.push(current);if(maximums[current]===undefined){maximums[current]=0;}var count_black=0;for(var i=0;i<data[current][\"DescCount\"];++i){if(colors[data[current][\"Desc\"][i]]===undefined){stack.push(data[current][\"Desc\"][i]);}if(colors[data[current][\"Desc\"][i]]==='B'){count_black+=1;maximums[current]=Math.max(maximums[data[current][\"Desc\"][i]],maximums[current]);}}if(count_black==data[current][\"DescCount\"]){colors[current]='B';stack.pop();if(data[current][\"DescCount\"]>1){maximums[current]+=1;}}}return maximums[key];}function processClusters(scene,data){var root_cluster_key=undefined;var maxCluster=1;var biggestRank=0;Object.entries(data).forEach(function(_ref){var _ref2=_slicedToArray(_ref,2),k=_ref2[0],v=_ref2[1];if(v[\"Rank\"]==0){root_cluster_key=k;}biggestRank=Math.max(v[\"Rank\"],biggestRank);maxCluster=Math.max(maxCluster,v.NodeCount);});var max_branching=compMaxBranching(data,root_cluster_key);var cylinders={};var firstHeight=biggestRank*10/2+10;var firstStartPoint=new Point(0,firstHeight,0);var firstEndPoint=new Point(0,firstHeight-10,0);clustering(scene,data,root_cluster_key,max_branching,1,firstStartPoint,firstEndPoint);gui.addColor(options,'sphereColor').onChange(function(e){for(var _i=0,_Object$entries=Object.entries(cylinders);_i<_Object$entries.length;_i++){var _Object$entries$_i=_slicedToArray(_Object$entries[_i],2),key=_Object$entries$_i[0],cylinder=_Object$entries$_i[1];cylinder.material.color.set(e);}});/*\n      gui.add(options, 'wireframe').onChange(function(e) {\n        cylinders.forEach(function(cylinder) {\n          cylinder.material.wireframe = e;\n        });\n      });\n    */}}","map":{"version":3,"names":["THREE","OrbitControls","dat","Point","init3Dgraphics","element","data","undefined","scene","Scene","background","Color","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","canvas","setPixelRatio","devicePixelRatio","setSize","position","setZ","sortObjects","render","axesHelper","AxesHelper","add","gui","GUI","options","sphereColor","wireframe","pointLight","PointLight","set","ambientLight","AmbientLight","lightHelper","PointLightHelper","gridHelper","GridHelper","addEventListener","aspect","updateProjectionMatrix","controls","domElement","processClusters","animate","setTimeout","requestAnimationFrame","update","setAnimationLoop","createLine","id","startPoint","endPoint","currRadius","nextRadius","start","Vector3","x","y","z","end","color","setHex","Math","random","path","LineCurve3","geometry","TubeGeometry","material","MeshBasicMaterial","mesh","Mesh","cylinderMesh","midPoint","direction","subVectors","orientation","Matrix4","lookAt","Object3D","up","mat","multiply","edgeGeometry","CylinderGeometry","length","edge","applyMatrix4","cylinder","name","clustering","max_branching","branch_count","prevPointFirst","pointFirst","console","log","tuple","Object","freeze","prevPoint","point","stack","all","count","stackElement","pop","current","cluster","childCount","childsChildCount","i","NodeCount","prevPointPointDist","sqrt","dirVector","newPoint","newStartPoint","push","theta","PI","xPos","cos","zPos","sin","newStartPointHelper","vector","normalize","distance","branch_factor","newEndPoint","compMaxBranching","key","maximums","colors","count_black","max","root_cluster_key","maxCluster","biggestRank","entries","forEach","k","v","cylinders","firstHeight","firstStartPoint","firstEndPoint","addColor","onChange","e"],"sources":["/home/xkruzel/Desktop/todo/reactapp/src/rendering.js"],"sourcesContent":["import * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport * as dat from 'dat.gui';\nimport { Point } from './Point';\n\nexport function init3Dgraphics(element, data) {\n\n  if (data === undefined) {\n    return false;\n  }\n\n  const scene = new THREE.Scene();\n  scene.background = new THREE.Color( 0xd3d3d3 );\n  const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000)\n  const renderer = new THREE.WebGLRenderer({\n    canvas: element,\n  });\n\n  renderer.setPixelRatio( window.devicePixelRatio );\n  renderer.setSize(window.innerWidth, window.innerHeight); // full size\n  camera.position.setZ(30); // for better perspective\n  renderer.sortObjects = false;\n  renderer.render(scene, camera);\n\n  const axesHelper = new THREE.AxesHelper(100);\n  scene.add(axesHelper);\n\n  const gui = new dat.GUI();\n  const options = {\n    sphereColor : 0xffea00,\n    wireframe: false,\n  };\n    \n  const pointLight = new THREE.PointLight(0xffffff)\n  pointLight.position.set(20, 20, 20);\n\n  const ambientLight = new THREE.AmbientLight(0xffffff)\n  ambientLight.position.set(20, 20, 20);\n\n  scene.add(pointLight, ambientLight);\n\n  const lightHelper = new THREE.PointLightHelper(pointLight);  // shows position of lighsource\n  const gridHelper = new THREE.GridHelper(30, 20);\n\n  scene.add(lightHelper, gridHelper);\n\n  window.addEventListener('resize', function() {\n    camera.aspect = window.innerWidth / window.innerHeight;\n    camera.updateProjectionMatrix();\n    renderer.setSize(window.innerWidth);\n  });\n\n  const controls = new OrbitControls(camera, renderer.domElement);\n\n  // Returns a random integer from 0 to 9:\n  //const randomNum = Math.floor(Math.random() * 8); \n\n  processClusters(scene, data);\n\n  function animate() {\n    setTimeout( function() {\n      requestAnimationFrame( animate );\n    }, 1000 / 30 );\n\n    controls.update();\n    renderer.render(scene, camera);\n  }\n\n  renderer.setAnimationLoop(animate);\n\n  window.addEventListener('resize', function() {\n    camera.aspect = window.innerWidth / window.innerHeight;\n    camera.updateProjectionMatrix();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n  });\n\n  function createLine(scene, id, startPoint, endPoint, currRadius, nextRadius) {\n    const start = new THREE.Vector3( startPoint.x, startPoint.y, startPoint.z );\n    const end = new THREE.Vector3( endPoint.x, endPoint.y, endPoint.z );\n\n\n    const color = new THREE.Color( 0xffffff );\n    color.setHex( Math.random() * 0xffffff );\n\n    const path = new THREE.LineCurve3(start, end);\n    const geometry = new THREE.TubeGeometry( path, 10, 0.8, 8 );\n    const material = new THREE.MeshBasicMaterial( { color: color } );\n    const mesh = new THREE.Mesh( geometry, material );\n  // scene.add( mesh );\n\n    var cylinderMesh = function( startPoint, endPoint, midPoint, currRadius, nextRadius, color ) {\n      /* edge from X to Y */\n      const direction = new THREE.Vector3().subVectors( endPoint, startPoint );\n\n      const orientation = new THREE.Matrix4();\n      /* THREE.Object3D().up (=Y) default orientation for all objects */\n      orientation.lookAt(startPoint, endPoint, new THREE.Object3D().up);\n\n      /* rotation around axis X by -90 degrees \n      * matches the default orientation Y \n      * with the orientation of looking Z */\n      const mat =  new THREE.Matrix4();\n      mat.set(\n        1,0,0,0,\n        0,0,1,0, \n        0,-1,0,0,\n        0,0,0,1\n      );\n      orientation.multiply(mat);\n\n      /* cylinder: radiusAtTop, radiusAtBottom, \n          height, radiusSegments, heightSegments */\n      const edgeGeometry = new THREE.CylinderGeometry( nextRadius, currRadius, direction.length(), 8, 1);\n      const edge = new THREE.Mesh( edgeGeometry, \n              new THREE.MeshBasicMaterial( { color: color } ) );\n\n      edge.applyMatrix4(orientation)\n      edge.position.set(midPoint.x, midPoint.y, midPoint.z);\n      return edge;\n    }\n\n    const midPoint = new Point((startPoint.x + endPoint.x) / 2, (startPoint.y + endPoint.y) / 2, (startPoint.z + endPoint.z) / 2);\n    const cylinder = cylinderMesh(startPoint, endPoint, midPoint, currRadius, nextRadius, color); //new THREE.Mesh(geometryCyl, material);\n\n\n    cylinder.name = id;\n\n    scene.add(cylinder);\n\n  }\n\n  // prevPoint, point - upper and downer middle points of cylinder\n  // dirPoint - point to which direction of cylinder (dir vector) should go \n  function clustering(scene, data, id, max_branching, branch_count, prevPointFirst, pointFirst) {\n\n    if (id == undefined) {\n      console.log(\"Id is undefined in clustering\");\n      return;\n    }\n\n    var tuple = Object.freeze({ id: id, prevPoint: prevPointFirst, point: pointFirst });\n    var stack = [ tuple ];\n\n    const all = data.length;\n    var count = 0;\n\n    while (stack.length > 0) {\n      const stackElement = stack.pop();\n      const current = stackElement.id;\n      const prevPoint = stackElement.prevPoint;\n      const point = stackElement.point;\n\n      count += 1;\n      console.log(count, \" of \", all);\n\n      data[current][\"Visualised\"] = true;\n      var cluster = data[current];\n      const childCount = cluster[\"DescCount\"];\n\n      var childsChildCount = 0;\n      for (var i = 0; i < cluster[\"Desc\"].length; ++i) {\n        childsChildCount += data[cluster[\"Desc\"][i]][\"NodeCount\"];\n      }\n\n      createLine(scene, current, prevPoint, point, cluster.NodeCount, childsChildCount);\n\n      const prevPointPointDist = Math.sqrt((point.x - prevPoint.x) * (point.x - prevPoint.x) + (point.y - prevPoint.y)\n                              * (point.y - prevPoint.y) + (point.z - prevPoint.z) * (point.z - prevPoint.z));\n\n      for (var i = 0; i < childCount; ++i) {\n\n        if (childCount == 1) {\n\n            const dirVector = new THREE.Vector3(point.x - prevPoint.x, point.y - prevPoint.y, point.z - prevPoint.z);\n            const newPoint = new Point(dirVector.x + point.x, dirVector.y + point.y, dirVector.z + point.z);\n            const newStartPoint = new Point(point.x, point.y, point.z);\n\n            tuple = Object.freeze({ id: cluster[\"Desc\"][0], prevPoint: newStartPoint, point: newPoint });\n            stack.push(tuple);\n          \n        //  dfsClustering(scene, data, cluster[\"Desc\"][0], max_branching, branch_count, point, newPoint);\n          continue;\n        }\n\n        // COMPUTE NEW COORDINATES around circle\n        const theta = 2 * Math.PI / childCount * i;\n\n        var xPos = Math.cos(theta) * childsChildCount;\n        var zPos = Math.sin(theta) * childsChildCount;\n        // this point is not exactly matching with rotation line\n        // it is used to compute vector and later in correct newStartPoint\n        const newStartPointHelper = new Point(point.x + xPos, point.y, point.z + zPos);\n\n        const vector = new THREE.Vector3(newStartPointHelper.x - prevPoint.x, newStartPointHelper.y - prevPoint.y, newStartPointHelper.z - prevPoint.z).normalize();\n        const distance = Math.sqrt(cluster.NodeCount * cluster.NodeCount + prevPointPointDist * prevPointPointDist);\n        const newStartPoint = new Point(\n          prevPoint.x + distance * vector.x,\n          prevPoint.y + distance * vector.y,\n          prevPoint.z + distance * vector.z,\n        );\n      \n        const branch_factor = 2 - (1/max_branching * branch_count);\n        xPos = Math.cos(theta) * childsChildCount * branch_factor; // TODO pronasobit constantov pro urceni mensiho/vetsiho uhlu - v ramci hlbky stromu? \n        zPos = Math.sin(theta) * childsChildCount * branch_factor; // TODO\n        const newEndPoint = new Point(newStartPoint.x + xPos, newStartPoint.y - 10, newStartPoint.z + zPos);\n      \n          //dfsClustering(scene, data, cluster[\"Desc\"][i], max_branching, branch_count + 1, newStartPoint, newEndPoint);\n        tuple = Object.freeze({ id: cluster[\"Desc\"][i], prevPoint: newStartPoint, point: newEndPoint });\n        stack.push(tuple);\n      }\n    }\n  }\n\n  function compMaxBranching(data, key) {\n\n    let stack = [ key ];\n    var maximums = {}\n    var colors = {}\n\n    while (stack.length > 0) {\n      const current = stack.pop();\n      colors[current] = 'G';\n      stack.push(current);\n      \n      if (maximums[current] === undefined) {\n        maximums[current] = 0\n      }\n\n      var count_black = 0;\n      for (var i = 0; i < data[current][\"DescCount\"]; ++i) {\n        if (colors[data[current][\"Desc\"][i]] === undefined) {\n          stack.push(data[current][\"Desc\"][i]);\n        } \n\n        if (colors[data[current][\"Desc\"][i]] === 'B') {\n          count_black += 1;\n          maximums[current] = Math.max(maximums[ data[current][\"Desc\"][i] ], maximums[current]);\n        }\n      }\n\n      if (count_black == data[current][\"DescCount\"]) {\n        colors[current] = 'B';\n        stack.pop();\n\n        if (data[current][\"DescCount\"] > 1) {\n          maximums[current] += 1;\n        }\n      }\n    }\n\n    return maximums[key];\n  }\n\n  function processClusters(scene, data) {\n\n    var root_cluster_key = undefined;\n    var maxCluster = 1;\n    var biggestRank = 0;\n    Object.entries(data).forEach(([k,v]) => {\n      if (v[\"Rank\"] == 0) {\n        root_cluster_key = k;\n      }\n      biggestRank = Math.max(v[\"Rank\"], biggestRank);\n      maxCluster = Math.max(maxCluster, v.NodeCount);\n    });\n\n    const max_branching = compMaxBranching(data, root_cluster_key);\n\n    var cylinders = {};\n\n    const firstHeight = biggestRank * 10 / 2 + 10;\n    const firstStartPoint = new Point(0, firstHeight, 0);\n    const firstEndPoint = new Point(0, firstHeight - 10, 0);\n\n    clustering(scene, data, root_cluster_key, max_branching, 1, firstStartPoint, firstEndPoint);\n\n    gui.addColor(options, 'sphereColor').onChange(function(e) {\n\n      for (const [key, cylinder] of Object.entries(cylinders)) {\n        cylinder.material.color.set(e);\n      }\n    });\n    /*\n      gui.add(options, 'wireframe').onChange(function(e) {\n        cylinders.forEach(function(cylinder) {\n          cylinder.material.wireframe = e;\n        });\n      });\n    */\n  }\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}