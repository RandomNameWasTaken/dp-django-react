{"ast":null,"code":"import _slicedToArray from\"/home/xkruzel/Desktop/todo/reactapp/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import*as THREE from'three';import{OrbitControls}from'three/examples/jsm/controls/OrbitControls';import*as dat from'dat.gui';import{Point}from'./Point';import{Font}from'three/examples/jsm/loaders/FontLoader.js';import{TextGeometry}from'three/examples/jsm/geometries/TextGeometry.js';function dec2bin(dec,n){var res=(dec>>>0).toString(2);if(res.length<n){for(var i=0;i<n-res.length;++i){res='0'+res;}}return res;}export function init3Dgraphics(element,data,nodes_ids,shift){if(data===undefined){return false;}var CYLINDER_HEIGHT=5;var scene=new THREE.Scene();//scene.background = new THREE.Color( 0xd3d3d3 );\nscene.background=new THREE.Color(0xf8f2ea);var camera=new THREE.PerspectiveCamera(75,element.width/element.height,0.1,1000);var renderer=new THREE.WebGLRenderer({canvas:element});renderer.setPixelRatio(window.devicePixelRatio);renderer.setSize(element.width,element.height);// full size\ncamera.position.setZ(30);// for better perspective\nrenderer.sortObjects=false;renderer.render(scene,camera);var fontJson=require(\"./fonts/Caviar_Dreams_Bold.json\");var font=new Font(fontJson);var texts=[];var mouse=new THREE.Vector2();var raycaster=new THREE.Raycaster();function onMouseMove(event){// calculate pointer position in normalized device coordinates\n// (-1 to +1) for both components\nmouse.x=event.clientX/element.width*2-1;mouse.y=-(event.clientY/element.height)*2+1;}var axesHelper=new THREE.AxesHelper(100);//scene.add(axesHelper);\nvar gui=new dat.GUI();var options={sphereColor:0xffea00,wireframe:false};var pointLight=new THREE.PointLight(0xffffff);pointLight.position.set(20,20,20);var ambientLight=new THREE.AmbientLight(0xffffff);ambientLight.position.set(20,20,20);scene.add(pointLight,ambientLight);var lightHelper=new THREE.PointLightHelper(pointLight);// shows position of lighsource\nvar gridHelper=new THREE.GridHelper(30,20);//scene.add(lightHelper, gridHelper);\nwindow.addEventListener('resize',function(){camera.aspect=element.width/element.height;camera.updateProjectionMatrix();renderer.setSize(element.width);});var controls=new OrbitControls(camera,renderer.domElement);var nodes_to_id={};function resetMaterials(){for(var i=0;i<scene.children.length;i++){if(scene.children[i].material){scene.children[i].material.opacity=1.0;}}}function hoverPieces(){raycaster.setFromCamera(mouse,camera);var intersects=raycaster.intersectObjects(scene.children);for(var i=0;i<intersects.length;i++){var newMaterial=intersects[i].object.material.clone();newMaterial.transparent=true;newMaterial.opacity=0.5;intersects[i].object.material=newMaterial;}}function onClick(){texts.forEach(function(text){removeObject3D(text);});raycaster.setFromCamera(mouse,camera);var intersects=raycaster.intersectObjects(scene.children);if(intersects.length===1){var obj=intersects[0].object;var text='';nodes_to_id[obj.id].forEach(function(elem){if(text!==''){text+=',';}text+=' (';var bin=dec2bin(elem,nodes_ids.length);for(var i=0;i<bin.length;i++){if(bin[i]==='1'){text+=' '+nodes_ids[i];}}text+=')';});var geometry=new TextGeometry(text,{font:font,size:1,height:1});var textMesh=new THREE.Mesh(geometry,[new THREE.MeshPhongMaterial({color:0x000000})]);textMesh.position.x=obj.position.x;textMesh.position.y=obj.position.y;textMesh.position.z=obj.position.z+10;texts.push(textMesh);scene.add(textMesh);}}function removeObject3D(object3D){if(!(object3D instanceof THREE.Object3D))return false;// for better memory management and performance\nif(object3D.geometry)object3D.geometry.dispose();if(object3D.material){if(object3D.material instanceof Array){// for better memory management and performance\nobject3D.material.forEach(function(material){return material.dispose();});}else{// for better memory management and performance\nobject3D.material.dispose();}}object3D.removeFromParent();// the parent might be the scene or another Object3D, but it is sure to be removed this way\nreturn true;}processClusters(scene,data);data=null;function animate(){setTimeout(function(){requestAnimationFrame(animate);},1000/5);controls.update();resetMaterials();hoverPieces();renderer.render(scene,camera);}renderer.setAnimationLoop(animate);window.addEventListener('click',onClick);window.addEventListener('mousemove',onMouseMove);window.addEventListener('resize',function(){camera.aspect=element.width/element.width;camera.updateProjectionMatrix();renderer.setSize(element.width,element.width);});function calcColor(max,val){return\"hsla(147, 0%, 50%, 1)\";var min=0;var minHue=240,maxHue=0;var curPercent=(val-min)/(max-min);var colString=\"hsl(\"+(curPercent*(maxHue-minHue)+minHue)+\",65%,50%)\";return colString;}function createCylinder(data,id,startPoint,endPoint,currRadius,nextRadius,rank,rank_max,prevClusterId){var color=new THREE.Color(data[id]['Color']===''?calcColor(rank_max,rank):data[id]['Color']);//color.setHex(rank/10 * 0xffffff );\n// color.setHex(rank/10 * 0xffffff );\nvar cylinderMesh=function cylinderMesh(startPoint,endPoint,midPoint,currRadius,nextRadius,color){/* edge from X to Y */var direction=new THREE.Vector3().subVectors(endPoint,startPoint);var orientation=new THREE.Matrix4();/* THREE.Object3D().up (=Y) default orientation for all objects */orientation.lookAt(startPoint,endPoint,new THREE.Object3D().up);/* rotation around axis X by -90 degrees \n      * matches the default orientation Y \n      * with the orientation of looking Z */var mat=new THREE.Matrix4();mat.set(1,0,0,0,0,0,1,0,0,-1,0,0,0,0,0,1);orientation.multiply(mat);/* cylinder: radiusAtTop, radiusAtBottom, \n          height, radiusSegments, heightSegments */var edgeGeometry=new THREE.CylinderGeometry(nextRadius,currRadius,direction.length(),8,1);var cylinder=new THREE.Mesh(edgeGeometry,new THREE.MeshPhongMaterial({color:color,flatShading:true}));cylinder.applyMatrix4(orientation);cylinder.position.set(midPoint.x,midPoint.y,midPoint.z);nodes_to_id[cylinder.id]=data[id][\"Nodes\"]||[];if(prevClusterId!==undefined){var merged=nodes_ids[cylinder.id].concat(nodes_ids[prevClusterId]);nodes_ids[cylinder.id]=merged;}return cylinder;};var midPoint=new Point((startPoint.x+endPoint.x)/2,(startPoint.y+endPoint.y)/2,(startPoint.z+endPoint.z)/2);return cylinderMesh(startPoint,endPoint,midPoint,currRadius,nextRadius,color);//new THREE.Mesh(geometryCyl, material);\n}// prevPoint, point - upper and downer middle points of cylinder\n// dirPoint - point to which direction of cylinder (dir vector) should go \nfunction clustering(scene,data,id,max_branching,branch_count,prevPointFirst,pointFirst,biggestRank){if(id===undefined){console.log(\"Id is undefined in clustering\");return;}var tuple=Object.freeze({id:id,prevPoint:prevPointFirst,point:pointFirst,prevClusterId:undefined});var stack=[tuple];var count=0;while(stack.length>0){++count;var stackElement=stack.pop();var current=stackElement.id;var prevPoint=stackElement.prevPoint;var point=stackElement.point;console.log(current);var cluster=data[current];var childCount=cluster[\"Desc\"].length;var childsChildCount=0;for(var i=0;i<cluster[\"Desc\"].length;++i){childsChildCount+=data[cluster[\"Desc\"][i]][\"NodeCount\"];}var cylinder=createCylinder(data,current,prevPoint,point,cluster.NodeCount,childsChildCount,data[current][\"Rank\"],biggestRank,stackElement.prevClusterId);var prevPointPointDist=Math.sqrt((point.x-prevPoint.x)*(point.x-prevPoint.x)+(point.y-prevPoint.y)*(point.y-prevPoint.y)+(point.z-prevPoint.z)*(point.z-prevPoint.z));for(i=0;i<childCount;++i){if(childCount===1){var newStartPoint=new Point(point.x,point.y,point.z);// to make copy\nvar prevClusterId;if(childsChildCount===cluster[\"Desc\"].length&&childsChildCount!==0&&data[cluster[\"Desc\"][0]][\"Desc\"].length!==0){prevClusterId=cylinder.id;cylinder=undefined;// join same-like cluster to one - draw one cluster with bigger height\nnewStartPoint=new Point(prevPoint.x,prevPoint.y,prevPoint.z);// to make copy\n}var dirVector=new THREE.Vector3(point.x-prevPoint.x,point.y-prevPoint.y,point.z-prevPoint.z);var newPoint=new Point(dirVector.x+point.x,dirVector.y+point.y,dirVector.z+point.z);tuple=Object.freeze({id:cluster[\"Desc\"][0],prevPoint:newStartPoint,point:newPoint,prevClusterId:prevClusterId});stack.push(tuple);continue;}// COMPUTE NEW COORDINATES around circle\nvar theta=2*Math.PI/childCount*i;var xPos=Math.cos(theta)*childsChildCount;var zPos=Math.sin(theta)*childsChildCount;// this point is not exactly matching with rotation line\n// it is used to compute vector and later in correct newStartPoint\nvar newStartPointHelper=new Point(point.x+xPos,point.y,point.z+zPos);var vector=new THREE.Vector3(newStartPointHelper.x-prevPoint.x,newStartPointHelper.y-prevPoint.y,newStartPointHelper.z-prevPoint.z).normalize();var distance=Math.sqrt(cluster.NodeCount*cluster.NodeCount+prevPointPointDist*prevPointPointDist);newStartPoint=new Point(prevPoint.x+distance*vector.x,prevPoint.y+distance*vector.y,prevPoint.z+distance*vector.z);var branch_factor=2-1/max_branching*branch_count;xPos=Math.cos(theta)*childsChildCount*branch_factor;// TODO pronasobit constantov pro urceni mensiho/vetsiho uhlu - v ramci hlbky stromu? \nzPos=Math.sin(theta)*childsChildCount*branch_factor;// TODO\nvar newEndPoint=new Point(newStartPoint.x+xPos,newStartPoint.y-CYLINDER_HEIGHT,newStartPoint.z+zPos);tuple=Object.freeze({id:cluster[\"Desc\"][i],prevPoint:newStartPoint,point:newEndPoint});stack.push(tuple);}if(cylinder!==undefined){scene.add(cylinder);}}}function compMaxBranching(data,key){var stack=[key];var maximums={};var colors={};while(stack.length>0){var current=stack.pop();colors[current]='G';stack.push(current);if(maximums[current]===undefined){maximums[current]=0;}var count_black=0;var desc_count=data[current][\"Desc\"].length;for(var i=0;i<desc_count;++i){if(colors[data[current][\"Desc\"][i]]===undefined){stack.push(data[current][\"Desc\"][i]);}if(colors[data[current][\"Desc\"][i]]==='B'){count_black+=1;maximums[current]=Math.max(maximums[data[current][\"Desc\"][i]],maximums[current]);}}if(count_black===desc_count){colors[current]='B';stack.pop();if(desc_count>1){maximums[current]+=1;}}}return maximums[key];}function processClusters(scene,data){var root_cluster_key=undefined;var maxCluster=1;var biggestRank=0;Object.entries(data).forEach(function(_ref){var _ref2=_slicedToArray(_ref,2),k=_ref2[0],v=_ref2[1];if(v[\"Rank\"]===0){root_cluster_key=k;}biggestRank=Math.max(v[\"Rank\"],biggestRank);maxCluster=Math.max(maxCluster,v.NodeCount);});var max_branching=compMaxBranching(data,root_cluster_key);var firstHeight=biggestRank*CYLINDER_HEIGHT/2+CYLINDER_HEIGHT;var firstStartPoint=new Point(0,firstHeight,0);var firstEndPoint=new Point(0,firstHeight-CYLINDER_HEIGHT,0);clustering(scene,data,root_cluster_key,max_branching,1,firstStartPoint,firstEndPoint,biggestRank);}}","map":{"version":3,"names":["THREE","OrbitControls","dat","Point","Font","TextGeometry","dec2bin","dec","n","res","toString","length","i","init3Dgraphics","element","data","nodes_ids","shift","undefined","CYLINDER_HEIGHT","scene","Scene","background","Color","camera","PerspectiveCamera","width","height","renderer","WebGLRenderer","canvas","setPixelRatio","window","devicePixelRatio","setSize","position","setZ","sortObjects","render","fontJson","require","font","texts","mouse","Vector2","raycaster","Raycaster","onMouseMove","event","x","clientX","y","clientY","axesHelper","AxesHelper","gui","GUI","options","sphereColor","wireframe","pointLight","PointLight","set","ambientLight","AmbientLight","add","lightHelper","PointLightHelper","gridHelper","GridHelper","addEventListener","aspect","updateProjectionMatrix","controls","domElement","nodes_to_id","resetMaterials","children","material","opacity","hoverPieces","setFromCamera","intersects","intersectObjects","newMaterial","object","clone","transparent","onClick","forEach","text","removeObject3D","obj","id","elem","bin","geometry","size","textMesh","Mesh","MeshPhongMaterial","color","z","push","object3D","Object3D","dispose","Array","removeFromParent","processClusters","animate","setTimeout","requestAnimationFrame","update","setAnimationLoop","calcColor","max","val","min","minHue","maxHue","curPercent","colString","createCylinder","startPoint","endPoint","currRadius","nextRadius","rank","rank_max","prevClusterId","cylinderMesh","midPoint","direction","Vector3","subVectors","orientation","Matrix4","lookAt","up","mat","multiply","edgeGeometry","CylinderGeometry","cylinder","flatShading","applyMatrix4","merged","concat","clustering","max_branching","branch_count","prevPointFirst","pointFirst","biggestRank","console","log","tuple","Object","freeze","prevPoint","point","stack","count","stackElement","pop","current","cluster","childCount","childsChildCount","NodeCount","prevPointPointDist","Math","sqrt","newStartPoint","dirVector","newPoint","theta","PI","xPos","cos","zPos","sin","newStartPointHelper","vector","normalize","distance","branch_factor","newEndPoint","compMaxBranching","key","maximums","colors","count_black","desc_count","root_cluster_key","maxCluster","entries","k","v","firstHeight","firstStartPoint","firstEndPoint"],"sources":["/home/xkruzel/Desktop/todo/reactapp/src/rendering.js"],"sourcesContent":["import * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport * as dat from 'dat.gui';\nimport { Point } from './Point';\nimport { Font } from 'three/examples/jsm/loaders/FontLoader.js';\nimport { TextGeometry } from 'three/examples/jsm/geometries/TextGeometry.js';\n\nfunction dec2bin(dec, n) {\n  var res = (dec >>> 0).toString(2);\n\n  if (res.length < n) {\n    for (let i = 0; i < (n - res.length); ++i) {\n      res = '0' + res;\n    }\n  }\n\n  return res;\n}\n\nexport function init3Dgraphics(element, data, nodes_ids, shift) {\n\n  if (data === undefined) {\n    return false;\n  }\n\n  const CYLINDER_HEIGHT = 5;\n\n  const scene = new THREE.Scene();\n  //scene.background = new THREE.Color( 0xd3d3d3 );\n  scene.background = new THREE.Color( 0xf8f2ea);\n  const camera = new THREE.PerspectiveCamera(75, element.width / element.height, 0.1, 1000)\n  const renderer = new THREE.WebGLRenderer({\n    canvas: element,\n  });\n\n  renderer.setPixelRatio( window.devicePixelRatio );\n  renderer.setSize(element.width, element.height); // full size\n  camera.position.setZ(30); // for better perspective\n  renderer.sortObjects = false;\n  renderer.render(scene, camera);\n\n  const fontJson = require( \"./fonts/Caviar_Dreams_Bold.json\" );\n  const font = new Font( fontJson );\n  var texts = [];\n\n  var mouse = new THREE.Vector2();\n  var raycaster = new THREE.Raycaster();\n\n  function onMouseMove( event ) {\n\n    // calculate pointer position in normalized device coordinates\n    // (-1 to +1) for both components\n\n    mouse.x = ( event.clientX / element.width ) * 2 - 1;\n    mouse.y = - ( event.clientY / element.height ) * 2 + 1;\n  }\n\n  const axesHelper = new THREE.AxesHelper(100);\n  //scene.add(axesHelper);\n\n  const gui = new dat.GUI();\n  const options = {\n    sphereColor : 0xffea00,\n    wireframe: false,\n  };\n    \n  const pointLight = new THREE.PointLight(0xffffff)\n  pointLight.position.set(20, 20, 20);\n\n  const ambientLight = new THREE.AmbientLight(0xffffff)\n  ambientLight.position.set(20, 20, 20);\n\n  scene.add(pointLight, ambientLight);\n\n  const lightHelper = new THREE.PointLightHelper(pointLight);  // shows position of lighsource\n  const gridHelper = new THREE.GridHelper(30, 20);\n\n  //scene.add(lightHelper, gridHelper);\n\n  window.addEventListener('resize', function() {\n    camera.aspect = element.width / element.height;\n    camera.updateProjectionMatrix();\n    renderer.setSize(element.width);\n  });\n\n  const controls = new OrbitControls(camera, renderer.domElement);\n\n  var nodes_to_id = {};\n\n\n  function resetMaterials() {\n    for (let i = 0; i < scene.children.length; i++) {\n      if (scene.children[i].material) {\n        scene.children[i].material.opacity = 1.0;\n      }\n    }\n  }\n\n\n  function hoverPieces() {\n    raycaster.setFromCamera(mouse, camera);\n    const intersects = raycaster.intersectObjects(scene.children);\n\n    for (let i = 0; i < intersects.length; i++) {\n      const newMaterial = intersects[i].object.material.clone();\n      newMaterial.transparent = true;\n      newMaterial.opacity = 0.5;\n      intersects[i].object.material = newMaterial;\n    }\n  }\n\n  function onClick() {\n    texts.forEach((text) => { removeObject3D(text) });\n\n    raycaster.setFromCamera(mouse, camera);\n    let intersects = raycaster.intersectObjects(scene.children);\n\n    if (intersects.length === 1) {\n      const obj = intersects[0].object;\n      var text = '';\n      nodes_to_id[obj.id].forEach(function (elem) {\n        if (text !== '') {\n          text += ',';\n        }\n        text += ' (';\n        const bin = dec2bin(elem, nodes_ids.length);\n\n        for (let i = 0; i < bin.length; i++) {\n          if (bin[i] === '1') {\n            text += ' ' + nodes_ids[i];\n          }\n        }\n        text += ')';\n      });\n\n      const geometry = new TextGeometry(text, {\n        font : font,\n        size : 1,\n        height : 1,\n      });\n\n      const textMesh = new THREE.Mesh(geometry, [\n        new THREE.MeshPhongMaterial( { color : 0x000000 } )\n      ]);\n\n      textMesh.position.x = obj.position.x;\n      textMesh.position.y = obj.position.y;\n      textMesh.position.z = obj.position.z + 10;\n\n      texts.push(textMesh);\n      scene.add(textMesh);      \n    }\n  }\n\n  function removeObject3D(object3D) {\n    if (!(object3D instanceof THREE.Object3D)) return false;\n\n    // for better memory management and performance\n    if (object3D.geometry) object3D.geometry.dispose();\n\n    if (object3D.material) {\n        if (object3D.material instanceof Array) {\n            // for better memory management and performance\n            object3D.material.forEach(material => material.dispose());\n        } else {\n            // for better memory management and performance\n            object3D.material.dispose();\n        }\n    }\n    object3D.removeFromParent(); // the parent might be the scene or another Object3D, but it is sure to be removed this way\n    return true;\n}\n\n  processClusters(scene, data);\n  data = null;\n\n  function animate() {\n    setTimeout( function() {\n      requestAnimationFrame( animate );\n    }, 1000 / 5 );\n\n    controls.update();\n    resetMaterials();\n    hoverPieces();\n    renderer.render(scene, camera);\n  }\n\n  renderer.setAnimationLoop(animate);\n\n  window.addEventListener( 'click', onClick );\n  window.addEventListener( 'mousemove', onMouseMove );\n\n  window.addEventListener('resize', function() {\n    camera.aspect = element.width / element.width\n    camera.updateProjectionMatrix();\n    renderer.setSize(element.width, element.width);\n  });\n\n  function calcColor(max, val) {\n    return \"hsla(147, 0%, 50%, 1)\";\n    const min = 0\n    var minHue = 240, maxHue=0;\n    var curPercent = (val - min) / (max-min);\n    var colString = \"hsl(\" + ((curPercent * (maxHue-minHue) ) + minHue) + \",65%,50%)\";\n    return colString;\n  }\n\n  function createCylinder( data, id, startPoint, endPoint, currRadius, nextRadius, rank, rank_max, prevClusterId) {\n    const color = new THREE.Color( data[id]['Color'] === '' ? calcColor(rank_max, rank) : data[id]['Color'] );\n    //color.setHex(rank/10 * 0xffffff );\n   // color.setHex(rank/10 * 0xffffff );\n\n\n    var cylinderMesh = function( startPoint, endPoint, midPoint, currRadius, nextRadius, color ) {\n      /* edge from X to Y */\n      const direction = new THREE.Vector3().subVectors( endPoint, startPoint );\n\n      const orientation = new THREE.Matrix4();\n      /* THREE.Object3D().up (=Y) default orientation for all objects */\n      orientation.lookAt(startPoint, endPoint, new THREE.Object3D().up);\n\n      /* rotation around axis X by -90 degrees \n      * matches the default orientation Y \n      * with the orientation of looking Z */\n      const mat =  new THREE.Matrix4();\n      mat.set(\n        1,0,0,0,\n        0,0,1,0, \n        0,-1,0,0,\n        0,0,0,1\n      );\n      orientation.multiply(mat);\n\n      /* cylinder: radiusAtTop, radiusAtBottom, \n          height, radiusSegments, heightSegments */\n      const edgeGeometry = new THREE.CylinderGeometry( nextRadius, currRadius, direction.length(), 8, 1);\n      const cylinder = new THREE.Mesh( edgeGeometry, \n              new THREE.MeshPhongMaterial( { color: color, flatShading : true } ) );\n\n      cylinder.applyMatrix4(orientation)\n      cylinder.position.set(midPoint.x, midPoint.y, midPoint.z);\n      nodes_to_id[cylinder.id] = data[id][\"Nodes\"] || [];\n\n \n      if (prevClusterId !== undefined) {\n        const merged = nodes_ids[cylinder.id].concat(nodes_ids[prevClusterId]);\n        nodes_ids[cylinder.id] = merged;\n      }\n    \n\n      return cylinder;\n    }\n\n    const midPoint = new Point((startPoint.x + endPoint.x) / 2, (startPoint.y + endPoint.y) / 2, (startPoint.z + endPoint.z) / 2);\n    return cylinderMesh(startPoint, endPoint, midPoint, currRadius, nextRadius, color); //new THREE.Mesh(geometryCyl, material);\n\n  }\n\n  // prevPoint, point - upper and downer middle points of cylinder\n  // dirPoint - point to which direction of cylinder (dir vector) should go \n  function clustering(scene, data, id, max_branching, branch_count, prevPointFirst, pointFirst, biggestRank) {\n\n    if (id === undefined) {\n      console.log(\"Id is undefined in clustering\");\n      return;\n    }\n\n    var tuple = Object.freeze({ id: id, prevPoint: prevPointFirst, point: pointFirst, prevClusterId : undefined });\n    var stack = [ tuple ];\n \n    var count = 0\n\n    while (stack.length > 0) {\n      ++count;\n      const stackElement = stack.pop();\n      const current = stackElement.id;\n      const prevPoint = stackElement.prevPoint;\n      const point = stackElement.point;\n\n      console.log(current);\n\n      var cluster = data[current];\n      const childCount = cluster[\"Desc\"].length;\n\n      var childsChildCount = 0;\n      for (var i = 0; i < cluster[\"Desc\"].length; ++i) {\n        childsChildCount += data[cluster[\"Desc\"][i]][\"NodeCount\"];\n      }\n\n      var cylinder = createCylinder(data, current, prevPoint, point, cluster.NodeCount, childsChildCount, data[current][\"Rank\"], biggestRank, stackElement.prevClusterId);\n\n      const prevPointPointDist = Math.sqrt((point.x - prevPoint.x) * (point.x - prevPoint.x) + (point.y - prevPoint.y)\n                              * (point.y - prevPoint.y) + (point.z - prevPoint.z) * (point.z - prevPoint.z));\n\n      for (i = 0; i < childCount; ++i) {\n\n        if (childCount === 1) {\n\n            var newStartPoint = new Point(point.x, point.y, point.z); // to make copy\n\n            var prevClusterId;\n            if (childsChildCount === cluster[\"Desc\"].length && childsChildCount !== 0 && data[cluster[\"Desc\"][0]][\"Desc\"].length !== 0) {\n              prevClusterId = cylinder.id;\n              cylinder = undefined; // join same-like cluster to one - draw one cluster with bigger height\n              newStartPoint = new Point(prevPoint.x, prevPoint.y, prevPoint.z); // to make copy\n            }\n\n            const dirVector = new THREE.Vector3(point.x - prevPoint.x, point.y - prevPoint.y, point.z - prevPoint.z);\n            const newPoint = new Point(dirVector.x + point.x, dirVector.y + point.y, dirVector.z + point.z);\n\n            tuple = Object.freeze({ id: cluster[\"Desc\"][0], prevPoint: newStartPoint, point: newPoint, prevClusterId: prevClusterId });\n            stack.push(tuple);\n          \n          continue;\n        }\n\n        // COMPUTE NEW COORDINATES around circle\n        const theta = 2 * Math.PI / childCount * i;\n\n        var xPos = Math.cos(theta) * childsChildCount;\n        var zPos = Math.sin(theta) * childsChildCount;\n        // this point is not exactly matching with rotation line\n        // it is used to compute vector and later in correct newStartPoint\n        const newStartPointHelper = new Point(point.x + xPos, point.y, point.z + zPos);\n\n        const vector = new THREE.Vector3(newStartPointHelper.x - prevPoint.x, newStartPointHelper.y - prevPoint.y, newStartPointHelper.z - prevPoint.z).normalize();\n        const distance = Math.sqrt(cluster.NodeCount * cluster.NodeCount + prevPointPointDist * prevPointPointDist);\n        newStartPoint = new Point(\n          prevPoint.x + distance * vector.x,\n          prevPoint.y + distance * vector.y,\n          prevPoint.z + distance * vector.z,\n        );\n      \n        const branch_factor = 2 - (1/max_branching * branch_count);\n        xPos = Math.cos(theta) * childsChildCount * branch_factor; // TODO pronasobit constantov pro urceni mensiho/vetsiho uhlu - v ramci hlbky stromu? \n        zPos = Math.sin(theta) * childsChildCount * branch_factor; // TODO\n        const newEndPoint = new Point(newStartPoint.x + xPos, newStartPoint.y - CYLINDER_HEIGHT, newStartPoint.z + zPos);\n      \n        tuple = Object.freeze({ id: cluster[\"Desc\"][i], prevPoint: newStartPoint, point: newEndPoint });\n        stack.push(tuple);\n      }\n\n      if (cylinder !== undefined) {\n        scene.add(cylinder);\n      }\n\n    }\n  }\n\n  function compMaxBranching(data, key) {\n\n    let stack = [ key ];\n    var maximums = {}\n    var colors = {}\n\n    while (stack.length > 0) {\n      const current = stack.pop();\n      colors[current] = 'G';\n      stack.push(current);\n      \n      if (maximums[current] === undefined) {\n        maximums[current] = 0\n      }\n\n      var count_black = 0;\n      const desc_count = data[current][\"Desc\"].length;\n      for (var i = 0; i < desc_count; ++i) {\n        if (colors[data[current][\"Desc\"][i]] === undefined) {\n          stack.push(data[current][\"Desc\"][i]);\n        } \n\n        if (colors[data[current][\"Desc\"][i]] === 'B') {\n          count_black += 1;\n          maximums[current] = Math.max(maximums[ data[current][\"Desc\"][i] ], maximums[current]);\n        }\n      }\n\n      if (count_black === desc_count) {\n        colors[current] = 'B';\n        stack.pop();\n\n        if (desc_count > 1) {\n          maximums[current] += 1;\n        }\n      }\n    }\n\n    return maximums[key];\n  }\n\n  function processClusters(scene, data) {\n\n    var root_cluster_key = undefined;\n    var maxCluster = 1;\n    var biggestRank = 0;\n    Object.entries(data).forEach(([k,v]) => {\n      if (v[\"Rank\"] === 0) {\n        root_cluster_key = k;\n      }\n      biggestRank = Math.max(v[\"Rank\"], biggestRank);\n      maxCluster = Math.max(maxCluster, v.NodeCount);\n    });\n\n    const max_branching = compMaxBranching(data, root_cluster_key);\n\n    const firstHeight = biggestRank * CYLINDER_HEIGHT / 2 + CYLINDER_HEIGHT;\n    const firstStartPoint = new Point(0, firstHeight, 0);\n    const firstEndPoint = new Point(0, firstHeight - CYLINDER_HEIGHT, 0);\n\n    clustering(scene, data, root_cluster_key, max_branching, 1, firstStartPoint, firstEndPoint, biggestRank);\n  }\n}\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}